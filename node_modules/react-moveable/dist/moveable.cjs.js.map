{"version":3,"file":"moveable.cjs.js","sources":["../src/react-moveable/ables/AbleManager.ts","../src/react-moveable/consts.ts","../src/react-moveable/gesto/CustomGesto.ts","../src/react-moveable/gesto/GestoUtils.ts","../src/react-moveable/gesto/GestoData.ts","../src/react-moveable/utils.tsx","../src/react-moveable/ables/Pinchable.ts","../src/react-moveable/groupUtils.ts","../src/react-moveable/ables/snappable/utils.ts","../src/react-moveable/ables/snappable/snap.ts","../src/react-moveable/ables/snappable/innerBounds.ts","../src/react-moveable/ables/snappable/bounds.ts","../src/react-moveable/ables/snappable/render.tsx","../src/react-moveable/ables/snappable/snapBounds.ts","../src/react-moveable/ables/snappable/getTotalGuidelines.ts","../src/react-moveable/ables/Snappable.tsx","../src/react-moveable/renderDirections.tsx","../src/react-moveable/ables/Draggable.tsx","../src/react-moveable/ables/Resizable.ts","../src/react-moveable/ables/Rotatable.tsx","../src/react-moveable/ables/Scalable.ts","../src/react-moveable/ables/Warpable.tsx","../src/react-moveable/classNames.ts","../src/react-moveable/ables/DragArea.tsx","../src/react-moveable/ables/Origin.tsx","../src/react-moveable/ables/Scrollable.ts","../src/react-moveable/ables/Default.ts","../src/react-moveable/ables/Padding.tsx","../src/react-moveable/ables/roundable/borderRadius.tsx","../src/react-moveable/ables/Clippable.tsx","../src/react-moveable/ables/OriginDraggable.tsx","../src/react-moveable/ables/Roundable.tsx","../src/react-moveable/ables/BeforeRenderable.ts","../src/react-moveable/ables/Renderable.ts","../src/react-moveable/gesto/getAbleGesto.ts","../src/react-moveable/EventManager.ts","../src/react-moveable/utils/getMatrixStackInfo.ts","../src/react-moveable/utils/calculateMatrixStack.ts","../src/react-moveable/utils/getElementInfo.ts","../src/react-moveable/utils/getMoveableTargetInfo.ts","../src/react-moveable/MoveableManager.tsx","../src/react-moveable/ables/Groupable.tsx","../src/react-moveable/ables/Clickable.ts","../src/react-moveable/ables/edgeDraggable.tsx","../src/react-moveable/ables/IndividualGroupable.tsx","../src/react-moveable/ables/consts.ts","../src/react-moveable/Snappable/utils.ts","../src/react-moveable/MoveableGroup.tsx","../src/react-moveable/MoveableIndividualGroup.tsx","../src/react-moveable/InitialMoveable.tsx","../src/react-moveable/Moveable.tsx","../src/react-moveable/makeMoveable.ts","../src/react-moveable/index.umd.ts"],"sourcesContent":["import { Able, DefaultProps } from \"../types\";\n\nexport function makeAble<\n    Name extends string,\n    AbleObject extends Partial<Able<any, any>>,\n    Props extends DefaultProps<Name, AbleObject>,\n>(name: Name, able: AbleObject) {\n    return {\n        events: {} as const,\n        props: {\n            [name]: Boolean,\n        } as Props,\n        name,\n        ...able,\n    } as const;\n}\n","import getAgent from \"@egjs/agent\";\nimport { IObject } from \"@daybrush/utils\";\nimport { MoveableInterface } from \"./types\";\n\nfunction getSVGCursor(scale: number, degree: number) {\n    return `data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${32 * scale}px\" height=\"${32 * scale}px\" viewBox=\"0 0 32 32\" ><path d=\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\" stroke-linejoin=\"round\" stroke-width=\"1.2\" fill=\"black\" stroke=\"white\" style=\"transform:rotate(${degree}deg);transform-origin: 16px 16px\"></path></svg>`;\n}\nfunction getCursorCSS(degree: number) {\n    const x1 = getSVGCursor(1, degree);\n    // const x2 = getSVGCursor(2, degree);\n    const degree45 = (Math.round(degree / 45) * 45) % 180;\n    let defaultCursor = \"ns-resize\";\n\n    if (degree45 === 135) {\n        defaultCursor = \"nwse-resize\";\n    } else if (degree45 === 45) {\n        defaultCursor = \"nesw-resize\";\n    } else if (degree45 === 90) {\n        defaultCursor = \"ew-resize\";\n    }\n\n    // tslint:disable-next-line: max-line-length\n    return `cursor:${defaultCursor};cursor: url('${x1}') 16 16, ${defaultCursor};`;\n}\n\nexport const agent = getAgent();\nexport const IS_WEBKIT = agent.browser.webkit;\nexport const IS_WEBKIT605 = IS_WEBKIT && (() => {\n    const navi = typeof window === \"undefined\" ? { userAgent: \"\" } : window.navigator;\n    const res = /applewebkit\\/([^\\s]+)/g.exec(navi.userAgent.toLowerCase());\n\n    return res ? parseFloat(res[1]) < 605 : false;\n})();\n\nexport const IS_FIREFOX = agent.browser.name === \"firefox\";\nexport const IS_SAFARI_ABOVE15\n    = parseInt(agent.browser.webkitVersion, 10) >= 612\n    || parseInt(agent.browser.version, 10) >= 15;\n\nexport const PREFIX = \"moveable-\";\nexport const MOVEABLE_CSS = `\n{\n\tposition: absolute;\n\twidth: 1px;\n\theight: 1px;\n\tleft: 0;\n\ttop: 0;\n    z-index: 3000;\n    --moveable-color: #4af;\n    --zoom: 1;\n    --zoompx: 1px;\n    will-change: transform;\n}\n.control-box {\n    z-index: 0;\n}\n.line, .control {\n    position: absolute;\n\tleft: 0;\n    top: 0;\n    will-change: transform;\n}\n.control {\n\twidth: 14px;\n\theight: 14px;\n\tborder-radius: 50%;\n\tborder: 2px solid #fff;\n\tbox-sizing: border-box;\n    background: #4af;\n    background: var(--moveable-color);\n\tmargin-top: -7px;\n    margin-left: -7px;\n    border: 2px solid #fff;\n    z-index: 10;\n}\n.padding {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 100px;\n    height: 100px;\n    transform-origin: 0 0;\n}\n.line {\n\twidth: 1px;\n    height: 1px;\n    background: #4af;\n    background: var(--moveable-color);\n\ttransform-origin: 0px 50%;\n}\n.line.edge {\n    z-index: 1;\n    background: transparent;\n}\n.line.dashed {\n    box-sizing: border-box;\n    background: transparent;\n}\n.line.dashed.horizontal {\n    border-top: 1px dashed #4af;\n    border-top-color: #4af;\n    border-top-color: var(--moveable-color);\n}\n.line.dashed.vertical {\n    border-left: 1px dashed #4af;\n    border-left-color: #4af;\n    border-left-color: var(--moveable-color);\n}\n.line.vertical {\n    transform: translateX(-50%);\n}\n.line.horizontal {\n    transform: translateY(-50%);\n}\n.line.vertical.bold {\n    width: 2px;\n}\n.line.horizontal.bold {\n    height: 2px;\n}\n\n.control.origin {\n\tborder-color: #f55;\n\tbackground: #fff;\n\twidth: 12px;\n\theight: 12px;\n\tmargin-top: -6px;\n    margin-left: -6px;\n\tpointer-events: none;\n}\n${[0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(degree => `\n.direction[data-rotation=\"${degree}\"], :global .view-control-rotation${degree} {\n\t${getCursorCSS(degree)}\n}\n`).join(\"\\n\")}\n.group {\n    z-index: -1;\n}\n.area {\n    position: absolute;\n}\n.area-pieces {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: none;\n}\n.area.avoid, .area.pass {\n    pointer-events: none;\n}\n.area.avoid+.area-pieces {\n    display: block;\n}\n.area-piece {\n    position: absolute;\n}\n\n${IS_WEBKIT605 ? `:global svg *:before {\n\tcontent:\"\";\n\ttransform-origin: inherit;\n}` : \"\"}\n`;\nexport const DRAGGER_EVENTS = [\"dragstart\", \"drag\", \"dragend\", \"pinchstart\", \"pinch\", \"pinchend\"];\n\nexport const NEARBY_POS = [\n    [0, 1, 2],\n    [1, 0, 3],\n    [2, 0, 3],\n    [3, 1, 2],\n];\n\nexport const FLOAT_POINT_NUM = 0.0001;\nexport const TINY_NUM = 0.0000001;\nexport const MIN_SCALE = 0.000000001;\nexport const MAX_NUM = Math.pow(10, 10);\nexport const MIN_NUM = -MAX_NUM;\n\n\nexport const DIRECTIONS4 = [\"n\", \"w\", \"s\", \"e\"];\nexport const DIRECTIONS = [\"n\", \"w\", \"s\", \"e\", \"nw\", \"ne\", \"sw\", \"se\"];\n\nexport const DIRECTION_REGION_TO_DIRECTION: Record<string, number[]> = {\n    n: [0, -1],\n    e: [1, 0],\n    s: [0, 1],\n    w: [-1, 0],\n    nw: [-1, -1],\n    ne: [1, -1],\n    sw: [-1, 1],\n    se: [1, 1],\n};\n\nexport const DIRECTION_INDEXES: IObject<number[]> = {\n    n: [0, 1],\n    e: [1, 3],\n    s: [3, 2],\n    w: [2, 0],\n    nw: [0],\n    ne: [1],\n    sw: [2],\n    se: [3],\n};\nexport const DIRECTION_ROTATIONS: IObject<number> = {\n    n: 0,\n    s: 180,\n    w: 270,\n    e: 90,\n    nw: 315,\n    ne: 45,\n    sw: 225,\n    se: 135,\n};\n\nexport const MOVEABLE_METHODS: Array<keyof MoveableInterface> = [\n    \"isMoveableElement\",\n    \"updateRect\",\n    \"updateTarget\",\n    \"destroy\",\n    \"dragStart\",\n    \"isInside\",\n    \"hitTest\",\n    \"setState\",\n    \"getRect\",\n    \"request\",\n    \"isDragging\",\n    \"getManager\",\n    \"forceUpdate\",\n    \"waitToChangeTarget\",\n    \"updateSelectors\",\n    \"getTargets\",\n];\n","import { MoveableManagerState, OnCustomDrag } from \"../types\";\nimport { convertDragDist } from \"../utils\";\n\nexport function setCustomDrag(\n    e: any,\n    state: MoveableManagerState<any>,\n    delta: number[],\n    isPinch: boolean,\n    isConvert: boolean,\n    ableName = \"draggable\",\n) {\n    const result = state.gestos[ableName].move(delta, e.inputEvent);\n    const datas = result.originalDatas || result.datas;\n    const ableDatas = datas[ableName] || (datas[ableName] = {});\n\n    return {\n        ...(isConvert ? convertDragDist(state, result) : result),\n        isPinch: !!isPinch,\n        parentEvent: true,\n        datas: ableDatas,\n        originalDatas: e.originalDatas,\n    };\n}\n\nexport default class CustomGesto {\n    private prevX = 0;\n    private prevY = 0;\n    private startX = 0;\n    private startY = 0;\n    private isDrag = false;\n    private isFlag = false;\n    private datas: any = {\n        draggable: {},\n    };\n    constructor(private ableName = \"draggable\") {\n        this.datas = {\n            [ableName]: {},\n        };\n    }\n\n    public dragStart(client: number[], e: any) {\n        this.isDrag = false;\n        this.isFlag = false;\n        const originalDatas = e.originalDatas;\n\n        this.datas = originalDatas;\n        if (!originalDatas[this.ableName]) {\n            originalDatas[this.ableName] = {};\n        }\n        return {\n            ...this.move(client, e.inputEvent),\n            type: \"dragstart\",\n        };\n    }\n    public drag(client: number[], inputEvent: any) {\n        return this.move([\n            client[0] - this.prevX,\n            client[1] - this.prevY,\n        ], inputEvent);\n    }\n    public move(delta: number[], inputEvent: any): OnCustomDrag {\n        let clientX!: number;\n        let clientY!: number;\n        if (!this.isFlag) {\n            this.prevX = delta[0];\n            this.prevY = delta[1];\n            this.startX = delta[0];\n            this.startY = delta[1];\n\n            clientX = delta[0];\n            clientY = delta[1];\n\n            this.isFlag = true;\n        } else {\n            clientX = this.prevX + delta[0];\n            clientY = this.prevY + delta[1];\n\n            if (delta[0] || delta[1]) {\n                this.isDrag = true;\n            }\n        }\n\n        this.prevX = clientX;\n        this.prevY = clientY;\n\n        return {\n            type: \"drag\",\n            clientX,\n            clientY,\n            inputEvent,\n            isDrag: this.isDrag,\n            distX: clientX - this.startX,\n            distY: clientY - this.startY,\n            deltaX: delta[0],\n            deltaY: delta[1],\n            datas: this.datas[this.ableName],\n            originalDatas: this.datas,\n            parentEvent: true,\n            parentGesto: this,\n        };\n    }\n}\n","\nimport {\n    invert, calculate, minus, plus,\n    convertPositionMatrix,\n    createScaleMatrix, multiply, fromTranslation, convertDimension,\n} from \"@scena/matrix\";\nimport {\n    calculatePoses, getAbsoluteMatrix, getAbsolutePosesByState,\n    calculatePosition, calculateInversePosition, calculateMoveablePosition, convertTransformInfo, fillCSSObject,\n} from \"../utils\";\nimport { splitUnit, isArray, splitSpace, findIndex, dot, find } from \"@daybrush/utils\";\nimport {\n    MoveableManagerState, ResizableProps, MoveableManagerInterface,\n    OnTransformEvent, OnTransformStartEvent, DraggableProps, OnDrag,\n} from \"../types\";\nimport { setCustomDrag } from \"./CustomGesto\";\nimport { parse, parseMat } from \"css-to-mat\";\nimport { Draggable } from \"../index.esm\";\n\nexport function calculatePointerDist(moveable: MoveableManagerInterface, e: any) {\n    const { clientX, clientY, datas } = e;\n    const {\n        moveableClientRect,\n        rootMatrix,\n        is3d,\n        pos1,\n    } = moveable.state;\n    const { left, top } = moveableClientRect;\n    const n = is3d ? 4 : 3;\n    const [posX, posY] = minus(calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n), pos1);\n    const [distX, distY] = getDragDist({ datas, distX: posX, distY: posY });\n\n    return [distX, distY];\n}\n\nexport function setDragStart(moveable: MoveableManagerInterface<any>, { datas }: any) {\n    const {\n        allMatrix,\n        beforeMatrix,\n        is3d,\n        left,\n        top,\n        origin,\n        offsetMatrix,\n        targetMatrix,\n        transformOrigin,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n\n    datas.is3d = is3d;\n    datas.matrix = allMatrix;\n    datas.targetMatrix = targetMatrix;\n    datas.beforeMatrix = beforeMatrix;\n    datas.offsetMatrix = offsetMatrix;\n    datas.transformOrigin = transformOrigin;\n    datas.inverseMatrix = invert(allMatrix, n);\n    datas.inverseBeforeMatrix = invert(beforeMatrix, n);\n    datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\n    datas.startDragBeforeDist = calculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\n    datas.startDragDist = calculate(datas.inverseMatrix, datas.absoluteOrigin, n);\n}\nexport function getTransformDirection(e: any) {\n    return calculateMoveablePosition(e.datas.beforeTransform, [50, 50], 100, 100).direction;\n}\nexport function resolveTransformEvent(event: any, functionName: string) {\n    const {\n        datas,\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = event;\n\n    const index = datas.transformIndex;\n\n\n    const nextTransforms = originalDatas.nextTransforms;\n    const length = nextTransforms.length;\n    const nextTransformAppendedIndexes: any[] = originalDatas.nextTransformAppendedIndexes;\n    let nextIndex = 0;\n\n    if (index === -1) {\n        nextIndex = nextTransforms.length;\n        datas.transformIndex = nextIndex;\n    } else if (find(nextTransformAppendedIndexes, info => info.index === index && info.functionName === functionName)) {\n        nextIndex = index;\n    } else {\n        nextIndex = index + nextTransformAppendedIndexes.filter(info => info.index < index).length;\n    }\n\n    const result = convertTransformInfo(nextTransforms, nextIndex);\n    const targetFunction = result.targetFunction;\n    const matFunctionName = functionName === \"rotate\" ? \"rotateZ\" : functionName;\n\n    datas.beforeFunctionTexts = result.beforeFunctionTexts;\n    datas.afterFunctionTexts = result.afterFunctionTexts;\n    datas.beforeTransform = result.beforeFunctionMatrix;\n    datas.beforeTransform2 = result.beforeFunctionMatrix2;\n    datas.targetTansform = result.targetFunctionMatrix;\n    datas.afterTransform = result.afterFunctionMatrix;\n    datas.afterTransform2 = result.afterFunctionMatrix2;\n    datas.targetAllTransform = result.allFunctionMatrix;\n\n    if (targetFunction.functionName === matFunctionName) {\n        datas.afterFunctionTexts.splice(0, 1);\n        datas.isAppendTransform = false;\n    } else if (length > nextIndex) {\n        datas.isAppendTransform = true;\n\n        originalDatas.nextTransformAppendedIndexes = [...nextTransformAppendedIndexes, {\n            functionName,\n            index: nextIndex,\n            isAppend: true,\n        }];\n    }\n}\n\nexport function convertTransformFormat(datas: any, value: any, dist: any) {\n    return `${datas.beforeFunctionTexts.join(\" \")} ${datas.isAppendTransform ? dist : value} ${datas.afterFunctionTexts.join(\" \")}`;\n}\nexport function getTransformDist({ datas, distX, distY }: any) {\n    const [bx, by] = getBeforeDragDist({ datas, distX, distY });\n    // B * [tx, ty] * A = [bx, by] * targetMatrix;\n    // [tx, ty] = B-1 * [bx, by] * targetMatrix * A-1 * [0, 0];\n\n    const res = getTransfromMatrix(datas, fromTranslation([bx, by], 4));\n\n    return calculate(res, convertPositionMatrix([0, 0, 0], 4), 4);\n}\nexport function getTransfromMatrix(datas: any, targetMatrix: number[], isAfter?: boolean) {\n    const {\n        beforeTransform,\n        afterTransform,\n        beforeTransform2,\n        afterTransform2,\n        targetAllTransform,\n    } = datas;\n\n    // B * afterTargetMatrix * A = (targetMatrix * targetAllTransform)\n    // afterTargetMatrix = B-1 * targetMatrix * targetAllTransform * A-1\n    // nextTargetMatrix = (targetMatrix * targetAllTransform)\n    const nextTargetMatrix\n        = isAfter\n            ? multiply(targetAllTransform, targetMatrix, 4)\n            : multiply(targetMatrix, targetAllTransform, 4);\n\n    // res1 = B-1 * nextTargetMatrix\n    const res1 = multiply(invert(isAfter ? beforeTransform2 : beforeTransform, 4), nextTargetMatrix, 4);\n\n    // res3 = res2 * A-1\n    const afterTargetMatrix = multiply(res1, invert(isAfter ? afterTransform2 : afterTransform, 4), 4);\n\n    return afterTargetMatrix;\n}\nexport function getBeforeDragDist({ datas, distX, distY }: any) {\n    // TT = BT\n    const {\n        inverseBeforeMatrix,\n        is3d,\n        startDragBeforeDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    // ABS_ORIGIN * [distX, distY] = BM * (ORIGIN + [tx, ty])\n    // BM -1 * ABS_ORIGIN * [distX, distY] - ORIGIN = [tx, ty]\n    return minus(\n        calculate(\n            inverseBeforeMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        startDragBeforeDist,\n    );\n}\nexport function getDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        inverseBeforeMatrix,\n        inverseMatrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? inverseBeforeMatrix : inverseMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        isBefore ? startDragBeforeDist : startDragDist,\n    );\n}\nexport function getInverseDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        beforeMatrix,\n        matrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        calculate(\n            isBefore ? beforeMatrix : matrix,\n            plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]),\n            n,\n        ),\n        absoluteOrigin,\n    );\n}\n\nexport function calculateTransformOrigin(\n    transformOrigin: string[],\n    width: number,\n    height: number,\n    prevWidth: number = width,\n    prevHeight: number = height,\n    prevOrigin: number[] = [0, 0],\n) {\n\n    if (!transformOrigin) {\n        return prevOrigin;\n    }\n    return transformOrigin.map((pos, i) => {\n        const { value, unit } = splitUnit(pos);\n\n        const prevSize = (i ? prevHeight : prevWidth);\n        const size = (i ? height : width);\n        if (pos === \"%\" || isNaN(value)) {\n            // no value but %\n\n            const measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\n\n            return size * measureRatio;\n        } else if (unit !== \"%\") {\n            return value;\n        }\n        return size * value / 100;\n    });\n}\nexport function getPosIndexesByDirection(direction: number[]) {\n    const indexes: number[] = [];\n\n    if (direction[1] >= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(3);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(2);\n        }\n    }\n    if (direction[1] <= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(1);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(0);\n        }\n    }\n    return indexes;\n}\nexport function getPosesByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    return getPosIndexesByDirection(direction).map(index => poses[index]);\n}\nexport function getPosByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    const xRatio = (direction[0] + 1) / 2;\n    const yRatio = (direction[1] + 1) / 2;\n\n    const top = [\n        dot(poses[0][0], poses[1][0], xRatio, 1 - xRatio),\n        dot(poses[0][1], poses[1][1], xRatio, 1 - xRatio),\n    ];\n    const bottom = [\n        dot(poses[2][0], poses[3][0], xRatio, 1 - xRatio),\n        dot(poses[2][1], poses[3][1], xRatio, 1 - xRatio),\n    ];\n    return [\n        dot(top[0], bottom[0], yRatio, 1 - yRatio),\n        dot(top[1], bottom[1], yRatio, 1 - yRatio),\n    ];\n}\n\nfunction getDist(\n    startPos: number[],\n    matrix: number[],\n    width: number,\n    height: number,\n    n: number,\n    fixedDirection: number[],\n) {\n    const poses = calculatePoses(matrix, width, height, n);\n    const fixedPos = getPosByDirection(poses, fixedDirection);\n    const distX = startPos[0] - fixedPos[0];\n    const distY = startPos[1] - fixedPos[1];\n\n    return [distX, distY];\n}\nexport function getNextMatrix(\n    offsetMatrix: number[],\n    targetMatrix: number[],\n    origin: number[],\n    n: number,\n) {\n    return multiply(\n        offsetMatrix,\n        getAbsoluteMatrix(targetMatrix, n, origin),\n        n,\n    );\n}\nexport function getNextTransformMatrix(\n    state: MoveableManagerState<any>,\n    datas: any,\n    transform: string,\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n    } = state;\n    const {\n        beforeTransform,\n        afterTransform,\n    } = datas;\n    const n = is3d ? 4 : 3;\n    const targetTransform = parseMat([transform]);\n\n    return getNextMatrix(\n        offsetMatrix,\n        convertDimension(multiply(multiply(beforeTransform, targetTransform as any, 4), afterTransform, 4), 4, n),\n        transformOrigin,\n        n,\n    );\n}\nexport function scaleMatrix(\n    state: MoveableManagerState<any>,\n    scale: number[],\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n        targetMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    return getNextMatrix(\n        offsetMatrix,\n        multiply(targetMatrix, createScaleMatrix(scale, n), n),\n        transformOrigin,\n        n,\n    );\n}\n\nexport function fillTransformStartEvent(e: any): OnTransformStartEvent {\n    const originalDatas = getBeforeRenderableDatas(e);\n    return {\n        setTransform: (transform: string | string[], index = -1) => {\n            originalDatas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            setTransformIndex(e, index);\n        },\n        setTransformIndex: (index: number) => {\n            setTransformIndex(e, index);\n        },\n    };\n}\nexport function setDefaultTransformIndex(e: any, property: string) {\n    const originalDatas = getBeforeRenderableDatas(e);\n    const startTransforms = originalDatas.startTransforms;\n\n    setTransformIndex(e, findIndex<string>(startTransforms, func => func.indexOf(`${property}(`) === 0));\n}\nexport function setTransformIndex(e: any, index: number) {\n    const originalDatas = getBeforeRenderableDatas(e);\n    const datas = e.datas;\n\n    datas.transformIndex = index;\n    if (index === -1) {\n        return;\n    }\n    const transform = originalDatas.startTransforms[index];\n\n    if (!transform) {\n        return;\n    }\n    const info = parse([transform]);\n\n    datas.startValue = info[0].functionValue;\n}\nexport function fillOriginalTransform(\n    e: any,\n    transform: string,\n) {\n    const originalDatas = getBeforeRenderableDatas(e);\n\n    originalDatas.nextTransforms = splitSpace(transform);\n    // originalDatas.nextTargetMatrix = parseMat(transform);\n}\nexport function getBeforeRenderableDatas(e: any) {\n    return e.originalDatas.beforeRenderable;\n}\nexport function getNextTransforms(e: any) {\n    const {\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = e;\n\n    return originalDatas.nextTransforms;\n}\nexport function getNextTransformText(e: any) {\n    return getNextTransforms(e).join(\" \");\n}\n\nexport function getNextStyle(e: any) {\n    return getBeforeRenderableDatas(e).nextStyle;\n}\n\nexport function fillTransformEvent(\n    moveable: MoveableManagerInterface<DraggableProps>,\n    nextTransform: string,\n    delta: number[],\n    isPinch: boolean,\n    e: any,\n): OnTransformEvent {\n    fillOriginalTransform(e, nextTransform);\n\n    const drag = Draggable.drag!(\n        moveable,\n        setCustomDrag(e, moveable.state, delta, isPinch, false),\n    ) as OnDrag;\n    const afterTransform = drag ? drag.transform : nextTransform;\n    return {\n        transform: nextTransform,\n        drag: drag as OnDrag,\n        ...fillCSSObject({\n            transform: afterTransform,\n        }, e),\n        afterTransform,\n    };\n}\nexport function getTranslateDist(\n    moveable: MoveableManagerInterface<any>,\n    transform: string,\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    const state = moveable.state;\n    const {\n        left,\n        top,\n    } = state;\n\n    const groupable = moveable.props.groupable;\n    const nextMatrix = getNextTransformMatrix(moveable.state, datas, transform);\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextFixedPosition = getDirectionOffset(moveable, fixedDirection, nextMatrix);\n    const dist = minus(fixedPosition, nextFixedPosition);\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getScaleDist(\n    moveable: MoveableManagerInterface<any>,\n    scaleDist: number[],\n    fixedDirection: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    const dist = getTranslateDist(\n        moveable,\n        `scale(${scaleDist.join(\", \")})`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n\n    return dist;\n}\nexport function getOriginDirection(moveable: MoveableManagerInterface<any>) {\n    const {\n        width,\n        height,\n        transformOrigin,\n    } = moveable.state;\n    return [\n        -1 + transformOrigin[0] / (width / 2),\n        -1 + transformOrigin[1] / (height / 2),\n    ];\n}\nexport function getDirectionOffset(\n    moveable: MoveableManagerInterface, direction: number[],\n    nextMatrix: number[] = moveable.state.allMatrix,\n) {\n    const {\n        width,\n        height,\n        is3d,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n    const nextFixedOffset = [\n        width / 2 * (1 + direction[0]),\n        height / 2 * (1 + direction[1]),\n    ];\n    return calculatePosition(nextMatrix, nextFixedOffset, n);\n}\nexport function getRotateDist(\n    moveable: MoveableManagerInterface<any>,\n    rotateDist: number,\n    datas: any,\n) {\n    const fixedDirection = datas.fixedDirection;\n    const fixedPosition = datas.fixedPosition;\n\n    return getTranslateDist(\n        moveable,\n        `rotate(${rotateDist}deg)`,\n        fixedDirection,\n        fixedPosition,\n        datas,\n    );\n}\nexport function getResizeDist(\n    moveable: MoveableManagerInterface<any>,\n    width: number,\n    height: number,\n    fixedPosition: number[],\n    transformOrigin: string[],\n    datas: any,\n) {\n    const {\n        groupable,\n    } = moveable.props;\n    const state = moveable.state;\n    const {\n        transformOrigin: prevOrigin,\n        offsetMatrix,\n        is3d,\n        width: prevWidth,\n        height: prevHeight,\n        left,\n        top,\n    } = state;\n    const fixedDirection = datas.fixedDirection;\n    const targetMatrix = datas.nextTargetMatrix || state.targetMatrix;\n    const n = is3d ? 4 : 3;\n    const nextOrigin = calculateTransformOrigin(\n        transformOrigin!,\n        width,\n        height,\n        prevWidth,\n        prevHeight,\n        prevOrigin,\n    );\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\n    const dist = getDist(fixedPosition, nextMatrix, width, height, n, fixedDirection);\n\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getAbsolutePosition(\n    moveable: MoveableManagerInterface<ResizableProps>,\n    direction: number[],\n) {\n    return getPosByDirection(getAbsolutePosesByState(moveable.state), direction);\n}\n","import { MoveableManagerInterface } from \"../types\";\n\nexport function getGestoData(moveable: MoveableManagerInterface, ableName: string) {\n    const targetGesto = moveable.targetGesto;\n    const controlGesto = moveable.controlGesto;\n    let data!: Record<string, any>;\n\n    if (targetGesto?.isFlag()) {\n        data = targetGesto.getEventData()[ableName];\n    }\n\n    if (!data && controlGesto?.isFlag()) {\n        data = controlGesto.getEventData()[ableName];\n    }\n\n    return data || {};\n}\n","import { PREFIX, IS_WEBKIT605, TINY_NUM } from \"./consts\";\nimport { prefixNames, InvertObject } from \"framework-utils\";\nimport {\n    isUndefined, isObject, splitUnit,\n    IObject, hasClass, isArray, isString, getRad,\n    getShapeDirection, isFunction, convertUnitSize, between, getKeys, decamelize,\n} from \"@daybrush/utils\";\nimport {\n    multiply, invert,\n    convertDimension, createIdentityMatrix,\n    createOriginMatrix, convertPositionMatrix, calculate,\n    multiplies,\n    minus,\n    createScaleMatrix,\n    plus,\n    convertMatrixtoCSS,\n} from \"@scena/matrix\";\nimport {\n    MoveableManagerState, Able, MoveableClientRect,\n    MoveableProps, ArrayFormat, MoveableRefType,\n    MatrixInfo, ExcludeEndParams, ExcludeParams,\n    ElementSizes, MoveablePosition, TransformObject,\n    MoveableRefTargetsResultType, MoveableRefTargetType, MoveableManagerInterface,\n} from \"./types\";\nimport { parse, toMat, calculateMatrixDist, parseMat } from \"css-to-mat\";\nimport { getBeforeRenderableDatas, getDragDist } from \"./gesto/GestoUtils\";\nimport { getGestoData } from \"./gesto/GestoData\";\n\nexport function round(num: number) {\n    return Math.round(num);\n}\nexport function multiply2(pos1: number[], pos2: number[]) {\n    return [\n        pos1[0] * pos2[0],\n        pos1[1] * pos2[1],\n    ];\n}\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\n\nexport function defaultSync(fn: () => void) {\n    fn();\n}\n\nexport function createIdentityMatrix3() {\n    return createIdentityMatrix(3);\n}\n\nexport function getTransformMatrix(transform: string | number[]) {\n    if (!transform || transform === \"none\") {\n        return [1, 0, 0, 1, 0, 0];\n\n    }\n    if (isObject(transform)) {\n        return transform;\n    }\n    return parseMat(transform);\n}\nexport function getAbsoluteMatrix(matrix: number[], n: number, origin: number[]) {\n    return multiplies(\n        n,\n        createOriginMatrix(origin, n),\n        matrix,\n        createOriginMatrix(origin.map(a => -a), n),\n    );\n}\nexport function measureSVGSize(el: SVGElement, unit: string, isHorizontal: boolean) {\n    if (unit === \"%\") {\n        const viewBox = getSVGViewBox(el.ownerSVGElement!);\n\n        return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\n    }\n    return 1;\n}\nexport function getBeforeTransformOrigin(el: SVGElement) {\n    const relativeOrigin = getTransformOrigin(getComputedStyle(el, \":before\"));\n\n    return relativeOrigin.map((o, i) => {\n        const { value, unit } = splitUnit(o);\n\n        return value * measureSVGSize(el, unit, i === 0);\n    });\n}\nexport function getTransformOrigin(style: CSSStyleDeclaration) {\n    const transformOrigin = style.transformOrigin;\n\n    return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\n}\nexport function getElementTransform(\n    target: HTMLElement | SVGElement,\n    computedStyle = getComputedStyle(target),\n) {\n    const computedTransform = computedStyle.transform;\n\n    if (computedTransform && computedTransform !== \"none\") {\n        return computedStyle.transform;\n    }\n    if (\"transform\" in target) {\n        const list = (target as any).transform as SVGAnimatedTransformList;\n        const baseVal = list.baseVal;\n\n        if (!baseVal) {\n            return \"\";\n        }\n        const length = baseVal.length;\n\n        if (!length) {\n            return \"\";\n        }\n\n        const matrixes: string[] = [];\n\n        for (let i = 0; i < length; ++i) {\n            const matrix = baseVal[i].matrix;\n\n            matrixes.push(`matrix(${([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"] as const).map(chr => matrix[chr]).join(\", \")})`);\n        }\n        return matrixes.join(\" \");\n\n    }\n    return \"\";\n}\n\nexport function getOffsetInfo(\n    el: SVGElement | HTMLElement | null | undefined,\n    lastParent: SVGElement | HTMLElement | null | undefined,\n    isParent?: boolean,\n) {\n    const body = document.body;\n    let hasSlot = false;\n    let target: HTMLElement | SVGElement | null | undefined;\n    let parentSlotElement: HTMLElement | null | undefined;\n\n    if (!el || isParent) {\n        target = el;\n    } else {\n        const assignedSlotParentElement = el?.assignedSlot?.parentElement;\n        const parentElement = el.parentElement;\n\n        if (assignedSlotParentElement) {\n            hasSlot = true;\n            parentSlotElement = parentElement;\n            target = assignedSlotParentElement;\n        } else {\n            target = parentElement;\n        }\n    }\n\n    let isCustomElement = false;\n    let isEnd = el === lastParent || target === lastParent;\n    let position = \"relative\";\n\n\n\n    while (target && target !== body) {\n        if (lastParent === target) {\n            isEnd = true;\n        }\n        const style = getComputedStyle(target);\n        const tagName = target.tagName.toLowerCase();\n        const transform = getElementTransform(target as SVGElement, style);\n        const willChange = style.willChange;\n        position = style.position!;\n\n\n        if (\n            tagName === \"svg\"\n            || position !== \"static\"\n            || (transform && transform !== \"none\")\n            || willChange === \"transform\"\n        ) {\n            break;\n        }\n        const slotParentNode = el?.assignedSlot?.parentNode;\n        const targetParentNode = target.parentNode;\n\n        if (slotParentNode) {\n            hasSlot = true;\n            parentSlotElement = targetParentNode as HTMLElement;\n        }\n        const parentNode = slotParentNode || targetParentNode;\n\n\n        if (parentNode && parentNode.nodeType === 11) {\n            // Shadow Root\n            target = (parentNode as ShadowRoot).host as HTMLElement;\n            isCustomElement = true;\n\n            break;\n        }\n\n        target = parentNode as HTMLElement | SVGElement;\n        position = \"relative\";\n    }\n    return {\n        hasSlot,\n        parentSlotElement,\n        isCustomElement,\n        isStatic: position === \"static\",\n        isEnd: isEnd || !target || target === body,\n        offsetParent: target as HTMLElement || body,\n    };\n\n}\nexport function getOffsetPosInfo(\n    el: HTMLElement | SVGElement,\n    target: HTMLElement | SVGElement,\n    style: CSSStyleDeclaration,\n) {\n    const tagName = el.tagName.toLowerCase();\n    let offsetLeft = (el as HTMLElement).offsetLeft;\n    let offsetTop = (el as HTMLElement).offsetTop;\n\n    // svg\n    const isSVG = isUndefined(offsetLeft);\n    let hasOffset = !isSVG;\n    let origin: number[];\n    let targetOrigin: number[];\n    // inner svg element\n    if (!hasOffset && tagName !== \"svg\") {\n        origin = IS_WEBKIT605\n            ? getBeforeTransformOrigin(el as SVGElement)\n            : getTransformOrigin(style).map(pos => parseFloat(pos));\n\n        targetOrigin = origin.slice();\n        hasOffset = true;\n\n        [\n            offsetLeft, offsetTop, origin[0], origin[1],\n        ] = getSVGGraphicsOffset(\n            el as SVGGraphicsElement,\n            origin,\n            el === target && target.tagName.toLowerCase() === \"g\",\n        );\n    } else {\n        origin = getTransformOrigin(style).map(pos => parseFloat(pos));\n        targetOrigin = origin.slice();\n    }\n    return {\n        tagName,\n        isSVG,\n        hasOffset,\n        offset: [offsetLeft || 0, offsetTop || 0],\n        origin,\n        targetOrigin,\n    };\n}\nexport function getBodyOffset(\n    el: HTMLElement | SVGElement,\n    isSVG: boolean,\n    style: CSSStyleDeclaration = getComputedStyle(el),\n) {\n    const bodyStyle = getComputedStyle(document.body);\n    const bodyPosition = bodyStyle.position;\n    if (!isSVG && (!bodyPosition || bodyPosition === \"static\")) {\n        return [0, 0];\n    }\n\n    let marginLeft = parseInt(bodyStyle.marginLeft, 10);\n    let marginTop = parseInt(bodyStyle.marginTop, 10);\n\n    if (style.position === \"absolute\") {\n        if (style.top !== \"auto\" || style.bottom !== \"auto\") {\n            marginTop = 0;\n        }\n        if (style.left !== \"auto\" || style.right !== \"auto\") {\n            marginLeft = 0;\n        }\n    }\n\n    return [marginLeft, marginTop];\n}\nexport function convert3DMatrixes(matrixes: MatrixInfo[]) {\n    matrixes.forEach(info => {\n        const matrix = info.matrix;\n\n        if (matrix) {\n            info.matrix = convertDimension(matrix, 3, 4);\n        }\n    });\n}\n\nexport function getBodyScrollPos() {\n    return [\n        document.documentElement.scrollLeft || document.body.scrollLeft,\n        document.documentElement.scrollTop || document.body.scrollTop,\n    ];\n}\n\nexport function getPositionFixedInfo(el: HTMLElement | SVGElement) {\n    let fixedContainer = el.parentElement;\n    let hasTransform = false;\n\n    while (fixedContainer) {\n        const transform = getComputedStyle(fixedContainer).transform;\n\n\n        if (transform && transform !== \"none\") {\n            hasTransform = true;\n            break;\n        }\n        if (fixedContainer === document.body) {\n            break;\n        }\n        fixedContainer = fixedContainer.parentElement;\n    }\n\n    return {\n        fixedContainer: fixedContainer || document.body,\n        hasTransform,\n    };\n}\n\nexport function makeMatrixCSS(matrix: number[], is3d: boolean = matrix.length > 9) {\n    return `${is3d ? \"matrix3d\" : \"matrix\"}(${convertMatrixtoCSS(matrix, !is3d).join(\",\")})`;\n}\nexport function getSVGViewBox(el: SVGSVGElement) {\n    const clientWidth = el.clientWidth;\n    const clientHeight = el.clientHeight;\n\n    if (!el) {\n        return { x: 0, y: 0, width: 0, height: 0, clientWidth, clientHeight };\n    }\n    const viewBox = el.viewBox;\n    const baseVal = (viewBox && viewBox.baseVal) || { x: 0, y: 0, width: 0, height: 0 };\n\n    return {\n        x: baseVal.x,\n        y: baseVal.y,\n        width: baseVal.width || clientWidth,\n        height: baseVal.height || clientHeight,\n        clientWidth,\n        clientHeight,\n    };\n}\nexport function getSVGMatrix(\n    el: SVGSVGElement,\n    n: number,\n) {\n    const {\n        width: viewBoxWidth,\n        height: viewBoxHeight,\n        clientWidth,\n        clientHeight,\n    } = getSVGViewBox(el);\n    const scaleX = clientWidth / viewBoxWidth;\n    const scaleY = clientHeight / viewBoxHeight;\n\n    const preserveAspectRatio = el.preserveAspectRatio.baseVal;\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n    const align = preserveAspectRatio.align;\n    // 1 : meet 2: slice\n    const meetOrSlice = preserveAspectRatio.meetOrSlice;\n    const svgOrigin = [0, 0];\n    const scale = [scaleX, scaleY];\n    const translate = [0, 0];\n\n    if (align !== 1) {\n        const xAlign = (align - 2) % 3;\n        const yAlign = Math.floor((align - 2) / 3);\n\n        svgOrigin[0] = viewBoxWidth * xAlign / 2;\n        svgOrigin[1] = viewBoxHeight * yAlign / 2;\n\n        const scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\n\n        scale[0] = scaleDimension;\n        scale[1] = scaleDimension;\n\n        translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\n        translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\n    }\n    const scaleMatrix = createScaleMatrix(scale, n);\n    [\n        scaleMatrix[n * (n - 1)],\n        scaleMatrix[n * (n - 1) + 1],\n    ] = translate;\n\n    return getAbsoluteMatrix(\n        scaleMatrix,\n        n,\n        svgOrigin,\n    );\n}\nexport function getSVGGraphicsOffset(\n    el: SVGGraphicsElement,\n    origin: number[],\n    isGTarget?: boolean,\n) {\n    if (!el.getBBox || !isGTarget && el.tagName.toLowerCase() === \"g\") {\n        return [0, 0, 0, 0];\n    }\n    const bbox = el.getBBox();\n    const viewBox = getSVGViewBox(el.ownerSVGElement!);\n    const left = bbox.x - viewBox.x;\n    const top = bbox.y - viewBox.y;\n\n    return [\n        left,\n        top,\n        origin[0] - left,\n        origin[1] - top,\n    ];\n}\nexport function calculatePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(matrix, convertPositionMatrix(pos, n), n);\n}\nexport function calculatePoses(matrix: number[], width: number, height: number, n: number) {\n    return [[0, 0], [width, 0], [0, height], [width, height]].map(pos => calculatePosition(matrix, pos, n));\n}\nexport function getRect(poses: number[][]) {\n    const posesX = poses.map(pos => pos[0]);\n    const posesY = poses.map(pos => pos[1]);\n    const left = Math.min(...posesX);\n    const top = Math.min(...posesY);\n    const right = Math.max(...posesX);\n    const bottom = Math.max(...posesY);\n    const rectWidth = right - left;\n    const rectHeight = bottom - top;\n\n    return {\n        left, top,\n        right, bottom,\n        width: rectWidth,\n        height: rectHeight,\n    };\n}\nexport function calculateRect(matrix: number[], width: number, height: number, n: number) {\n    const poses = calculatePoses(matrix, width, height, n);\n\n    return getRect(poses);\n}\nexport function getSVGOffset(\n    offsetInfo: MatrixInfo,\n    targetInfo: MatrixInfo,\n    container: HTMLElement | SVGElement,\n    n: number,\n    beforeMatrix: number[],\n) {\n    const target = offsetInfo.target;\n    const origin = offsetInfo.origin!;\n    const targetMatrix = targetInfo.matrix!;\n    const {\n        offsetWidth: width,\n        offsetHeight: height,\n    } = getSize(target);\n    const containerClientRect = container.getBoundingClientRect();\n    let margin = [0, 0];\n\n    if (container === document.body) {\n        margin = getBodyOffset(target, true);\n    }\n\n    const rect = target.getBoundingClientRect();\n    const rectLeft\n        = rect.left - containerClientRect.left + container.scrollLeft\n        - (container.clientLeft || 0) + margin[0];\n    const rectTop\n        = rect.top - containerClientRect.top + container.scrollTop\n        - (container.clientTop || 0) + margin[1];\n    const rectWidth = rect.width;\n    const rectHeight = rect.height;\n\n    const mat = multiplies(\n        n,\n        beforeMatrix,\n        targetMatrix,\n    );\n    const {\n        left: prevLeft,\n        top: prevTop,\n        width: prevWidth,\n        height: prevHeight,\n    } = calculateRect(mat, width, height, n);\n    const posOrigin = calculatePosition(mat, origin, n);\n    const prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\n    const rectOrigin = [\n        rectLeft + prevOrigin[0] * rectWidth / prevWidth,\n        rectTop + prevOrigin[1] * rectHeight / prevHeight,\n    ];\n    const offset = [0, 0];\n    let count = 0;\n\n    while (++count < 10) {\n        const inverseBeforeMatrix = invert(beforeMatrix, n);\n        [offset[0], offset[1]] = minus(\n            calculatePosition(inverseBeforeMatrix, rectOrigin, n),\n            calculatePosition(inverseBeforeMatrix, posOrigin, n),\n        );\n        const mat2 = multiplies(\n            n,\n            beforeMatrix,\n            createOriginMatrix(offset, n),\n            targetMatrix,\n        );\n        const {\n            left: nextLeft,\n            top: nextTop,\n        } = calculateRect(mat2, width, height, n);\n        const distLeft = nextLeft - rectLeft;\n        const distTop = nextTop - rectTop;\n\n        if (Math.abs(distLeft) < 2 && Math.abs(distTop) < 2) {\n            break;\n        }\n        rectOrigin[0] -= distLeft;\n        rectOrigin[1] -= distTop;\n    }\n    return offset.map(p => Math.round(p));\n}\n\nexport function calculateMoveableClientPositions(\n    rootMatrix: number[],\n    poses: number[][],\n    rootClientRect: MoveableClientRect,\n) {\n    const is3d = rootMatrix.length === 16;\n    const n = is3d ? 4 : 3;\n    const rootPoses = poses.map(pos => calculatePosition(rootMatrix, pos, n));\n    const { left, top } = rootClientRect;\n\n    return rootPoses.map(pos => {\n        return [pos[0] + left, pos[1] + top];\n    });\n\n}\nexport function calculateMoveablePosition(\n    matrix: number[],\n    origin: number[],\n    width: number,\n    height: number,\n): MoveablePosition {\n    const is3d = matrix.length === 16;\n    const n = is3d ? 4 : 3;\n    const poses = calculatePoses(matrix, width, height, n);\n    let [\n        [x1, y1],\n        [x2, y2],\n        [x3, y3],\n        [x4, y4],\n    ] = poses;\n    let [originX, originY] = calculatePosition(matrix, origin, n);\n\n    const left = Math.min(x1, x2, x3, x4);\n    const top = Math.min(y1, y2, y3, y4);\n    const right = Math.max(x1, x2, x3, x4);\n    const bottom = Math.max(y1, y2, y3, y4);\n\n    x1 = (x1 - left) || 0;\n    x2 = (x2 - left) || 0;\n    x3 = (x3 - left) || 0;\n    x4 = (x4 - left) || 0;\n\n    y1 = (y1 - top) || 0;\n    y2 = (y2 - top) || 0;\n    y3 = (y3 - top) || 0;\n    y4 = (y4 - top) || 0;\n\n    originX = (originX - left) || 0;\n    originY = (originY - top) || 0;\n\n    const direction = getShapeDirection(poses);\n\n    return {\n        left,\n        top,\n        right,\n        bottom,\n        origin: [originX, originY],\n        pos1: [x1, y1],\n        pos2: [x2, y2],\n        pos3: [x3, y3],\n        pos4: [x4, y4],\n        direction,\n    };\n}\nexport function getDistSize(vec: number[]) {\n    return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n}\nexport function getDiagonalSize(pos1: number[], pos2: number[]) {\n    return getDistSize([\n        pos2[0] - pos1[0],\n        pos2[1] - pos1[1],\n    ]);\n}\nexport function getLineStyle(pos1: number[], pos2: number[], zoom = 1, rad: number = getRad(pos1, pos2)) {\n    const width = getDiagonalSize(pos1, pos2);\n\n    return {\n        transform: `translateY(-50%) translate(${pos1[0]}px, ${pos1[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        width: `${width}px`,\n    };\n}\nexport function getControlTransform(rotation: number, zoom: number, ...poses: number[][]) {\n    const length = poses.length;\n\n    const x = poses.reduce((prev, pos) => prev + pos[0], 0) / length;\n    const y = poses.reduce((prev, pos) => prev + pos[1], 0) / length;\n    return {\n        transform: `translateZ(0px) translate(${x}px, ${y}px) rotate(${rotation}rad) scale(${zoom})`,\n    };\n}\nexport function getCSSSize(target: SVGElement | HTMLElement) {\n    const style = getComputedStyle(target);\n\n    return [\n        parseFloat(style.width!),\n        parseFloat(style.height!),\n    ];\n}\n\nexport function getProps<Props>(props: Props, ableName: keyof Props): Props {\n    const self = props[ableName];\n\n    if (isObject(self)) {\n        return {\n            ...props,\n            ...self,\n        };\n    }\n    return props;\n}\n\nexport function getSize(\n    target?: SVGElement | HTMLElement | null,\n    style: CSSStyleDeclaration | null = target ? getComputedStyle(target) : null,\n): ElementSizes {\n    const hasOffset = target && !isUndefined((target as any).offsetWidth);\n\n    let offsetWidth = 0;\n    let offsetHeight = 0;\n    let clientWidth = 0;\n    let clientHeight = 0;\n    let cssWidth = 0;\n    let cssHeight = 0;\n    let contentWidth = 0;\n    let contentHeight = 0;\n\n    let minWidth = 0;\n    let minHeight = 0;\n    let minOffsetWidth = 0;\n    let minOffsetHeight = 0;\n\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n    let maxOffsetWidth = Infinity;\n    let maxOffsetHeight = Infinity;\n    let svg = false;\n\n    if (target) {\n        if (!hasOffset && target!.tagName.toLowerCase() !== \"svg\") {\n            const bbox = (target as SVGGraphicsElement).getBBox();\n\n            svg = true;\n            offsetWidth = bbox.width;\n            offsetHeight = bbox.height;\n            cssWidth = offsetWidth;\n            cssHeight = offsetHeight;\n            contentWidth = offsetWidth;\n            contentHeight = offsetHeight;\n            clientWidth = offsetWidth;\n            clientHeight = offsetHeight;\n        } else {\n            const targetStyle = target.style;\n            const boxSizing = style!.boxSizing === \"border-box\";\n            const borderLeft = parseFloat(style!.borderLeftWidth!) || 0;\n            const borderRight = parseFloat(style!.borderRightWidth!) || 0;\n            const borderTop = parseFloat(style!.borderTopWidth!) || 0;\n            const borderBottom = parseFloat(style!.borderBottomWidth!) || 0;\n            const paddingLeft = parseFloat(style!.paddingLeft!) || 0;\n            const paddingRight = parseFloat(style!.paddingRight!) || 0;\n            const paddingTop = parseFloat(style!.paddingTop!) || 0;\n            const paddingBottom = parseFloat(style!.paddingBottom!) || 0;\n\n            const horizontalPadding = paddingLeft + paddingRight;\n            const verticalPadding = paddingTop + paddingBottom;\n            const horizontalBorder = borderLeft + borderRight;\n            const verticalBorder = borderTop + borderBottom;\n            const horizontalOffset = horizontalPadding + horizontalBorder;\n            const verticalOffset = verticalPadding + verticalBorder;\n            const position = style!.position;\n\n            let containerWidth = 0;\n            let containerHeight = 0;\n\n            // SVGSVGElement, HTMLElement\n            if (\"clientLeft\" in target) {\n                let parentElement: HTMLElement | null = null;\n\n                if (position === \"absolute\") {\n                    const offsetInfo = getOffsetInfo(target, document.body, false);\n                    parentElement = offsetInfo.offsetParent;\n\n                } else {\n                    parentElement = target.parentElement;\n                }\n                if (parentElement) {\n                    const parentStyle = getComputedStyle(parentElement);\n\n                    containerWidth = parseFloat(parentStyle.width);\n                    containerHeight = parseFloat(parentStyle.height);\n                }\n            }\n            minWidth = Math.max(\n                horizontalPadding,\n                convertUnitSize(style!.minWidth, containerWidth) || 0,\n            );\n            minHeight = Math.max(\n                verticalPadding,\n                convertUnitSize(style!.minHeight, containerHeight) || 0,\n            );\n            maxWidth = convertUnitSize(style!.maxWidth, containerWidth);\n            maxHeight = convertUnitSize(style!.maxHeight, containerHeight);\n\n            if (isNaN(maxWidth)) {\n                maxWidth = Infinity;\n            }\n            if (isNaN(maxHeight)) {\n                maxHeight = Infinity;\n            }\n            const inlineCSSWidth = convertUnitSize(targetStyle.width, 0) || 0;\n            const inlineCSSHeight = convertUnitSize(targetStyle.height, 0) || 0;\n            const computedWidth = parseFloat(style!.width) || 0;\n            const computedHeight = parseFloat(style!.height) || 0;\n\n            cssWidth = parseFloat(style!.width);\n            cssHeight = parseFloat(style!.height);\n\n            contentWidth = Math.abs(computedWidth - inlineCSSWidth) < 1\n                ? between(minWidth, inlineCSSWidth || cssWidth, maxWidth)\n                : computedWidth;\n            contentHeight = Math.abs(computedHeight - inlineCSSHeight) < 1\n                ? between(minHeight, inlineCSSHeight || cssHeight, maxHeight)\n                : computedHeight;\n\n            offsetWidth = contentWidth;\n            offsetHeight = contentHeight;\n            clientWidth = contentWidth;\n            clientHeight = contentHeight;\n\n            if (boxSizing) {\n                maxOffsetWidth = maxWidth;\n                maxOffsetHeight = maxHeight;\n                minOffsetWidth = minWidth;\n                minOffsetHeight = minHeight;\n                contentWidth = offsetWidth - horizontalOffset;\n                contentHeight = offsetHeight - verticalOffset;\n            } else {\n                maxOffsetWidth = maxWidth + horizontalOffset;\n                maxOffsetHeight = maxHeight + verticalOffset;\n                minOffsetWidth = minWidth + horizontalOffset;\n                minOffsetHeight = minHeight + verticalOffset;\n                offsetWidth = contentWidth + horizontalOffset;\n                offsetHeight = contentHeight + verticalOffset;\n            }\n            clientWidth = contentWidth + horizontalPadding;\n            clientHeight = contentHeight + verticalPadding;\n        }\n    }\n\n    return {\n        svg,\n        offsetWidth,\n        offsetHeight,\n        clientWidth,\n        clientHeight,\n        contentWidth,\n        contentHeight,\n        cssWidth,\n        cssHeight,\n        minWidth,\n        minHeight,\n        maxWidth,\n        maxHeight,\n        minOffsetWidth,\n        minOffsetHeight,\n        maxOffsetWidth,\n        maxOffsetHeight,\n    };\n}\nexport function getRotationRad(\n    poses: number[][],\n    direction: number,\n) {\n    return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\n}\n\nexport function resetClientRect(): MoveableClientRect {\n    return {\n        left: 0, top: 0,\n        width: 0, height: 0,\n        right: 0,\n        bottom: 0,\n        clientLeft: 0, clientTop: 0,\n        clientWidth: 0, clientHeight: 0,\n        scrollWidth: 0, scrollHeight: 0,\n    };\n}\nexport function getClientRect(el: HTMLElement | SVGElement, isExtends?: boolean) {\n    let left = 0;\n    let top = 0;\n    let width = 0;\n    let height = 0;\n\n    if (el) {\n        if (el === document.body || el === document.documentElement) {\n            width = window.innerWidth;\n            height = window.innerHeight;\n            const scrollPos = getBodyScrollPos();\n\n            [left, top] = [-scrollPos[0], -scrollPos[1]];\n        } else {\n            const clientRect = el.getBoundingClientRect();\n\n            left = clientRect.left;\n            top = clientRect.top;\n            width = clientRect.width;\n            height = clientRect.height;\n        }\n    }\n\n    const rect: MoveableClientRect = {\n        left,\n        top,\n        width,\n        height,\n        right: left + width,\n        bottom: top + height,\n    };\n\n    if (el && isExtends) {\n        rect.clientLeft = el.clientLeft;\n        rect.clientTop = el.clientTop;\n        rect.clientWidth = el.clientWidth;\n        rect.clientHeight = el.clientHeight;\n        rect.scrollWidth = el.scrollWidth;\n        rect.scrollHeight = el.scrollHeight;\n        rect.overflow = getComputedStyle(el).overflow !== \"visible\";\n    }\n    return rect;\n}\nexport function getTotalDirection(\n    parentDirection: number[],\n    isPinch: boolean,\n    inputEvent: any,\n    datas: any,\n) {\n    let direction: number[] | undefined;\n\n    if (parentDirection) {\n        direction = parentDirection;\n    } else if (isPinch) {\n        direction = [0, 0];\n    } else {\n        const target = inputEvent.target;\n\n        direction = getDirection(target, datas);\n    }\n    return direction;\n}\nexport function getDirection(target: SVGElement | HTMLElement, datas: any) {\n    if (!target) {\n        return;\n    }\n    const deg = target.getAttribute(\"data-rotation\") || \"\";\n    const direciton = target.getAttribute(\"data-direction\")!;\n\n    datas.deg = deg;\n\n    if (!direciton) {\n        return;\n    }\n    const dir = [0, 0];\n\n    (direciton.indexOf(\"w\") > -1) && (dir[0] = -1);\n    (direciton.indexOf(\"e\") > -1) && (dir[0] = 1);\n    (direciton.indexOf(\"n\") > -1) && (dir[1] = -1);\n    (direciton.indexOf(\"s\") > -1) && (dir[1] = 1);\n\n    return dir;\n}\nexport function getAbsolutePoses(poses: number[][], dist: number[]) {\n    return [\n        plus(dist, poses[0]),\n        plus(dist, poses[1]),\n        plus(dist, poses[2]),\n        plus(dist, poses[3]),\n    ];\n}\nexport function getAbsolutePosesByState({\n    left,\n    top,\n    pos1,\n    pos2,\n    pos3,\n    pos4,\n}: {\n    left: number,\n    top: number,\n    pos1: number[],\n    pos2: number[],\n    pos3: number[],\n    pos4: number[],\n}) {\n    return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\n}\n\nexport function roundSign(num: number) {\n    return Math.round(num % 1 === -0.5 ? num - 1 : num);\n}\n\nexport function unset(self: any, name: string) {\n    self[name]?.unset();\n    self[name] = null;\n}\n\nexport function fillCSSObject(style: Record<string, any>, resolvedEvent?: any) {\n    if (resolvedEvent) {\n        const originalDatas = getBeforeRenderableDatas(resolvedEvent);\n\n        originalDatas.nextStyle = {\n            ...originalDatas.nextStyle,\n            ...style,\n        };\n    }\n    return {\n        style,\n        cssText: getKeys(style).map(name => `${decamelize(name, \"-\")}: ${style[name]};`).join(\"\"),\n    };\n}\n\nexport function fillAfterTransform(\n    prevEvent: { style: Record<string, string>, transform: string },\n    nextEvent: { style: Record<string, string>, transform: string, afterTransform?: string },\n    resolvedEvent?: any\n): TransformObject {\n    const afterTransform = nextEvent.afterTransform || nextEvent.transform;\n\n    return {\n        ...fillCSSObject({\n            ...prevEvent.style,\n            ...nextEvent.style,\n            transform: afterTransform,\n        }, resolvedEvent),\n        afterTransform,\n        transform: prevEvent.transform,\n    };\n}\n\nexport function fillParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeParams<T>,\n    isBeforeEvent?: boolean,\n): T {\n    const datas = e.datas;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n    const nextParams = {\n        ...params,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        moveable,\n        datas: datas.datas,\n        stopDrag() {\n            e.stop?.();\n        },\n    } as any;\n\n    if (!datas.isStartEvent) {\n        datas.isStartEvent = true;\n    } else if (!isBeforeEvent) {\n        datas.lastEvent = nextParams;\n    }\n    return nextParams;\n}\nexport function fillEndParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: ExcludeEndParams<T> & { isDrag?: boolean },\n): T {\n    const datas = e.datas;\n    const isDrag = \"isDrag\" in params ? params.isDrag : e.isDrag;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n\n    return {\n        isDrag,\n        ...params,\n        moveable,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        lastEvent: datas.lastEvent,\n        isDouble: e.isDouble,\n        datas: datas.datas,\n    } as any;\n}\nexport function catchEvent<EventName extends keyof Props, Props extends IObject<any> = MoveableProps>(\n    moveable: any,\n    name: EventName,\n    callback: (e: Props[EventName] extends ((e: infer P) => any) | undefined ? P : IObject<any>) => void,\n): any {\n    moveable._emitter.on(name, callback);\n}\n\nexport function triggerEvent<EventName extends keyof Props, Props extends IObject<any> = MoveableProps>(\n    moveable: any,\n    name: EventName,\n    params: Props[EventName] extends ((e: infer P) => any) | undefined ? P : IObject<any>,\n    isManager?: boolean,\n): any {\n    return moveable.triggerEvent(name, params, isManager);\n}\n\nexport function getComputedStyle(el: Element, pseudoElt?: string | null) {\n    return window.getComputedStyle(el, pseudoElt);\n}\n\nexport function filterAbles(\n    ables: Able[], methods: Array<keyof Able>,\n    triggerAblesSimultaneously?: boolean,\n) {\n    const enabledAbles: IObject<boolean> = {};\n    const ableGroups: IObject<boolean> = {};\n\n    return ables.filter(able => {\n        const name = able.name;\n\n        if (enabledAbles[name] || !methods.some(method => able[method])) {\n            return false;\n        }\n        if (!triggerAblesSimultaneously && able.ableGroup) {\n            if (ableGroups[able.ableGroup]) {\n                return false;\n            }\n            ableGroups[able.ableGroup] = true;\n        }\n        enabledAbles[name] = true;\n        return true;\n    });\n}\n\nexport function equals(a1: any, a2: any) {\n    return a1 === a2 || (a1 == null && a2 == null);\n}\n\nexport function selectValue<T = any>(...values: any[]): T {\n    const length = values.length - 1;\n    for (let i = 0; i < length; ++i) {\n        const value = values[i];\n\n        if (!isUndefined(value)) {\n            return value;\n        }\n    }\n\n    return values[length];\n}\n\nexport function groupBy<T>(arr: T[], func: (el: T, index: number, arr: T[]) => any) {\n    const groups: T[][] = [];\n    const groupKeys: any[] = [];\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        const keyIndex = groupKeys.indexOf(groupKey);\n        const group = groups[keyIndex] || [];\n\n        if (keyIndex === -1) {\n            groupKeys.push(groupKey);\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function groupByMap<T>(arr: T[], func: (el: T, index: number, arr: T[]) => string | number) {\n    const groups: T[][] = [];\n    const groupKeys: IObject<T[]> = {};\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        let group = groupKeys[groupKey];\n\n        if (!group) {\n            group = [];\n            groupKeys[groupKey] = group;\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function flat<T>(arr: T[][]): T[] {\n    return arr.reduce((prev, cur) => {\n        return prev.concat(cur);\n    }, []);\n}\n\nexport function equalSign(a: number, b: number) {\n    return (a >= 0 && b >= 0) || (a < 0 && b < 0);\n}\n\nexport function maxOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(b) - Math.abs(a));\n\n    return args[0];\n}\nexport function minOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(a) - Math.abs(b));\n\n    return args[0];\n}\n\nexport function calculateInversePosition(matrix: number[], pos: number[], n: number) {\n    return calculate(\n        invert(matrix, n),\n        convertPositionMatrix(pos, n),\n        n,\n    );\n}\nexport function convertDragDist(state: MoveableManagerState, e: any) {\n    const {\n        is3d,\n        rootMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n    [\n        e.distX, e.distY,\n    ] = calculateInversePosition(rootMatrix, [e.distX, e.distY], n);\n\n    return e;\n}\n\nexport function calculatePadding(\n    matrix: number[], pos: number[],\n    transformOrigin: number[], origin: number[], n: number,\n) {\n    return minus(calculatePosition(matrix, plus(transformOrigin, pos), n), origin);\n}\n\nexport function convertCSSSize(value: number, size: number, isRelative?: boolean) {\n    return isRelative ? `${value / size * 100}%` : `${value}px`;\n}\n\nexport function getTinyDist(v: number) {\n    return Math.abs(v) <= TINY_NUM ? 0 : v;\n}\nexport function getDirectionViewClassName(ableName: string) {\n    return (moveable: MoveableManagerInterface) => {\n        if (!moveable.isDragging(ableName)) {\n            return \"\";\n        }\n        const data = getGestoData(moveable, ableName);\n        const deg = data.deg;\n        if (!deg) {\n            return \"\";\n        }\n        const className = `view-${ableName}-dragging`;\n\n        return prefix(className, `view-control-rotation${deg}`);\n    };\n}\nexport function getDirectionCondition(ableName: string, checkAbles: string[] = [ableName]) {\n    return (moveable: any, e: any) => {\n        if (e.isRequest) {\n            if (checkAbles.some(name => e.requestAble === name)) {\n                return e.parentDirection!;\n            } else {\n                return false;\n            }\n        }\n        const target = e.inputEvent.target;\n\n        return hasClass(target, prefix(\"direction\")) && (!ableName || hasClass(target, prefix(ableName)));\n    };\n}\n\nexport function invertObject<T extends IObject<any>>(obj: T): InvertObject<T> {\n    const nextObj: IObject<any> = {};\n\n    for (const name in obj) {\n        nextObj[obj[name]] = name;\n    }\n    return nextObj as any;\n}\n\nexport function convertTransformInfo(transforms: string[], index: number) {\n    const beforeFunctionTexts = transforms.slice(0, index < 0 ? undefined : index);\n    const beforeFunctionTexts2 = transforms.slice(0, index < 0 ? undefined : index + 1);\n    const targetFunctionText = transforms[index] || \"\";\n    const afterFunctionTexts = index < 0 ? [] : transforms.slice(index);\n    const afterFunctionTexts2 = index < 0 ? [] : transforms.slice(index + 1);\n\n    const beforeFunctions = parse(beforeFunctionTexts);\n    const beforeFunctions2 = parse(beforeFunctionTexts2);\n    const targetFunctions = parse([targetFunctionText]);\n    const afterFunctions = parse(afterFunctionTexts);\n    const afterFunctions2 = parse(afterFunctionTexts2);\n\n\n    const beforeFunctionMatrix = toMat(beforeFunctions);\n    const beforeFunctionMatrix2 = toMat(beforeFunctions2);\n    const afterFunctionMatrix = toMat(afterFunctions);\n    const afterFunctionMatrix2 = toMat(afterFunctions2);\n    const allFunctionMatrix = multiply(\n        beforeFunctionMatrix,\n        afterFunctionMatrix,\n        4,\n    );\n    return {\n        transforms,\n        beforeFunctionMatrix,\n        beforeFunctionMatrix2,\n        targetFunctionMatrix: toMat(targetFunctions),\n        afterFunctionMatrix,\n        afterFunctionMatrix2,\n        allFunctionMatrix,\n        beforeFunctions,\n        beforeFunctions2,\n        targetFunction: targetFunctions[0],\n        afterFunctions,\n        afterFunctions2,\n        beforeFunctionTexts,\n        beforeFunctionTexts2,\n        targetFunctionText,\n        afterFunctionTexts,\n        afterFunctionTexts2,\n    };\n}\n\nexport function isArrayFormat<T = any>(arr: any): arr is ArrayFormat<T> {\n    if (!arr || !isObject(arr)) {\n        return false;\n    }\n    if (arr instanceof Element) {\n        return false;\n    }\n    return isArray(arr) || \"length\" in arr;\n}\n\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>, isSelector: true): T | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>, isSelector?: boolean): T | string | null;\nexport function getRefTarget<T extends Element = HTMLElement | SVGElement>(\n    target: MoveableRefType<T>,\n    isSelector?: boolean,\n): any {\n    if (!target) {\n        return null;\n    }\n    if (target instanceof Element) {\n        return target;\n    }\n    if (isString(target)) {\n        if (isSelector) {\n            return document.querySelector(target);\n        }\n        return target;\n    }\n    if (isFunction(target)) {\n        return target();\n    }\n    if (\"current\" in target) {\n        return target.current;\n    }\n    return target;\n}\n\nexport function getRefTargets(\n    targets: MoveableRefTargetType,\n    isSelector: true): Array<HTMLElement | SVGElement | null>;\nexport function getRefTargets(\n    targets: MoveableRefTargetType,\n    isSelector?: boolean): MoveableRefTargetsResultType;\nexport function getRefTargets(targets: MoveableRefTargetType, isSelector?: boolean): any[] {\n    if (!targets) {\n        return [];\n    }\n    const userTargets = isArrayFormat(targets) ? [].slice.call(targets) : [targets];\n\n    return userTargets.reduce((prev, target) => {\n        if (isString(target) && isSelector) {\n            return [...prev, ...[].slice.call(document.querySelectorAll<HTMLElement>(target))];\n        }\n        if (isArray(target)) {\n            prev.push(getRefTargets(target, isSelector));\n        } else {\n            prev.push(getRefTarget(target, isSelector));\n        }\n        return prev;\n    }, [] as MoveableRefTargetsResultType);\n}\n\nexport function minmax(...values: number[]) {\n    return [Math.min(...values), Math.max(...values)];\n}\n\n\nexport function getAbsoluteRotation(pos1: number[], pos2: number[], direction: number) {\n    let deg = getRad(pos1, pos2) / Math.PI * 180;\n\n    deg = direction >= 0 ? deg : 180 - deg;\n    deg = deg >= 0 ? deg : 360 + deg;\n\n    return deg;\n}\n\n\nexport function getDragDistByState(state: MoveableManagerState, dist: number[]) {\n    const {\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    let inverseMatrix = invert(rootMatrix, n);\n\n    if (!is3d) {\n        inverseMatrix = convertDimension(inverseMatrix, 3, 4);\n    }\n    inverseMatrix[12] = 0;\n    inverseMatrix[13] = 0;\n    inverseMatrix[14] = 0;\n\n    return calculateMatrixDist(inverseMatrix, dist);\n}\n\nexport function getSizeDistByDist(\n    startSize: number[],\n    dist: number[],\n    ratio: number,\n    direction: number[],\n    keepRatio?: boolean,\n) {\n    const [startOffsetWidth, startOffsetHeight] = startSize;\n    let distWidth = 0;\n    let distHeight = 0;\n\n    if (keepRatio && startOffsetWidth && startOffsetHeight) {\n        const rad = getRad([0, 0], dist);\n        const standardRad = getRad([0, 0], direction);\n        const size = getDistSize(dist);\n        const signSize = Math.cos(rad - standardRad) * size;\n\n        if (!direction[0]) {\n            // top, bottom\n            distHeight = signSize;\n            distWidth = distHeight * ratio;\n        } else if (!direction[1]) {\n            // left, right\n            distWidth = signSize;\n            distHeight = distWidth / ratio;\n        } else {\n            // two-way\n            const startWidthSize = direction[0] * 2 * startOffsetWidth;\n            const startHeightSize = direction[1] * 2 * startOffsetHeight;\n            const distSize = getDistSize([startWidthSize + dist[0], startHeightSize + dist[1]])\n                - getDistSize([startWidthSize, startHeightSize]);\n            const ratioRad = getRad([0, 0], [ratio, 1]);\n\n            distWidth = Math.cos(ratioRad) * distSize;\n            distHeight = Math.sin(ratioRad) * distSize;\n        }\n    } else {\n        distWidth = direction[0] * dist[0];\n        distHeight = direction[1] * dist[1];\n    }\n\n    return [distWidth, distHeight];\n}\nexport function getOffsetSizeDist(\n    sizeDirection: number[],\n    keepRatio: boolean,\n    datas: any,\n    e: any,\n) {\n    const {\n        ratio,\n        startOffsetWidth,\n        startOffsetHeight,\n    } = datas;\n    let distWidth = 0;\n    let distHeight = 0;\n    const {\n        distX,\n        distY,\n        parentDistance,\n        parentDist,\n        parentScale,\n    } = e;\n    const startFixedDirection = datas.fixedDirection;\n    const directionsDists = [0, 1].map(index => {\n        return Math.abs(sizeDirection[index] - startFixedDirection[index]);\n    });\n    const directionRatios = [0, 1].map(index => {\n        let dist = directionsDists[index];\n\n        if (dist !== 0) {\n            dist = 2 / dist;\n        }\n        return dist;\n    });\n    if (parentDist) {\n        distWidth = parentDist[0];\n        distHeight = parentDist[1];\n\n        if (keepRatio) {\n            if (!distWidth) {\n                distWidth = distHeight * ratio;\n            } else if (!distHeight) {\n                distHeight = distWidth / ratio;\n            }\n        }\n    } else if (parentScale) {\n        distWidth = (parentScale[0] - 1) * startOffsetWidth;\n        distHeight = (parentScale[1] - 1) * startOffsetHeight;\n    } else if (parentDistance) {\n        const scaleX = startOffsetWidth * directionsDists[0];\n        const scaleY = startOffsetHeight * directionsDists[1];\n        const ratioDistance = getDistSize([scaleX, scaleY]);\n\n        distWidth = parentDistance / ratioDistance * scaleX * directionRatios[0];\n        distHeight = parentDistance / ratioDistance * scaleY * directionRatios[1];\n    } else {\n        let dist = getDragDist({ datas, distX, distY });\n\n        dist = directionRatios.map((ratio, i) => {\n            return dist[i] * ratio;\n        });\n\n        [distWidth, distHeight] = getSizeDistByDist(\n            [startOffsetWidth, startOffsetHeight],\n            dist,\n            ratio,\n            sizeDirection,\n            keepRatio,\n        );\n    }\n    return {\n        // direction,\n        // sizeDirection,\n        distWidth,\n        distHeight,\n    };\n}\n","import { makeAble } from \"./AbleManager\";\nimport { triggerEvent, fillParams, fillEndParams } from \"../utils\";\nimport {\n    PinchableProps, Able, SnappableState,\n    OnPinchStart, OnPinch, OnPinchEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\n\n/**\n * @namespace Moveable.Pinchable\n * @description Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n */\nexport default makeAble(\"pinchable\", {\n    events: {\n        onPinchStart: \"pinchStart\",\n        onPinch: \"pinch\",\n        onPinchEnd: \"pinchEnd\",\n        onPinchGroupStart: \"pinchGroupStart\",\n        onPinchGroup: \"pinchGroup\",\n        onPinchGroupEnd: \"pinchGroupEnd\",\n    } as const,\n    dragStart() {\n        return true;\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<PinchableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, targets, angle, originalDatas } = e;\n        const { pinchable, ables } = moveable.props;\n\n        if (!pinchable) {\n            return false;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}Start` as \"onPinchStart\";\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlStart` as \"dragControlStart\";\n\n        const pinchAbles = (pinchable === true ? moveable.controlAbles : ables!.filter(able => {\n            return pinchable.indexOf(able.name as any) > -1;\n        })).filter(able => able.canPinch && able[controlEventName]);\n\n        const params = fillParams<OnPinchStart>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const result = triggerEvent(moveable, eventName, params);\n\n        datas.isPinch = result !== false;\n        datas.ables = pinchAbles;\n\n        const isPinch = datas.isPinch;\n\n        if (!isPinch) {\n            return false;\n        }\n        pinchAbles.forEach(able => {\n            originalDatas[able.name] = originalDatas[able.name] || {};\n\n            if (!able[controlEventName]) {\n                return;\n            }\n            const ableEvent: any = {\n                ...e,\n                datas: originalDatas[able.name],\n                parentRotate: angle,\n                isPinch: true,\n            };\n            able[controlEventName]!(moveable, ableEvent);\n        });\n\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            direction: [0, 0],\n        };\n        return isPinch;\n    },\n    pinch(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const {\n            datas, scale: pinchScale, distance,\n            originalDatas,\n            inputEvent, targets,\n            angle,\n        } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const parentDistance = distance * (1 - 1 / pinchScale);\n        const params = fillParams<OnPinch>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}` as \"onPinch\";\n        triggerEvent(moveable, eventName, params);\n\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}Control` as \"dragControl\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                datas: originalDatas[able.name],\n                inputEvent,\n                parentDistance,\n                parentRotate: angle,\n                isPinch: true,\n            } as any);\n        });\n        return params;\n    },\n    pinchEnd(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const { datas, isPinch, inputEvent, targets, originalDatas } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}End` as \"onPinchEnd\";\n\n        const params = fillEndParams<OnPinchEnd>(moveable, e, { isDrag: isPinch }) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        triggerEvent(moveable, eventName, params);\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlEnd` as \"dragControlEnd\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                isDrag: isPinch,\n                datas: originalDatas[able.name],\n                inputEvent,\n                isPinch: true,\n            } as any);\n        });\n        return isPinch;\n    },\n    pinchGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        return this.pinchStart!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.pinch!(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.pinchEnd!(moveable, { ...e, targets: moveable.props.targets });\n    },\n});\n\n/**\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n * @name Moveable.Pinchable#pinchable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.pinchable = true;\n */\n\n/**\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\n * @memberof Moveable.Pinchable\n * @event pinchStart\n * @param {Moveable.Pinchable.OnPinchStart} - Parameters for the pinchStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When pinching, the pinch event is called with part of scale, rotate, resize\n * @memberof Moveable.Pinchable\n * @event pinch\n * @param {Moveable.Pinchable.OnPinch} - Parameters for the pinch event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinch\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotate\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scale\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When the pinch finishes, the pinchEnd event is called.\n * @memberof Moveable.Pinchable\n * @event pinchEnd\n * @param {Moveable.Pinchable.OnPinchEnd} - Parameters for the pinchEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleEnd\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When the group pinch starts, the `pinchGroupStart` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupStart\n * @param {Moveable.Pinchable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\n *     console.log(\"onPinchGroupStart\", targets);\n * });\n */\n\n/**\n * When the group pinch, the `pinchGroup` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroup\n * @param {Moveable.Pinchable.OnPinchGroup} - Parameters for the `pinchGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\n *     console.log(\"onPinchGroup\", targets);\n * });\n */\n\n/**\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupEnd\n * @param {Moveable.Pinchable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\n * });\n */\n","import { Able, MoveableGroupInterface, MoveableManagerInterface, MoveableManagerState } from \"./types\";\nimport CustomGesto, { setCustomDrag } from \"./gesto/CustomGesto\";\n\nexport function fillChildEvents(\n    moveable: MoveableGroupInterface<any, any>,\n    name: string,\n    e: any,\n): any[] {\n    const datas = e.originalDatas;\n\n    datas.groupable = datas.groupable || {};\n\n    const groupableDatas = datas.groupable;\n\n    groupableDatas.childDatas = groupableDatas.childDatas || [];\n\n    const childDatas = groupableDatas.childDatas;\n\n    return moveable.moveables.map((_, i) => {\n        childDatas[i] = childDatas[i] || {};\n        childDatas[i][name] = childDatas[i][name] || {};\n\n        return {\n            ...e,\n            datas: childDatas[i][name],\n            originalDatas: childDatas[i],\n        };\n    });\n}\nexport function triggerChildGesto(\n    moveable: MoveableGroupInterface<any, any>,\n    able: Able,\n    type: string,\n    delta: number[],\n    e: any,\n    isConvert: boolean,\n    ableName: string,\n) {\n    const isStart = !!type.match(/Start$/g);\n    const isEnd = !!type.match(/End$/g);\n    const isPinch = e.isPinch;\n    const datas = e.datas;\n    const events = fillChildEvents(moveable, able.name, e);\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        const state = childMoveable.state as MoveableManagerState<any>;\n        const gestos = state.gestos;\n        let childEvent: any = ev;\n\n        if (isStart) {\n            childEvent = new CustomGesto(ableName).dragStart(delta, ev);\n        } else {\n\n\n            if (!gestos[ableName]) {\n                gestos[ableName] = datas.childGestos[i];\n            }\n            if (!gestos[ableName]) {\n                return;\n            }\n            childEvent = setCustomDrag(ev, state, delta, isPinch, isConvert, ableName);\n        }\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        if (isEnd) {\n            gestos[ableName] = null;\n        }\n        return result;\n    });\n    if (isStart) {\n        datas.childGestos = moveables.map(child => child.state.gestos[ableName]);\n    }\n    return childs;\n}\nexport function triggerChildAbles<T extends Able>(\n    moveable: MoveableGroupInterface<any, any>,\n    able: T,\n    type: keyof T & string,\n    e: any,\n    eachEvent: (movebale: MoveableManagerInterface<any, any>, ev: any) => any = (_, ev) => ev,\n    callback?: (moveable: MoveableManagerInterface<any, any>, ev: any, result: any, index: number) => any,\n) {\n    const isEnd = !!type.match(/End$/g);\n    const events = fillChildEvents(moveable, able.name, e);\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        let childEvent = ev;\n\n        childEvent = eachEvent(childMoveable, ev);\n\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        result && callback && callback(childMoveable, ev, result, i);\n\n        if (isEnd) {\n            childMoveable.state.gestos = {};\n        }\n        return result;\n    });\n\n    return childs;\n}\n","import { TINY_NUM } from \"@daybrush/utils\";\nimport { throttle } from \"@daybrush/utils\";\nimport {\n    MoveableClientRect, MoveableManagerInterface,\n    SnapDirectionPoses,\n    SnapDirections, SnappableProps,\n    SnappableState,\n} from \"../../types\";\nimport {\n    calculatePosition,\n} from \"../../utils\";\nexport const VERTICAL_NAMES = [\"left\", \"right\", \"center\"] as const;\nexport const HORIZONTAL_NAMES = [\"top\", \"bottom\", \"middle\"] as const;\nexport const VERTICAL_NAMES_MAP = {\n    start: \"left\",\n    end: \"right\",\n    center: \"center\",\n} as const;\nexport const HORIZONTAL_NAMES_MAP = {\n    start: \"top\",\n    end: \"bottom\",\n    center: \"middle\",\n} as const;\n\n\nexport function hasGuidelines(\n    moveable: MoveableManagerInterface<any, any>,\n    ableName: string\n): moveable is MoveableManagerInterface<SnappableProps, SnappableState> {\n    const {\n        props: {\n            snappable,\n            bounds,\n            innerBounds,\n            verticalGuidelines,\n            horizontalGuidelines,\n            snapGridWidth,\n            snapGridHeight,\n        },\n        state: { guidelines, enableSnap },\n    } = moveable;\n\n    if (\n        !snappable ||\n        !enableSnap ||\n        (ableName && snappable !== true && snappable.indexOf(ableName) < 0)\n    ) {\n        return false;\n    }\n    if (\n        snapGridWidth ||\n        snapGridHeight ||\n        bounds ||\n        innerBounds ||\n        (guidelines && guidelines.length) ||\n        (verticalGuidelines && verticalGuidelines.length) ||\n        (horizontalGuidelines && horizontalGuidelines.length)\n    ) {\n        return true;\n    }\n    return false;\n}\n\nexport function getSnapDirections(snapDirections: SnapDirections | boolean | undefined): SnapDirections {\n    if (snapDirections === false) {\n        return {};\n    } else if (snapDirections === true || !snapDirections) {\n        return { left: true, right: true, top: true, bottom: true };\n    }\n    return snapDirections;\n}\n\nexport function mapSnapDirectionPoses(\n    snapDirections: SnapDirections | boolean | undefined,\n    snapPoses: SnapDirectionPoses,\n) {\n    const nextSnapDirections = getSnapDirections(snapDirections);\n    const nextSnapPoses: SnapDirectionPoses = {};\n\n    for (const name in nextSnapDirections) {\n        if (name in snapPoses && (nextSnapDirections as any)[name]) {\n            (nextSnapPoses as any)[name] = (snapPoses as any)[name];\n        }\n    }\n    return nextSnapPoses;\n}\n\nexport function splitSnapDirectionPoses(\n    snapDirections: SnapDirections | boolean | undefined,\n    snapPoses: SnapDirectionPoses,\n) {\n    const nextSnapPoses = mapSnapDirectionPoses(snapDirections, snapPoses);\n    const horizontalNames = HORIZONTAL_NAMES.filter(name => name in nextSnapPoses);\n    const verticalNames = VERTICAL_NAMES.filter(name => name in nextSnapPoses);\n\n    return {\n        horizontal: horizontalNames.map(name => nextSnapPoses[name]!),\n        vertical: verticalNames.map(name => nextSnapPoses[name]!),\n    };\n}\n\nexport function calculateContainerPos(\n    rootMatrix: number[],\n    containerRect: MoveableClientRect,\n    n: number,\n) {\n    const clientPos = calculatePosition(\n        rootMatrix, [containerRect.clientLeft!, containerRect.clientTop!], n);\n\n    return [\n        containerRect.left + clientPos[0],\n        containerRect.top + clientPos[1],\n    ];\n}\n\nexport function solveLineConstants([point1, point2]: number[][]): [number, number, number] {\n    let dx = point2[0] - point1[0];\n    let dy = point2[1] - point1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n\n    // b > 0\n    // ax + by + c = 0\n    let a = 0;\n    let b = 0;\n    let c = 0;\n\n    if (!dx) {\n        // -x + 1 = 0\n        a = -1;\n        c = point1[0];\n    } else if (!dy) {\n        // y - 1 = 0\n        b = 1;\n        c = -point1[1];\n    } else {\n        // y = -a(x - x1) + y1\n        // ax + y + a * x1 - y1 = 0\n        a = -dy / dx;\n        b = 1;\n        c = a * point1[0] - point1[1];\n    }\n\n    return [a, b, c].map(v => throttle(v, TINY_NUM)) as [number, number, number];\n}\n","import {\n    SnapInfo, SnappableProps, SnappableState,\n    SnapGuideline, ResizableProps, ScalableProps,\n    SnapOffsetInfo, MoveableManagerInterface, SnapDirectionPoses,\n} from \"../../types\";\nimport {\n    selectValue, getTinyDist,\n} from \"../../utils\";\nimport { getPosByDirection, getPosesByDirection } from \"../../gesto/GestoUtils\";\nimport { TINY_NUM } from \"../../consts\";\nimport { minus } from \"@scena/matrix\";\nimport { splitSnapDirectionPoses } from \"./utils\";\n\n\n\nexport function checkMoveableSnapPoses(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    posesX: number[],\n    posesY: number[],\n    customSnapThreshold?: number,\n) {\n    const props = moveable.props;\n    const snapThreshold = selectValue<number>(customSnapThreshold, props.snapThreshold, 5);\n\n    return checkSnapPoses(\n        moveable.state.guidelines,\n        posesX,\n        posesY,\n        snapThreshold,\n    );\n}\n\nexport function checkSnapPoses(\n    guidelines: SnapGuideline[],\n    posesX: number[],\n    posesY: number[],\n    snapThreshold: number,\n) {\n    return {\n        vertical: checkSnap(guidelines, \"vertical\", posesX, snapThreshold),\n        horizontal: checkSnap(guidelines, \"horizontal\", posesY, snapThreshold),\n    };\n}\nexport function checkSnapKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n): { vertical: SnapOffsetInfo, horizontal: SnapOffsetInfo } {\n    const [endX, endY] = endPos;\n    const [startX, startY] = startPos;\n    let [dx, dy] = minus(endPos, startPos);\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    dx = getTinyDist(dx);\n    dy = getTinyDist(dy);\n\n    const verticalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    }\n    const {\n        vertical: verticalSnapInfo,\n        horizontal: horizontalSnapInfo,\n    } = checkMoveableSnapPoses(moveable, dx ? [endX] : [], dy ? [endY] : []);\n\n    verticalSnapInfo.posInfos.filter(({ pos }) => {\n        return isRight ? pos >= startX : pos <= startX;\n    });\n    horizontalSnapInfo.posInfos.filter(({ pos }) => {\n        return isBottom ? pos >= startY : pos <= startY;\n    });\n    verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\n    horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\n\n    const {\n        isSnap: isVerticalSnap,\n        guideline: verticalGuideline,\n    } = getNearestSnapGuidelineInfo(verticalSnapInfo);\n    const {\n        isSnap: isHorizontalSnap,\n        guideline: horizontalGuideline,\n    } = getNearestSnapGuidelineInfo(horizontalSnapInfo);\n    const horizontalPos = isHorizontalSnap ? horizontalGuideline!.pos[1] : 0;\n    const verticalPos = isVerticalSnap ? verticalGuideline!.pos[0] : 0;\n\n    if (dx === 0) {\n        if (isHorizontalSnap) {\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = horizontalGuideline!.pos[1];\n            horizontalInfo.offset = endY - horizontalInfo.pos;\n        }\n    } else if (dy === 0) {\n        if (isVerticalSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = verticalPos;\n            verticalInfo.offset = endX - verticalPos;\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isSnap = false;\n\n        if (isVerticalSnap) {\n            x = verticalPos;\n            y = a * x + b;\n            isSnap = true;\n        } else if (isHorizontalSnap) {\n            y = horizontalPos;\n            x = (y - b) / a;\n            isSnap = true;\n        }\n        if (isSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\n\nexport function checkSnaps(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    rect: SnapDirectionPoses,\n    customSnapThreshold?: number,\n) {\n    const poses = splitSnapDirectionPoses(moveable.props.snapDirections, rect);\n\n    return checkMoveableSnapPoses(\n        moveable,\n        poses.vertical,\n        poses.horizontal,\n        customSnapThreshold,\n    );\n}\n\nexport function getNearestSnapGuidelineInfo(\n    snapInfo: SnapInfo,\n) {\n    const isSnap = snapInfo.isSnap;\n\n    if (!isSnap) {\n        return {\n            isSnap: false,\n            offset: 0,\n            dist: -1,\n            pos: 0,\n            guideline: null,\n        };\n    }\n    const posInfo = snapInfo.posInfos[0];\n    const guidelineInfo = posInfo!.guidelineInfos[0];\n    const offset = guidelineInfo!.offset;\n    const dist = guidelineInfo!.dist;\n    const guideline = guidelineInfo!.guideline;\n\n    return {\n        isSnap,\n        offset,\n        dist,\n        pos: posInfo!.pos,\n        guideline,\n    };\n}\n\nfunction checkSnap(\n    guidelines: SnapGuideline[],\n    targetType: \"horizontal\" | \"vertical\",\n    targetPoses: number[],\n    snapThreshold: number,\n): SnapInfo {\n    if (!guidelines || !guidelines.length) {\n        return {\n            isSnap: false,\n            index: -1,\n            posInfos: [],\n        };\n    }\n    const isVertical = targetType === \"vertical\";\n    const posType = isVertical ? 0 : 1;\n\n    const snapPosInfos = targetPoses.map((targetPos, index) => {\n        const guidelineInfos = guidelines.map(guideline => {\n            const { pos } = guideline;\n            const offset = targetPos - pos[posType];\n\n            return {\n                offset,\n                dist: Math.abs(offset),\n                guideline,\n            };\n        }).filter(({ guideline, dist }) => {\n            const { type } = guideline;\n            if (\n                type !== targetType\n                || dist > snapThreshold\n            ) {\n                return false;\n            }\n            return true;\n        }).sort(\n            (a, b) => a.dist - b.dist,\n        );\n\n\n        return {\n            pos: targetPos,\n            index,\n            guidelineInfos,\n        };\n    }).filter(snapPosInfo => {\n        return snapPosInfo.guidelineInfos.length > 0;\n    }).sort((a, b) => {\n        return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\n    });\n\n    const isSnap = snapPosInfos.length > 0;\n    return {\n        isSnap,\n        index: isSnap ? snapPosInfos[0].index : -1,\n        posInfos: snapPosInfos,\n    };\n}\n\nexport function getSnapInfosByDirection(\n    moveable: MoveableManagerInterface<SnappableProps & (ResizableProps | ScalableProps), SnappableState>,\n    poses: number[][],\n    snapDirection: number[],\n) {\n    let nextPoses: number[][] = [];\n    if (snapDirection[0] && snapDirection[1]) {\n        nextPoses = [\n            snapDirection,\n            [-snapDirection[0], snapDirection[1]],\n            [snapDirection[0], -snapDirection[1]],\n        ].map(direction => getPosByDirection(poses, direction));\n    } else if (!snapDirection[0] && !snapDirection[1]) {\n        const alignPoses = [poses[0], poses[1], poses[3], poses[2], poses[0]];\n\n        for (let i = 0; i < 4; ++i) {\n            nextPoses.push(alignPoses[i]);\n            nextPoses.push([\n                (alignPoses[i][0] + alignPoses[i + 1][0]) / 2,\n                (alignPoses[i][1] + alignPoses[i + 1][1]) / 2,\n            ]);\n        }\n    } else {\n        if (moveable.props.keepRatio) {\n            nextPoses = [\n                [-1, -1],\n                [-1, 1],\n                [1, -1],\n                [1, 1],\n                snapDirection,\n            ].map(dir => getPosByDirection(poses, dir));\n        } else {\n            nextPoses = getPosesByDirection(poses, snapDirection);\n\n            if (nextPoses.length > 1) {\n                nextPoses.push([\n                    (nextPoses[0][0] + nextPoses[1][0]) / 2,\n                    (nextPoses[0][1] + nextPoses[1][1]) / 2,\n                ]);\n            }\n        }\n    }\n    return checkMoveableSnapPoses(moveable, nextPoses.map(pos => pos[0]), nextPoses.map(pos => pos[1]), 1);\n}\n\nexport function checkSnapBoundPriority(\n    a: { isBound: boolean, isSnap: boolean, offset: number },\n    b: { isBound: boolean, isSnap: boolean, offset: number },\n) {\n    const aDist = Math.abs(a.offset);\n    const bDist = Math.abs(b.offset);\n\n    if (a.isBound && b.isBound) {\n        return bDist - aDist;\n    } else if (a.isBound) {\n        return -1;\n    } else if (b.isBound) {\n        return 1;\n    } else if (a.isSnap && b.isSnap) {\n        return bDist - aDist;\n    } else if (a.isSnap) {\n        return -1;\n    } else if (b.isSnap) {\n        return 1;\n    } else if (aDist < TINY_NUM) {\n        return 1;\n    } else if (bDist < TINY_NUM) {\n        return -1;\n    }\n    return aDist - bDist;\n}\nexport function getNearOffsetInfo<T extends { offset: number[], isBound: boolean, isSnap: boolean, sign: number[] }>(\n    offsets: T[],\n    index: number,\n) {\n    return offsets.slice().sort((a, b) => {\n        const aSign = a.sign[index];\n        const bSign = b.sign[index];\n        const aOffset = a.offset[index];\n        const bOffset = b.offset[index];\n        // -1 The positions of a and b do not change.\n        // 1 The positions of a and b are reversed.\n        if (!aSign) {\n            return 1;\n        } else if (!bSign) {\n            return -1;\n        }\n        return checkSnapBoundPriority(\n            { isBound: a.isBound, isSnap: a.isSnap, offset: aOffset },\n            { isBound: b.isBound, isSnap: b.isSnap, offset: bOffset },\n        );\n    })[0];\n}\n\n\nexport function getCheckSnapDirections(\n    direction: number[],\n    fixedDirection: number[],\n    keepRatio: boolean\n) {\n    const directions: number[][][] = [];\n    // const fixedDirection = [-direction[0], -direction[1]];\n\n    if (keepRatio) {\n        if (Math.abs(fixedDirection[0]) !== 1 || Math.abs(fixedDirection[1]) !== 1) {\n            directions.push(\n                [fixedDirection, [-1, -1]],\n                [fixedDirection, [-1, 1]],\n                [fixedDirection, [1, -1]],\n                [fixedDirection, [1, 1]],\n            );\n        } else {\n            directions.push(\n                [fixedDirection, [direction[0], -direction[1]]],\n                [fixedDirection, [-direction[0], direction[1]]],\n            );\n        }\n        directions.push([fixedDirection, direction]);\n    } else {\n        if ((direction[0] && direction[1]) || (!direction[0] && !direction[1])) {\n            const endDirection = direction[0] ? direction : [1, 1];\n\n            [1, -1].forEach(signX => {\n                [1, -1].forEach(signY => {\n                    const nextDirection = [signX * endDirection[0], signY * endDirection[1]];\n\n                    if (\n                        fixedDirection[0] === nextDirection[0]\n                        && fixedDirection[1] === nextDirection[1]\n                    ) {\n                        return;\n                    }\n                    directions.push([fixedDirection, nextDirection]);\n                });\n            });\n        } else if (direction[0]) {\n            const signs = Math.abs(fixedDirection[0]) === 1 ? [1] : [1, -1];\n\n            signs.forEach(sign => {\n                directions.push(\n                    [\n                        [fixedDirection[0], -1],\n                        [sign * direction[0], -1],\n                    ],\n                    [\n                        [fixedDirection[0], 0],\n                        [sign * direction[0], 0],\n                    ],\n                    [\n                        [fixedDirection[0], 1],\n                        [sign * direction[0], 1],\n                    ]\n                );\n            });\n        } else if (direction[1]) {\n            const signs = Math.abs(fixedDirection[1]) === 1 ? [1] : [1, -1];\n\n            signs.forEach(sign => {\n                directions.push(\n                    [\n                        [-1, fixedDirection[1]],\n                        [-1, sign * direction[1]],\n                    ],\n                    [\n                        [0, fixedDirection[1]],\n                        [0, sign * direction[1]],\n                    ],\n                    [\n                        [1, fixedDirection[1]],\n                        [1, sign * direction[1]],\n                    ]\n                );\n            });\n        }\n    }\n    return directions;\n}\n","import { average, getRad, throttle } from \"@daybrush/utils\";\nimport { rotate } from \"@scena/matrix\";\nimport { maxOffset, getDistSize, getTinyDist, calculatePoses } from \"../../utils\";\n\nimport { SnappableProps, DraggableProps, RotatableProps, MoveableManagerInterface } from \"../../types\";\nimport { getDragDist, getPosByDirection, getInverseDragDist } from \"../../gesto/GestoUtils\";\nimport { getNearOffsetInfo } from \"./snap\";\nimport { TINY_NUM } from \"../../consts\";\nimport { solveLineConstants } from \"./utils\";\n\nfunction isStartLine(dot: number[], line: number[][]) {\n    // l    o     => true\n    // o    l    => false\n    const cx = average([line[0][0], line[1][0]]);\n    const cy = average([line[0][1], line[1][1]]);\n\n    return {\n        vertical: cx <= dot[0],\n        horizontal: cy <= dot[1],\n    };\n}\nfunction hitTestLine(\n    dot: number[],\n    [pos1, pos2]: number[][],\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    let test1: number;\n    let test2: number;\n    if (!dx) {\n        test1 = pos1[0];\n        test2 = dot[0];\n    } else if (!dy) {\n        test1 = pos1[1];\n        test2 = dot[1];\n    } else {\n        const a = dy / dx;\n\n        // y = a * (x - pos1) + pos1\n        test1 = a * (dot[0] - pos1[0]) + pos1[1];\n        test2 = dot[1];\n    }\n    return test1 - test2;\n}\nfunction isSameStartLine(dots: number[][], line: number[][], centerSign: boolean, error: number = TINY_NUM) {\n    return dots.every(dot => {\n        const value = hitTestLine(dot, line);\n        const sign = value <= 0;\n        return sign === centerSign || Math.abs(value) <= error;\n    });\n}\nfunction checkInnerBoundDot(\n    pos: number,\n    start: number,\n    end: number,\n    isStart: boolean,\n    threshold = 0,\n) {\n    if (\n        (isStart && start - threshold <= pos)\n        || (!isStart && pos <= end + threshold)\n    ) {\n        // false 402 565 602 => 37 ([0, 37])\n        // true 400 524.9712603540036 600 => 124 ([124, 0])\n        // true 400 410 600 => 10 ([10, 0])\n        return {\n            isBound: true,\n            offset: isStart ? start - pos : end - pos,\n        };\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\n\nfunction checkInnerBound(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    { line, centerSign, verticalSign, horizontalSign, lineConstants }: InnerBoundLineInfo,\n) {\n    const bounds = moveable.props.innerBounds;\n\n    if (!bounds) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    const { left, top, width, height } = bounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n\n    if (isSameStartLine([\n        [left, top],\n        [left + width, top],\n        [left, top + height],\n        [left + width, top + height],\n    ], line, centerSign)) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    // test vertical\n\n    const topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, verticalSign);\n    const bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, verticalSign);\n\n    // test horizontal\n    const leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, horizontalSign);\n    const rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, horizontalSign);\n\n    const isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\n    const isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\n    const isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\n    const isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\n    const verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\n    const horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\n    let offset = [0, 0];\n    let isBound = false;\n    let isAllBound = false;\n\n    if (Math.abs(horizontalOffset) < Math.abs(verticalOffset)) {\n        offset = [verticalOffset, 0];\n        isBound = isVerticalBound;\n        isAllBound = isAllVerticalBound;\n    } else {\n        offset = [0, horizontalOffset];\n        isBound = isHorizontalBound;\n        isAllBound = isAllHorizontalBound;\n    }\n    return {\n        isAllBound,\n        isVerticalBound,\n        isHorizontalBound,\n        isBound,\n        offset,\n    };\n}\n\nfunction checkLineBoundCollision(\n    line: number[][],\n    [a, b]: [number, number, number],\n    boundLine: number[][],\n    isStart: boolean,\n    threshold?: number,\n    isRender?: boolean,\n) {\n    const dot1 = line[0];\n    // const dot2 = line[1];\n    const boundDot1 = boundLine[0];\n    const boundDot2 = boundLine[1];\n\n    // const dy1 = getTinyDist(dot2[1] - dot1[1]);\n    // const dx1 = getTinyDist(dot2[0] - dot1[0]);\n    const dy2 = getTinyDist(boundDot2[1] - boundDot1[1]);\n    const dx2 = getTinyDist(boundDot2[0] - boundDot1[0]);\n\n    const hasDx = b;\n    const hasDy = a;\n    const slope = - a / b;\n    // lineConstants\n    // ax + by + c = 0\n    // dx2 or dy2 is zero\n    if (!dx2) {\n        // vertical\n        // by + c = 0\n        if (isRender && !hasDy) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (hasDx) {\n            // ax + by + c = 0\n            // const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\n            const y = slope * (boundDot1[0] - dot1[0]) + dot1[1];\n\n            // boundDot1[1] <= y  <= boundDot2[1]\n            return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\n        } else {\n            // ax + c = 0\n            const offset = boundDot1[0] - dot1[0];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    } else if (!dy2) {\n        // horizontal\n        if (isRender && !hasDx) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (hasDy) {\n            // y = a * (x - x1) + y1\n            // x = (y - y1) / a + x1\n            // const a = dy1 / dx1;\n            // const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\n            const x = (boundDot1[1] - dot1[1]) / slope + dot1[0];\n\n            // boundDot1[0] <= x && x <= boundDot2[0]\n            return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\n        } else {\n            const offset = boundDot1[1] - dot1[1];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\nexport function getInnerBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    lineInfos: InnerBoundLineInfo[],\n    datas: any,\n) {\n    return lineInfos.map(info => {\n        const {\n            isBound,\n            offset,\n            isVerticalBound,\n            isHorizontalBound,\n        } = checkInnerBound(moveable, info);\n\n        const multiple = info.multiple;\n\n        const sizeOffset = getDragDist({\n            datas,\n            distX: offset[0],\n            distY: offset[1],\n        }).map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound,\n            isVerticalBound,\n            isHorizontalBound,\n            isSnap: false,\n            offset: sizeOffset,\n        };\n    });\n}\n\nexport function getInnerBoundDragInfo(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    poses: number[][],\n    datas: any,\n) {\n    const lines = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false).map(info => {\n        return {\n            ...info,\n            multiple: info.multiple.map(dir => Math.abs(dir) * 2),\n        };\n    });\n    const innerBoundInfo = getInnerBoundInfo(moveable, lines, datas);\n    const widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\n    const heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\n    let verticalOffset = 0;\n    let horizontalOffset = 0;\n    const isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\n    const isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\n\n    if (isVerticalBound || isHorizontalBound) {\n        [verticalOffset, horizontalOffset] = getInverseDragDist({\n            datas,\n            distX: -widthOffsetInfo.offset[0],\n            distY: -heightOffsetInfo.offset[1],\n        });\n    }\n\n    return {\n        vertical: {\n            isBound: isVerticalBound,\n            offset: verticalOffset,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            offset: horizontalOffset,\n        },\n    };\n}\nexport function getCheckSnapLineDirections(\n    direction: number[],\n    keepRatio: boolean,\n) {\n    const lineDirections: number[][][] = [];\n    const x = direction[0];\n    const y = direction[1];\n    if (x && y) {\n        lineDirections.push(\n            [[0, y * 2], direction, [-x, y]],\n            [[x * 2, 0], direction, [x, -y]],\n        );\n    } else if (x) {\n        // vertcal\n        lineDirections.push(\n            [[x * 2, 0], [x, 1], [x, -1]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[0, -1], [x, -1], [-x, -1]],\n                [[0, 1], [x, 1], [-x, 1]],\n            );\n        }\n    } else if (y) {\n        // horizontal\n        lineDirections.push(\n            [[0, y * 2], [1, y], [-1, y]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[-1, 0], [-1, y], [-1, -y]],\n                [[1, 0], [1, y], [1, -y]],\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        lineDirections.push(\n            [[-1, 0], [-1, -1], [-1, 1]],\n            [[1, 0], [1, -1], [1, 1]],\n            [[0, -1], [-1, -1], [1, -1]],\n            [[0, 1], [-1, 1], [1, 1]],\n        );\n    }\n\n    return lineDirections;\n}\nexport interface InnerBoundLineInfo {\n    line: number[][];\n    multiple: number[];\n    horizontalSign: boolean;\n    verticalSign: boolean;\n    centerSign: boolean;\n    lineConstants: [number, number, number];\n}\nexport function getCheckInnerBoundLineInfos(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n): InnerBoundLineInfo[] {\n    const {\n        allMatrix,\n        is3d,\n    } = moveable.state;\n    const virtualPoses = calculatePoses(allMatrix, 100, 100, is3d ? 4 : 3);\n    const center = getPosByDirection(virtualPoses, [0, 0]);\n\n    return getCheckSnapLineDirections(direction, keepRatio).map(([multiple, dir1, dir2]) => {\n        const virtualLine = [\n            getPosByDirection(virtualPoses, dir1),\n            getPosByDirection(virtualPoses, dir2),\n        ];\n        const lineConstants = solveLineConstants(virtualLine);\n        const {\n            vertical: verticalSign,\n            horizontal: horizontalSign,\n        } = isStartLine(center, virtualLine);\n        const centerSign = hitTestLine(center, virtualLine) <= 0;\n\n        return {\n            multiple,\n            centerSign,\n            verticalSign,\n            horizontalSign,\n            lineConstants,\n            line: [\n                getPosByDirection(poses, dir1),\n                getPosByDirection(poses, dir2),\n            ],\n        };\n    });\n}\n\nfunction isBoundRotate(\n    relativePoses: number[][],\n    boundDots: number[][],\n    center: number[],\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n    return [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].some(line => {\n        const centerSign = hitTestLine(center, line) <= 0;\n\n        return !isSameStartLine(boundDots, line, centerSign);\n    });\n}\nfunction getDistPointLine([pos1, pos2]: number[][]) {\n    // x = 0, y = 0\n    // d = (ax + by + c) / root(a2 + b2)\n\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return Math.abs(pos1[0]);\n    }\n    if (!dy) {\n        return Math.abs(pos1[1]);\n    }\n    // y - y1 = a(x - x1)\n    // 0 = ax -y + -a * x1 + y1\n\n    const a = dy / dx;\n\n    return Math.abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\n}\nfunction solveReverseLine([pos1, pos2]: number[][]) {\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return [pos1[0], 0];\n    }\n    if (!dy) {\n        return [0, pos1[1]];\n    }\n    const a = dy / dx;\n    // y - y1 = a (x  - x1)\n    // y = ax - a * x1 + y1\n    const b = -a * pos1[0] + pos1[1];\n    // y = ax + b = -1/a x\n    // x = -b / (a + 1 / a)\n    // y = b / (1 + 1 / a^2)\n\n    return [\n        -b / (a + 1 / a),\n        b / ((a * a) + 1),\n    ];\n}\nexport function checkRotateInnerBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.innerBounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left,\n        top,\n        width,\n        height,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = left + width - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = top + height - origin[1];\n    const dots = [\n        [relativeLeft, relativeTop],\n        [relativeRight, relativeTop],\n        [relativeLeft, relativeBottom],\n        [relativeRight, relativeBottom],\n    ];\n    const center = getPosByDirection(nextPoses, [0, 0]);\n\n    if (!isBoundRotate(nextPoses, dots, center, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    const dotInfos = dots.map(dot => [\n        getDistSize(dot),\n        getRad([0, 0], dot),\n    ]);\n    [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].forEach(line => {\n        const lineRad = getRad([0, 0], solveReverseLine(line));\n        const lineDist = getDistPointLine(line);\n\n        result.push(...dotInfos\n            .filter(([dotDist]) => {\n                return dotDist && lineDist <= dotDist;\n            })\n            .map(([dotDist, dotRad]) => {\n                const distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\n                const nextRad1 = dotRad + distRad;\n                const nextRad2 = dotRad - distRad;\n\n                return [\n                    rad + nextRad1 - lineRad,\n                    rad + nextRad2 - lineRad,\n                ];\n            })\n            .reduce((prev, cur) => {\n                prev.push(...cur);\n                return prev;\n            }, [])\n            .filter(nextRad => !isBoundRotate(prevPoses, dots, center, nextRad))\n            .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n    });\n    return result;\n}\n\nexport function checkInnerBoundPoses(\n    moveable: MoveableManagerInterface<SnappableProps>,\n) {\n    const innerBounds = moveable.props.innerBounds;\n\n    if (!innerBounds) {\n        return {\n            vertical: [],\n            horizontal: [],\n        };\n    }\n    const {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = moveable.getRect();\n    const poses = [pos1, pos2, pos3, pos4];\n    const center = getPosByDirection(poses, [0, 0]);\n    const { left, top, width, height } = innerBounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n    const lineInfos = getCheckInnerBoundLineInfos(moveable, poses, [0, 0], false);\n\n    const horizontalPoses: number[] = [];\n    const verticalPoses: number[] = [];\n\n    const boundMap = {\n        top: false,\n        bottom: false,\n        left: false,\n        right: false,\n    };\n\n    lineInfos.forEach(lineInfo => {\n        const { line, lineConstants } = lineInfo;\n        const {\n            horizontal: isHorizontalStart,\n            vertical: isVerticalStart,\n        } = isStartLine(center, line);\n\n        // test vertical\n        const topBoundInfo = checkLineBoundCollision(line, lineConstants, topLine, isVerticalStart, 1, true);\n        const bottomBoundInfo = checkLineBoundCollision(line, lineConstants, bottomLine, isVerticalStart, 1, true);\n\n        // test horizontal\n        const leftBoundInfo = checkLineBoundCollision(line, lineConstants, leftLine, isHorizontalStart, 1, true);\n        const rightBoundInfo = checkLineBoundCollision(line, lineConstants, rightLine, isHorizontalStart, 1, true);\n\n        if (topBoundInfo.isBound && !boundMap.top) {\n            horizontalPoses.push(top);\n            boundMap.top = true;\n        }\n        if (bottomBoundInfo.isBound && !boundMap.bottom) {\n            horizontalPoses.push(top + height);\n            boundMap.bottom = true;\n        }\n        if (leftBoundInfo.isBound && !boundMap.left) {\n            verticalPoses.push(left);\n            boundMap.left = true;\n        }\n        if (rightBoundInfo.isBound && !boundMap.right) {\n            verticalPoses.push(left + width);\n            boundMap.right = true;\n        }\n    });\n\n    return {\n        horizontal: horizontalPoses,\n        vertical: verticalPoses,\n    };\n}\n","import { getRad, throttle } from \"@daybrush/utils\";\nimport {\n    BoundInfo, SnappableProps, BoundType,\n    RotatableProps, MoveableManagerInterface, SnappableState,\n} from \"../../types\";\nimport { rotate, minus } from \"@scena/matrix\";\nimport { getDistSize } from \"../../utils\";\nimport { TINY_NUM } from \"../../consts\";\n\nexport function checkBoundPoses(\n    bounds: BoundType | false | undefined,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n) {\n    const {\n        position = \"client\",\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = bounds || {};\n    const nextBounds = {\n        position,\n        left,\n        top,\n        right,\n        bottom,\n    };\n\n    return {\n        vertical: checkBounds(nextBounds, verticalPoses, true),\n        horizontal: checkBounds(nextBounds, horizontalPoses, false),\n    };\n}\nexport function getBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    externalBounds?: BoundType | false | null,\n) {\n    const {\n        containerClientRect: {\n            clientHeight: containerHeight,\n            clientWidth: containerWidth,\n            clientLeft,\n            clientTop,\n        },\n        snapOffset: {\n            left: snapOffsetLeft,\n            top: snapOffsetTop,\n            right: snapOffsetRight,\n            bottom: snapOffsetBottom,\n        },\n    } = moveable.state;\n    const bounds = externalBounds || moveable.props.bounds || {} as BoundType;\n    const position = bounds.position || \"client\";\n    const isCSS = position === \"css\";\n    const {\n        left = -Infinity,\n        top = -Infinity,\n    } = bounds;\n    let {\n        right = isCSS ? -Infinity : Infinity,\n        bottom = isCSS ? -Infinity : Infinity,\n    } = bounds;\n\n    if (isCSS) {\n        right = containerWidth! + snapOffsetRight - snapOffsetLeft - right;\n        bottom = containerHeight! + snapOffsetBottom - snapOffsetTop - bottom;\n    }\n\n    return {\n        left: left + snapOffsetLeft - clientLeft!,\n        right: right + snapOffsetLeft - clientLeft!,\n        top: top + snapOffsetTop - clientTop!,\n        bottom: bottom + snapOffsetTop - clientTop!,\n    };\n}\nexport function checkBoundKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n) {\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const [endX, endY] = endPos;\n    let [dx, dy] = minus(endPos, startPos);\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    const verticalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    } else if (dx === 0) {\n        if (isBottom) {\n            if (bottom < endY) {\n                horizontalInfo.pos = bottom;\n                horizontalInfo.offset = endY - bottom;\n            }\n        } else {\n            if (top > endY) {\n                horizontalInfo.pos = top;\n                horizontalInfo.offset = endY - top;\n            }\n        }\n    } else if (dy === 0) {\n        if (isRight) {\n            if (right < endX) {\n                verticalInfo.pos = right;\n                verticalInfo.offset = endX - right;\n            }\n        } else {\n            if (left > endX) {\n                verticalInfo.pos = left;\n                verticalInfo.offset = endX - left;\n            }\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isBound = false;\n\n        if (isRight && right <= endX) {\n            y = a * right + b;\n            x = right;\n            isBound = true;\n        } else if (!isRight && endX <= left) {\n            y = a * left + b;\n            x = left;\n            isBound = true;\n        }\n        if (isBound) {\n            if (y < top || y > bottom) {\n                isBound = false;\n            }\n        }\n        if (!isBound) {\n            if (isBottom && bottom <= endY) {\n                y = bottom;\n                x = (y - b) / a;\n                isBound = true;\n            } else if (!isBottom &&  endY <= top) {\n                y = top;\n                x = (y - b) / a;\n                isBound = true;\n            }\n        }\n        if (isBound) {\n            verticalInfo.isBound = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isBound = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\nfunction checkBounds(\n    bounds: Required<BoundType>,\n    poses: number[],\n    isVertical: boolean,\n): BoundInfo[] {\n    // 0   [100 - 200]  300\n    const startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\n    const endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"];\n\n    // 450\n    const minPos = Math.min(...poses);\n    const maxPos = Math.max(...poses);\n    const boundInfos: BoundInfo[] = [];\n\n    if (startBoundPos + 1 > minPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: minPos - startBoundPos,\n            pos: startBoundPos,\n        });\n    }\n    if (endBoundPos - 1 < maxPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: maxPos - endBoundPos,\n            pos: endBoundPos,\n        });\n    }\n\n    if (!boundInfos.length) {\n        boundInfos.push({\n            isBound: false,\n            offset: 0,\n            pos: 0,\n        });\n    }\n\n    return boundInfos.sort((a, b) => Math.abs(b.offset) - Math.abs(a.offset));\n}\nexport function isBoundRotate(\n    relativePoses: number[][],\n    boundRect: { left: number, top: number, right: number, bottom: number },\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n\n    return nextPoses.some(pos => {\n        return (pos[0] < boundRect.left && Math.abs(pos[0] - boundRect.left) > 0.1)\n            || (pos[0] > boundRect.right && Math.abs(pos[0] - boundRect.right) > 0.1)\n            || (pos[1] < boundRect.top && Math.abs(pos[1] - boundRect.top) > 0.1)\n            || (pos[1] > boundRect.bottom && Math.abs(pos[1] - boundRect.bottom) > 0.1);\n    });\n}\nexport function boundRotate(\n    vec: number[],\n    boundPos: number,\n    index: number,\n) {\n    const r = getDistSize(vec);\n    const nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\n\n    return [nextPos, -nextPos].sort((a, b) => {\n        return Math.abs(a - vec[index ? 0 : 1]) - Math.abs(b - vec[index ? 0 : 1]);\n    }).map(pos => {\n        return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\n    });\n}\n\nexport function checkRotateBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, SnappableState>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    if (!moveable.props.bounds) {\n        return [];\n    }\n    const rad = rotation * Math.PI / 180;\n\n    const {\n        left,\n        top,\n        right,\n        bottom,\n    } = getBounds(moveable);\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = right - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = bottom - origin[1];\n    const boundRect = {\n        left: relativeLeft,\n        top: relativeTop,\n        right: relativeRight,\n        bottom: relativeBottom,\n    };\n\n    if (!isBoundRotate(nextPoses, boundRect, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    [\n        [relativeLeft, 0],\n        [relativeRight, 0],\n        [relativeTop, 1],\n        [relativeBottom, 1],\n    ].forEach(([boundPos, index]) => {\n        nextPoses.forEach(nextPos => {\n            const relativeRad1 = getRad([0, 0], nextPos);\n\n            result.push(...boundRotate(nextPos, boundPos, index)\n                .map(relativeRad2 => rad + relativeRad2 - relativeRad1)\n                .filter(nextRad => !isBoundRotate(prevPoses, boundRect, nextRad))\n                .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n        });\n    });\n\n    return result;\n}\n","import { throttle } from \"@daybrush/utils\";\nimport {\n    RenderGuidelineInfo, Renderer, RenderGuidelineInnerInfo,\n    MoveableManagerInterface, SnappableProps, SnapGuideline,\n    SnappableRenderType, SnappableState,\n    SnapDirectionPoses,\n} from \"../../types\";\nimport { prefix, groupBy } from \"../../utils\";\nimport { HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP } from \"./utils\";\n\nexport function renderGuideline(info: RenderGuidelineInfo, React: Renderer): any {\n    const { direction, classNames, size, pos, zoom, key } = info;\n    const isHorizontal = direction === \"horizontal\";\n    const scaleType = isHorizontal ? \"Y\" : \"X\";\n    // const scaleType2 = isHorizontal ? \"Y\" : \"X\";\n\n    return React.createElement(\"div\", {\n        key,\n        className: classNames.join(\" \"),\n        style: {\n            [isHorizontal ? \"width\" : \"height\"]: `${size}`,\n            transform: `translate(${pos[0]}, ${pos[1]}) translate${scaleType}(-50%) scale${scaleType}(${zoom})`,\n        },\n    });\n}\n\nexport function renderInnerGuideline(info: RenderGuidelineInnerInfo, React: Renderer): any {\n    return renderGuideline({\n        ...info,\n        classNames: [\n            prefix(\"line\", \"guideline\", info.direction),\n            ...info.classNames,\n        ].filter(className => className) as string[],\n        size: info.size || `${info.sizeValue}px`,\n        pos: info.pos || info.posValue.map(v => `${throttle(v, 0.1)}px`),\n    }, React);\n}\n\nexport function renderSnapPoses(\n    moveable: MoveableManagerInterface,\n    direction: string,\n    snapPoses: SnappableRenderType[],\n    minPos: number,\n    targetPos: number,\n    size: number,\n    index: number,\n    React: Renderer\n) {\n    const { zoom } = moveable.props;\n    return snapPoses.map(({ type, pos }, i) => {\n        const renderPos = [0, 0];\n\n        renderPos[index] = minPos;\n        renderPos[index ? 0 : 1] = -targetPos + pos;\n\n        return renderInnerGuideline(\n            {\n                key: `${direction}TargetGuideline${i}`,\n                classNames: [prefix(\"target\", \"bold\", type)],\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n                direction: direction,\n            },\n            React\n        );\n    });\n}\nexport function renderGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    type: \"vertical\" | \"horizontal\",\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: Renderer\n): any[] {\n    const { zoom, isDisplayInnerSnapDigit } = moveable.props;\n\n    const mainNames = type === \"horizontal\" ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    const targetStart = targetRect[mainNames.start]!;\n    const targetEnd = targetRect[mainNames.end]!;\n    return guidelines.filter(({ hide, elementRect }) => {\n        if (hide) {\n            return false;\n        }\n        if (isDisplayInnerSnapDigit && elementRect) {\n            // inner\n            const rect = elementRect.rect;\n\n            if (rect[mainNames.start]! <= targetStart && targetEnd <= rect[mainNames.end]!) {\n                return false;\n            }\n        }\n        return true;\n    }).map((guideline, i) => {\n        const { pos, size, element, className } = guideline;\n\n        const renderPos = [\n            -targetPos[0] + pos[0],\n            -targetPos[1] + pos[1],\n        ];\n\n        return renderInnerGuideline(\n            {\n                key: `${type}-default-guideline-${i}`,\n                classNames: element ? [prefix(\"bold\"), className] : [prefix(\"normal\"), className],\n                direction: type,\n                posValue: renderPos,\n                sizeValue: size,\n                zoom: zoom!,\n            },\n            React\n        );\n    });\n}\n\nexport function renderDigitLine(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    type: \"vertical\" | \"horizontal\",\n    lineType: \"dashed\" | \"gap\",\n    index: number,\n    gap: number,\n    renderPos: number[],\n    className: string | undefined,\n    React: Renderer,\n): any {\n    const {\n        snapDigit = 0,\n        isDisplaySnapDigit = true,\n        snapDistFormat = (v: number, type: \"vertical\" | \"horizontal\") => {\n            // Type can be used render different values.\n            if (type === 'vertical') {\n                return v;\n            }\n            return v;\n        },\n        zoom,\n    } = moveable.props;\n    const scaleType = type === \"horizontal\" ? \"X\" : \"Y\";\n    const sizeName = type === \"vertical\" ? \"height\" : \"width\";\n    const absGap = Math.abs(gap!);\n    const snapSize = isDisplaySnapDigit\n        ? parseFloat(absGap.toFixed(snapDigit))\n        : 0;\n    return <div\n        key={`${type}-${lineType}-guideline-${index}`}\n        className={prefix(\"guideline-group\", type)}\n        style={{\n            left: `${renderPos[0]}px`,\n            top: `${renderPos[1]}px`,\n            [sizeName]: `${absGap}px`,\n        }}\n    >\n        {renderInnerGuideline(\n            {\n                direction: type,\n                classNames: [prefix(lineType), className],\n                size: \"100%\",\n                posValue: [0, 0],\n                sizeValue: absGap,\n                zoom: zoom!,\n            },\n            React\n        )}\n        <div\n            className={prefix(\"size-value\", \"gap\")}\n            style={{\n                transform: `translate${scaleType}(-50%) scale(${zoom})`,\n            }}\n        >\n            {snapSize > 0 ? snapDistFormat(snapSize, type) : \"\"}\n        </div>\n    </div>;\n}\n\nexport function groupByElementGuidelines(\n    type: \"vertical\" | \"horizontal\",\n    guidelines: SnapGuideline[],\n    targetRect: SnapDirectionPoses,\n    isDisplayInnerSnapDigit: boolean,\n) {\n    const index = type === \"vertical\" ? 0 : 1;\n    const otherIndex = type === \"vertical\" ? 1 : 0;\n    const names = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n    const targetStart = targetRect[names.start]!;\n    const targetEnd = targetRect[names.end]!;\n    return groupBy(guidelines, (guideline) => {\n        return guideline.pos[index];\n    }).map(nextGuidelines => {\n        const start: SnapGuideline[] = [];\n        const end: SnapGuideline[] = [];\n        const inner: SnapGuideline[] = [];\n\n        nextGuidelines.forEach(guideline => {\n            const element = guideline.element!;\n            const rect = guideline.elementRect!.rect;\n            if (rect[names.end]! < targetStart) {\n                start.push(guideline);\n            } else if (targetEnd < rect[names.start]!) {\n                end.push(guideline);\n            } else if (rect[names.start]! <= targetStart && targetEnd <= rect[names.end]! && isDisplayInnerSnapDigit) {\n                const pos = guideline.pos;\n                const elementRect1 = { element, rect: { ...rect, [names.end]: rect[names.start]! } };\n                const elementRect2 = { element, rect: { ...rect, [names.start]: rect[names.end]! } };\n                const nextPos1 = [0, 0];\n                const nextPos2 = [0, 0];\n                nextPos1[index] = pos[index];\n                nextPos1[otherIndex] = pos[otherIndex];\n\n                nextPos2[index] = pos[index];\n                nextPos2[otherIndex] = pos[otherIndex] + guideline.size;\n\n\n                start.push({\n                    type,\n                    pos: nextPos1,\n                    size: 0,\n                    elementRect: elementRect1,\n                });\n                end.push({\n                    type,\n                    pos: nextPos2,\n                    size: 0,\n                    elementRect: elementRect2,\n                });\n                // inner.push(guideline);\n            }\n        });\n\n        start.sort((a, b) => {\n            return b.pos[otherIndex] - a.pos[otherIndex];\n        });\n        end.sort((a, b) => {\n            return a.pos[otherIndex] - b.pos[otherIndex];\n        });\n        return {\n            total: nextGuidelines,\n            start,\n            end,\n            inner,\n        };\n    });\n}\nexport function renderDashedGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: Renderer,\n): any[] {\n    const {\n        isDisplayInnerSnapDigit,\n    } = moveable.props;\n    const rendered: any[] = [];\n\n    ([\"vertical\", \"horizontal\"] as const).forEach(type => {\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type);\n        const index = type === \"vertical\" ? 1 : 0;\n        const otherIndex = index ? 0 : 1;\n\n        const groups = groupByElementGuidelines(type, nextGuidelines, targetRect, isDisplayInnerSnapDigit!);\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n\n        groups.forEach(({ total, start, end, inner }) => {\n            const sidePos = targetPos[otherIndex] + total[0].pos[otherIndex] - targetRect[sideNames.start]!;\n\n            let prevRect = targetRect;\n\n            start.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n                const size = prevRect[mainNames.start]! - nextRect[mainNames.end]!;\n\n                if (size > 0) {\n                    const renderPos = [0, 0];\n\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.start]! - targetStart - size;\n                    renderPos[otherIndex] = sidePos;\n\n                    rendered.push(renderDigitLine(\n                        moveable,\n                        type,\n                        \"dashed\",\n                        rendered.length,\n                        size,\n                        renderPos,\n                        guideline.className,\n                        React\n                    ));\n                }\n                prevRect = nextRect;\n            });\n\n            prevRect = targetRect;\n            end.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n                const size = nextRect[mainNames.start]! - prevRect[mainNames.end]!;\n\n                if (size > 0) {\n                    const renderPos = [0, 0];\n\n                    renderPos[index] = targetPos[index] + prevRect[mainNames.end]! - targetStart;\n                    renderPos[otherIndex] = sidePos;\n\n                    rendered.push(renderDigitLine(\n                        moveable,\n                        type,\n                        \"dashed\",\n                        rendered.length,\n                        size,\n                        renderPos,\n                        guideline.className,\n                        React\n                    ));\n                }\n                prevRect = nextRect;\n            });\n\n            inner.forEach(guideline => {\n                const nextRect = guideline.elementRect!.rect;\n\n                const size1 = targetStart - nextRect[mainNames.start]!;\n                const size2 = nextRect[mainNames.end]! - targetEnd;\n                const renderPos1 = [0, 0];\n                const renderPos2 = [0, 0];\n\n                renderPos1[index] = targetPos[index] - size1;\n                renderPos1[otherIndex] = sidePos;\n\n                renderPos2[index] = targetPos[index] + targetEnd - targetStart;\n                renderPos2[otherIndex] = sidePos;\n\n                rendered.push(renderDigitLine(\n                    moveable,\n                    type,\n                    \"dashed\",\n                    rendered.length,\n                    size1,\n                    renderPos1,\n                    guideline.className,\n                    React\n                ));\n                rendered.push(renderDigitLine(\n                    moveable,\n                    type,\n                    \"dashed\",\n                    rendered.length,\n                    size2,\n                    renderPos2,\n                    guideline.className,\n                    React\n                ));\n            });\n        });\n    });\n    return rendered;\n}\nexport function renderGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    guidelines: SnapGuideline[],\n    targetPos: number[],\n    targetRect: SnapDirectionPoses,\n    React: any\n): any[] {\n    const rendered: any[] = [];\n    ([\"horizontal\", \"vertical\"] as const).forEach(type => {\n        const nextGuidelines = guidelines.filter(guideline => guideline.type === type).slice(0, 1);\n        const index = type === \"vertical\" ? 0 : 1;\n        const otherIndex = index ? 0 : 1;\n        const mainNames = index ? HORIZONTAL_NAMES_MAP : VERTICAL_NAMES_MAP;\n        const sideNames = index ? VERTICAL_NAMES_MAP : HORIZONTAL_NAMES_MAP;\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n        const targetSideStart = targetRect[sideNames.start]!;\n        const targetSideEnd = targetRect[sideNames.end]!;\n\n\n        nextGuidelines.forEach(({ gap, gapRects }) => {\n            const sideStartPos = Math.max(\n                targetSideStart,\n                ...gapRects!.map(({ rect }) => rect[sideNames.start]!),\n            );\n            const sideEndPos = Math.min(\n                targetSideEnd,\n                ...gapRects!.map(({ rect }) => rect[sideNames.end]!),\n            );\n            const sideCenterPos = (sideStartPos + sideEndPos) / 2;\n\n            if (sideStartPos === sideEndPos || sideCenterPos === (targetSideStart + targetSideEnd)/ 2) {\n                return;\n            }\n            gapRects!.forEach(({ rect, className }) => {\n                const renderPos = [targetPos[0], targetPos[1]];\n\n                if (rect[mainNames.end]! < targetStart) {\n                    renderPos[index] += rect[mainNames.end]! - targetStart;\n                } else if (targetEnd < rect[mainNames.start]!) {\n                    renderPos[index] += rect[mainNames.start]! - targetStart - gap!;\n                } else {\n                    return;\n                }\n\n                renderPos[otherIndex] += sideCenterPos - targetSideStart;\n                rendered.push(renderDigitLine(\n                    moveable,\n                    index ? \"vertical\" : \"horizontal\",\n                    \"gap\",\n                    rendered.length,\n                    gap!,\n                    renderPos,\n                    className,\n                    React\n                ));\n            });\n        });\n    });\n    return rendered;\n}\n","import { getDist, getRad, IObject, TINY_NUM } from \"@daybrush/utils\";\nimport { minus } from \"@scena/matrix\";\nimport { getAbsolutePoses, getDistSize, getRect, maxOffset } from \"../../utils\";\nimport { getDragDist, getPosByDirection } from \"../../gesto/GestoUtils\";\nimport {\n    BoundInfo, SnapInfo, MoveableManagerInterface, SnappableProps,\n    SnappableState, SnapBoundInfo, SnapGuideline, BoundType, SnapOffsetInfo, DraggableProps,\n} from \"../../types\";\nimport { checkBoundKeepRatio, checkBoundPoses, getBounds } from \"./bounds\";\nimport { getInnerBoundDragInfo } from \"./innerBounds\";\nimport {\n    getNearestSnapGuidelineInfo, checkMoveableSnapPoses,\n    checkSnapPoses, checkSnapKeepRatio,\n} from \"./snap\";\nimport { hasGuidelines, getSnapDirections, splitSnapDirectionPoses } from \"./utils\";\n\ninterface DirectionSnapType<T> {\n    vertical: T;\n    horizontal: T;\n}\n\n\nexport function solveEquation(\n    pos1: number[],\n    pos2: number[],\n    snapOffset: number,\n    isVertical: boolean\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    if (!dx) {\n        // y = 0 * x + b\n        // only horizontal\n        if (!isVertical) {\n            return [0, snapOffset];\n        }\n        return [0, 0];\n    }\n    if (!dy) {\n        // only vertical\n        if (isVertical) {\n            return [snapOffset, 0];\n        }\n        return [0, 0];\n    }\n    // y = ax + b\n    const a = dy / dx;\n    const b = pos1[1] - a * pos1[0];\n\n    if (isVertical) {\n        // y = a * x + b\n        const y = a * (pos2[0] + snapOffset) + b;\n\n        return [snapOffset, y - pos2[1]];\n    } else {\n        // x = (y - b) / a\n        const x = (pos2[1] + snapOffset - b) / a;\n\n        return [x - pos2[0], snapOffset];\n    }\n}\n\n\nfunction solveNextOffset(\n    pos1: number[],\n    pos2: number[],\n    offset: number,\n    isVertical: boolean,\n    datas: IObject<any>\n) {\n    const sizeOffset = solveEquation(pos1, pos2, offset, isVertical);\n\n    if (!sizeOffset) {\n        return {\n            isOutside: false,\n            offset: [0, 0],\n        };\n    }\n    const size = getDist(pos1, pos2);\n    const dist1 = getDist(sizeOffset, pos1);\n    const dist2 = getDist(sizeOffset, pos2);\n\n    const isOutside = dist1 > size || dist2 > size;\n    const [widthOffset, heightOffset] = getDragDist({\n        datas,\n        distX: sizeOffset[0],\n        distY: sizeOffset[1],\n    });\n\n    return {\n        offset: [widthOffset, heightOffset],\n        isOutside,\n    };\n}\n\nfunction getSnapBound(boundInfo: BoundInfo, snapInfo: SnapInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return getNearestSnapGuidelineInfo(snapInfo).offset;\n    }\n    return 0;\n}\n\n\nexport function checkThrottleDragRotate(\n    throttleDragRotate: number,\n    [distX, distY]: number[],\n    [isVerticalBound, isHorizontalBound]: boolean[],\n    [isVerticalSnap, isHorizontalSnap]: boolean[],\n    [verticalOffset, horizontalOffset]: number[]\n) {\n    let offsetX = -verticalOffset;\n    let offsetY = -horizontalOffset;\n\n    if (throttleDragRotate && distX && distY) {\n        offsetX = 0;\n        offsetY = 0;\n        const adjustPoses: number[][] = [];\n        if (isVerticalBound && isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalBound) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalBound) {\n            adjustPoses.push([0, horizontalOffset]);\n        } else if (isVerticalSnap && isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset], [verticalOffset, 0]);\n        } else if (isVerticalSnap) {\n            adjustPoses.push([verticalOffset, 0]);\n        } else if (isHorizontalSnap) {\n            adjustPoses.push([0, horizontalOffset]);\n        }\n        if (adjustPoses.length) {\n            adjustPoses.sort((a, b) => {\n                return (\n                    getDistSize(minus([distX, distY], a)) -\n                    getDistSize(minus([distX, distY], b))\n                );\n            });\n            const adjustPos = adjustPoses[0];\n\n            if (adjustPos[0] && Math.abs(distX) > TINY_NUM) {\n                offsetX = -adjustPos[0];\n                offsetY =\n                    (distY * Math.abs(distX + offsetX)) / Math.abs(distX) -\n                    distY;\n            } else if (adjustPos[1] && Math.abs(distY) > TINY_NUM) {\n                const prevDistY = distY;\n                offsetY = -adjustPos[1];\n                offsetX =\n                    (distX * Math.abs(distY + offsetY)) / Math.abs(prevDistY) -\n                    distX;\n            }\n            if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\n                if (\n                    Math.abs(offsetX) > TINY_NUM &&\n                    Math.abs(offsetX) < Math.abs(verticalOffset)\n                ) {\n                    const scale = Math.abs(verticalOffset) / Math.abs(offsetX);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else if (\n                    Math.abs(offsetY) > TINY_NUM &&\n                    Math.abs(offsetY) < Math.abs(horizontalOffset)\n                ) {\n                    const scale =\n                        Math.abs(horizontalOffset) / Math.abs(offsetY);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else {\n                    offsetX = maxOffset(-verticalOffset, offsetX);\n                    offsetY = maxOffset(-horizontalOffset, offsetY);\n                }\n            }\n        }\n    } else {\n        offsetX = distX || isVerticalBound ? -verticalOffset : 0;\n        offsetY = distY || isHorizontalBound ? -horizontalOffset : 0;\n    }\n    return [offsetX, offsetY];\n}\n\nexport function checkSnapBoundsDrag(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    distX: number,\n    distY: number,\n    throttleDragRotate: number,\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"draggable\")) {\n        return [\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n        ];\n    }\n    const poses = getAbsolutePoses(datas.absolutePoses, [distX, distY]);\n    const { left, right, top, bottom } = getRect(poses);\n    const boundPoses = {\n        horizontal: poses.map((pos) => pos[1]),\n        vertical: poses.map((pos) => pos[0]),\n    };\n    const snapDirections = getSnapDirections(moveable.props.snapDirections);\n    const snapPoses = splitSnapDirectionPoses(snapDirections, {\n        left,\n        right,\n        top,\n        bottom,\n        center: (left + right) / 2,\n        middle: (top + bottom) / 2,\n    });\n    const {\n        vertical: verticalSnapBoundInfo,\n        horizontal: horizontalSnapBoundInfo,\n    } = checkMoveableSnapBounds(moveable, isRequest, snapPoses, boundPoses);\n    const {\n        vertical: verticalInnerBoundInfo,\n        horizontal: horizontalInnerBoundInfo,\n    } = getInnerBoundDragInfo(moveable, poses, datas);\n\n    const isVerticalSnap = verticalSnapBoundInfo.isSnap;\n    const isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\n    const isVerticalBound =\n        verticalSnapBoundInfo.isBound || verticalInnerBoundInfo.isBound;\n    const isHorizontalBound =\n        horizontalSnapBoundInfo.isBound || horizontalInnerBoundInfo.isBound;\n    const verticalOffset = maxOffset(\n        verticalSnapBoundInfo.offset,\n        verticalInnerBoundInfo.offset\n    );\n    const horizontalOffset = maxOffset(\n        horizontalSnapBoundInfo.offset,\n        horizontalInnerBoundInfo.offset\n    );\n\n    const [offsetX, offsetY] = checkThrottleDragRotate(\n        throttleDragRotate,\n        [distX, distY],\n        [isVerticalBound, isHorizontalBound],\n        [isVerticalSnap, isHorizontalSnap],\n        [verticalOffset, horizontalOffset]\n    );\n\n    return [\n        {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            offset: offsetX,\n        },\n        {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            offset: offsetY,\n        },\n    ];\n}\n\nexport function checkMoveableSnapBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    isRequest: boolean,\n    poses: { vertical: number[]; horizontal: number[]; },\n    boundPoses: { vertical: number[]; horizontal: number[]; } = poses,\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable),\n        boundPoses.vertical,\n        boundPoses.horizontal,\n    );\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? {\n        horizontal: { isSnap: false, index: -1 } as SnapInfo,\n        vertical: { isSnap: false, index: -1 } as SnapInfo,\n    } : checkMoveableSnapPoses(\n        moveable,\n        poses.vertical,\n        poses.horizontal,\n    );\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\nexport function checkSnapBounds(\n    guideines: SnapGuideline[],\n    bounds: BoundType | undefined | false,\n    posesX: number[],\n    posesY: number[],\n    snapThreshold: number,\n): DirectionSnapType<Required<SnapBoundInfo>> {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(bounds, posesX, posesY);\n\n    // options.isRequest ? {\n    //     horizontal: { isSnap: false, index: -1 } as SnapInfo,\n    //     vertical: { isSnap: false, index: -1 } as SnapInfo,\n    // } :\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = checkSnapPoses(guideines, posesX, posesY, snapThreshold);\n\n    const horizontalOffset = getSnapBound(\n        horizontalBoundInfos[0],\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBound(\n        verticalBoundInfos[0],\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\n\n\nfunction checkSnapRightLine(\n    startPos: number[],\n    endPos: number[],\n    snapBoundInfo: { vertical: SnapBoundInfo; horizontal: SnapBoundInfo },\n    keepRatio: boolean\n) {\n    const rad = (getRad(startPos, endPos) / Math.PI) * 180;\n    const {\n        vertical: {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            dist: verticalDist,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            dist: horizontalDist,\n        },\n    } = snapBoundInfo;\n\n    const rad180 = rad % 180;\n    const isHorizontalLine = rad180 < 3 || rad180 > 177;\n    const isVerticalLine = rad180 > 87 && rad180 < 93;\n\n    if (horizontalDist < verticalDist) {\n        if (\n            isVerticalBound ||\n            (isVerticalSnap &&\n                !isVerticalLine &&\n                (!keepRatio || !isHorizontalLine))\n        ) {\n            return \"vertical\";\n        }\n    }\n    if (\n        isHorizontalBound ||\n        (isHorizontalSnap &&\n            !isHorizontalLine &&\n            (!keepRatio || !isVerticalLine))\n    ) {\n        return \"horizontal\";\n    }\n    return \"\";\n}\n\n\nexport function getSnapBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    directions: number[][][],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    return directions.map(([startDirection, endDirection]) => {\n        const otherStartPos = getPosByDirection(poses, startDirection);\n        const otherEndPos = getPosByDirection(poses, endDirection);\n        const snapBoundInfo = keepRatio\n            ? checkSnapBoundsKeepRatio(\n                moveable,\n                otherStartPos,\n                otherEndPos,\n                isRequest\n            )\n            : checkMoveableSnapBounds(moveable, isRequest, {\n                vertical: [otherEndPos[0]],\n                horizontal: [otherEndPos[1]],\n            });\n\n        const {\n            horizontal: {\n                // dist: otherHorizontalDist,\n                offset: otherHorizontalOffset,\n                isBound: isOtherHorizontalBound,\n                isSnap: isOtherHorizontalSnap,\n            },\n            vertical: {\n                // dist: otherVerticalDist,\n                offset: otherVerticalOffset,\n                isBound: isOtherVerticalBound,\n                isSnap: isOtherVerticalSnap,\n            },\n        } = snapBoundInfo;\n\n        const multiple = minus(endDirection, startDirection);\n\n        if (!otherVerticalOffset && !otherHorizontalOffset) {\n            return {\n                isBound: isOtherVerticalBound || isOtherHorizontalBound,\n                isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\n                sign: multiple,\n                offset: [0, 0],\n            };\n        }\n        const snapLine = checkSnapRightLine(\n            otherStartPos,\n            otherEndPos,\n            snapBoundInfo,\n            keepRatio\n        );\n\n        if (!snapLine) {\n            return {\n                sign: multiple,\n                isBound: false,\n                isSnap: false,\n                offset: [0, 0],\n            };\n        }\n\n        const isVertical = snapLine === \"vertical\";\n        let sizeOffset = [0, 0];\n\n        if (\n            !keepRatio\n            && Math.abs(endDirection[0]) === 1\n            && Math.abs(endDirection[1]) === 1\n            && startDirection[0] !== endDirection[0]\n            && startDirection[1] !== endDirection[1]\n        ) {\n            sizeOffset = getDragDist({\n                datas,\n                distX: -otherVerticalOffset,\n                distY: -otherHorizontalOffset,\n            });\n        } else {\n            sizeOffset = solveNextOffset(\n                otherStartPos,\n                otherEndPos,\n                -(isVertical ? otherVerticalOffset : otherHorizontalOffset),\n                isVertical,\n                datas,\n            ).offset;\n        }\n        sizeOffset = sizeOffset.map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n\n        return {\n            sign: multiple,\n            isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\n            isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\n            offset: sizeOffset,\n        };\n    });\n}\n\n\nfunction getSnapBoundOffset(boundInfo: BoundInfo, snapInfo: SnapOffsetInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return snapInfo.offset;\n    }\n    return 0;\n}\n\nexport function checkSnapBoundsKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n    isRequest: boolean\n): DirectionSnapType<SnapBoundInfo> {\n    const {\n        horizontal: horizontalBoundInfo,\n        vertical: verticalBoundInfo,\n    } = checkBoundKeepRatio(moveable, startPos, endPos);\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? ({\n        horizontal: { isSnap: false },\n        vertical: { isSnap: false },\n    } as any) : checkSnapKeepRatio(moveable, startPos, endPos);\n\n    const horizontalOffset = getSnapBoundOffset(\n        horizontalBoundInfo,\n        horizontalSnapInfo\n    );\n    const verticalOffset = getSnapBoundOffset(\n        verticalBoundInfo,\n        verticalSnapInfo\n    );\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfo.isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n        },\n        vertical: {\n            isBound: verticalBoundInfo.isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            offset: verticalOffset,\n            dist: verticalDist,\n        },\n    };\n}\n\nexport function checkMaxBounds(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    fixedPosition: number[],\n    datas: any\n) {\n    const fixedDirection = [-direction[0], -direction[1]];\n    const { width, height } = moveable.state;\n    const bounds = moveable.props.bounds;\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n\n    if (bounds) {\n        const directions = [\n            [direction[0], -direction[1]],\n            [-direction[0], direction[1]],\n        ];\n        const {\n            left = -Infinity,\n            top = -Infinity,\n            right = Infinity,\n            bottom = Infinity,\n        } = bounds;\n\n        directions.forEach((otherDirection) => {\n            const isCheckVertical = otherDirection[0] !== fixedDirection[0];\n            const isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\n            const otherPos = getPosByDirection(poses, otherDirection);\n            const deg = (getRad(fixedPosition, otherPos) * 360) / Math.PI;\n\n            if (isCheckHorizontal) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 360) < 2 || Math.abs(deg - 180) < 2) {\n                    nextOtherPos[1] = fixedPosition[1];\n                }\n                const {\n                    offset: [, heightOffset],\n                    isOutside: isHeightOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[1] < otherPos[1] ? bottom : top) -\n                    otherPos[1],\n                    false,\n                    datas\n                );\n                if (!isNaN(heightOffset)) {\n                    maxHeight = height + (isHeightOutside ? 1 : -1) * Math.abs(heightOffset);\n                }\n            }\n            if (isCheckVertical) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 90) < 2 || Math.abs(deg - 270) < 2) {\n                    nextOtherPos[0] = fixedPosition[0];\n                }\n                const {\n                    offset: [widthOffset],\n                    isOutside: isWidthOutside,\n                } = solveNextOffset(\n                    fixedPosition,\n                    nextOtherPos,\n                    (fixedPosition[0] < otherPos[0] ? right : left) - otherPos[0],\n                    true,\n                    datas\n                );\n                if (!isNaN(widthOffset)) {\n                    maxWidth = width + (isWidthOutside ? 1 : -1) * Math.abs(widthOffset);\n                }\n            }\n        });\n    }\n    return {\n        maxWidth,\n        maxHeight,\n    };\n}\n","import { isObject, throttle } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/children-differ\";\nimport { minus } from \"@scena/matrix\";\nimport { getMinMaxs } from \"overlap-area\";\nimport {\n    MoveableManagerInterface, SnappableProps,\n    SnappableState, SnapGuideline, SnapDirectionPoses, PosGuideline, ElementGuidelineValue, SnapElementRect,\n} from \"../../types\";\nimport { getRect, getAbsolutePosesByState, getRefTarget, calculateInversePosition, roundSign } from \"../../utils\";\nimport {\n    splitSnapDirectionPoses, getSnapDirections,\n    HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP, calculateContainerPos,\n} from \"./utils\";\n\nexport function getTotalGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const {\n        snapOffset,\n        containerClientRect: {\n            overflow,\n            scrollHeight: containerHeight,\n            scrollWidth: containerWidth,\n            clientHeight: containerClientHeight,\n            clientWidth: containerClientWidth,\n            clientLeft,\n            clientTop,\n        },\n    } = moveable.state;\n    const {\n        snapGap = true,\n        verticalGuidelines,\n        horizontalGuidelines,\n        snapThreshold = 5,\n        snapGridWidth = 0,\n        snapGridHeight = 0,\n        maxSnapElementGuidelineDistance = Infinity,\n    } = moveable.props;\n    const { top, left, bottom, right } = getRect(getAbsolutePosesByState(moveable.state));\n    const targetRect = { top, left, bottom, right, center: (left + right) / 2, middle: (top + bottom) / 2 };\n    const elementGuidelines = getElementGuidelines(moveable);\n    let totalGuidelines: SnapGuideline[] = [...elementGuidelines];\n\n    if (snapGap) {\n        totalGuidelines.push(...getGapGuidelines(\n            moveable, targetRect, snapThreshold,\n        ));\n    }\n    totalGuidelines.push(...getGridGuidelines(\n        snapGridWidth,\n        snapGridHeight,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n    ));\n\n    totalGuidelines.push(...getDefaultGuidelines(\n        horizontalGuidelines || false,\n        verticalGuidelines || false,\n        overflow ? containerWidth! : containerClientWidth!,\n        overflow ? containerHeight! : containerClientHeight!,\n        clientLeft,\n        clientTop,\n        snapOffset,\n    ));\n\n    totalGuidelines = totalGuidelines.filter(({ element, elementRect, type }) => {\n        if (!element || !elementRect) {\n            return true;\n        }\n        const rect = elementRect.rect;\n\n        return checkBetweenRects(targetRect, rect, type, maxSnapElementGuidelineDistance);\n    });\n\n    return totalGuidelines;\n}\n\nexport function getGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    targetRect: SnapDirectionPoses,\n    snapThreshold: number,\n) {\n    const {\n        maxSnapElementGuidelineDistance = Infinity,\n        maxSnapElementGapDistance = Infinity,\n    } = moveable.props;\n    const elementRects = moveable.state.elementRects;\n    const gapGuidelines: SnapGuideline[] = [];\n    [\n        [\"vertical\", VERTICAL_NAMES_MAP, HORIZONTAL_NAMES_MAP] as const,\n        [\"horizontal\", HORIZONTAL_NAMES_MAP, VERTICAL_NAMES_MAP] as const,\n    ].forEach(([type, mainNames, sideNames]) => {\n        const targetStart = targetRect[mainNames.start]!;\n        const targetEnd = targetRect[mainNames.end]!;\n        const targetCenter = targetRect[mainNames.center]!;\n        const targetStart2 = targetRect[sideNames.start]!;\n        const targetEnd2 = targetRect[sideNames.end]!;\n\n        // element : moveable\n        function getDist(elementRect: SnapElementRect) {\n            const rect = elementRect.rect;\n\n            if (rect[mainNames.end]! < targetStart + snapThreshold) {\n                return targetStart - rect[mainNames.end]!;\n            } else if (targetEnd - snapThreshold < rect[mainNames.start]!) {\n                return rect[mainNames.start]! - targetEnd;\n            } else {\n                return -1;\n            }\n        }\n        const nextElementRects = elementRects.filter(elementRect => {\n            const rect = elementRect.rect;\n\n            if (rect[sideNames.start]! > targetEnd2 || rect[sideNames.end]! < targetStart2) {\n                return false;\n            }\n\n            return getDist(elementRect) > 0;\n        }).sort((a, b) => {\n            return getDist(a) - getDist(b);\n        });\n\n        const groups: SnapElementRect[][] = [];\n\n        nextElementRects.forEach(snapRect1 => {\n            nextElementRects.forEach(snapRect2 => {\n                if (snapRect1 === snapRect2) {\n                    return;\n                }\n                const { rect: rect1 } = snapRect1;\n                const { rect: rect2 } = snapRect2;\n\n                const rect1Start = rect1[sideNames.start]!;\n                const rect1End = rect1[sideNames.end]!;\n                const rect2Start = rect2[sideNames.start]!;\n                const rect2End = rect2[sideNames.end]!;\n\n                if (rect1Start > rect2End || rect2Start > rect1End) {\n                    return;\n                }\n\n                groups.push([snapRect1, snapRect2]);\n            });\n        });\n\n        groups.forEach(([snapRect1, snapRect2]) => {\n            const { rect: rect1 } = snapRect1;\n            const { rect: rect2 } = snapRect2;\n\n            const rect1Start = rect1[mainNames.start]!;\n            const rect1End = rect1[mainNames.end]!;\n            const rect2Start = rect2[mainNames.start]!;\n            const rect2End = rect2[mainNames.end]!;\n            let gap = 0;\n            let pos = 0;\n            let isStart = false;\n            let isCenter = false;\n            let isEnd = false;\n\n            if (rect1End <= targetStart && targetEnd <= rect2Start) {\n                // (l)element1(r) : (l)target(r) : (l)element2(r)\n                isCenter = true;\n                gap = ((rect2Start - rect1End) - (targetEnd - targetStart)) / 2;\n                pos = rect1End + gap + (targetEnd - targetStart) / 2;\n\n                if (Math.abs(pos - targetCenter) > snapThreshold) {\n                    return;\n                }\n            } else if (rect1End < rect2Start && rect2End < targetStart + snapThreshold) {\n                // (l)element1(r) : (l)element2(r) : (l)target\n                isStart = true;\n\n                gap = rect2Start - rect1End;\n                pos = rect2End + gap;\n\n                if (Math.abs(pos - targetStart) > snapThreshold) {\n                    return;\n                }\n            } else if (rect1End < rect2Start && targetEnd - snapThreshold < rect1Start) {\n                // target(r) : (l)element1(r) : (l)element2(r)\n\n                isEnd = true;\n                gap = rect2Start - rect1End;\n                pos = rect1Start - gap;\n\n                if (Math.abs(pos - targetEnd) > snapThreshold) {\n                    return;\n                }\n            } else {\n                return;\n            }\n            if (!gap) {\n                return;\n            }\n            if (!checkBetweenRects(targetRect, rect2, type, maxSnapElementGuidelineDistance)) {\n                return;\n            }\n            if (gap > maxSnapElementGapDistance) {\n                return;\n            }\n            gapGuidelines.push({\n                type,\n                pos: type === \"vertical\" ? [pos, 0] : [0, pos],\n                element: snapRect2.element,\n                size: 0,\n                className: snapRect2.className,\n                isStart,\n                isCenter,\n                isEnd,\n                gap,\n                hide: true,\n                gapRects: [snapRect1, snapRect2],\n            });\n        });\n    });\n    return gapGuidelines;\n}\nexport function getGridGuidelines(\n    snapGridWidth: number,\n    snapGridHeight: number,\n    containerWidth: number,\n    containerHeight: number,\n    clientLeft = 0,\n    clientTop = 0,\n): SnapGuideline[] {\n    const guidelines: SnapGuideline[] = [];\n\n    if (snapGridHeight) {\n        for (let pos = 0; pos <= containerHeight; pos += snapGridHeight) {\n            guidelines.push({\n                type: \"horizontal\",\n                pos: [0, throttle(pos - clientTop, 0.1)],\n                size: containerWidth!,\n                hide: true,\n            });\n        }\n    }\n    if (snapGridWidth) {\n        for (let pos = 0; pos <= containerWidth; pos += snapGridWidth) {\n            guidelines.push({\n                type: \"vertical\",\n                pos: [throttle(pos - clientLeft, 0.1), 0],\n                size: containerHeight!,\n                hide: true,\n            });\n        }\n    }\n    return guidelines;\n}\n\nexport function checkBetweenRects(\n    rect1: SnapDirectionPoses,\n    rect2: SnapDirectionPoses,\n    type: \"horizontal\" | \"vertical\",\n    distance: number,\n) {\n    if (type === \"horizontal\") {\n        return Math.abs(rect1.right! - rect2.left!) <= distance\n            || Math.abs(rect1.left! - rect2.right!) <= distance\n            || rect1.left! <= rect2.right! && rect2.left! <= rect1.right!;\n    } else if (type === \"vertical\") {\n        return Math.abs(rect1.bottom! - rect2.top!) <= distance\n            || Math.abs(rect1.top! - rect2.bottom!) <= distance\n            || rect1.top! <= rect2.bottom! && rect2.top! <= rect1.bottom!;\n    }\n    return true;\n}\n\n\nexport function getElementGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const state = moveable.state;\n\n    const {\n        elementGuidelines = [],\n    } = moveable.props;\n\n    if (!elementGuidelines.length) {\n        state.elementRects = [];\n        return [];\n    }\n\n    const prevValues = (state.elementRects || []).filter(snapRect => !snapRect.refresh);\n    const nextElementGuidelines = elementGuidelines.map(el => {\n        if (isObject(el) && \"element\" in el) {\n            return {\n                ...el,\n                element: getRefTarget(el.element, true)!,\n            };\n        }\n        return {\n            element: getRefTarget(el, true)!,\n        };\n    }).filter(value => {\n        return value.element;\n    }) as ElementGuidelineValue[];\n\n    const {\n        maintained,\n        added,\n    } = diff(prevValues.map(v => v.element), nextElementGuidelines.map(v => v.element));\n\n\n    const nextValues: SnapElementRect[] = [];\n    maintained.forEach(([prevIndex, nextIndex]) => {\n        nextValues[nextIndex] = prevValues[prevIndex];\n    });\n\n    getSnapElementRects(moveable, added.map(index => nextElementGuidelines[index])).map((rect, i) => {\n        nextValues[added[i]] = rect;\n    });\n\n\n    state.elementRects = nextValues;\n    const elementSnapDirections = getSnapDirections(moveable.props.elementSnapDirections);\n    const nextGuidelines: SnapGuideline[] = [];\n\n    nextValues.forEach(snapRect => {\n        const {\n            element,\n            top: topValue = elementSnapDirections.top,\n            left: leftValue = elementSnapDirections.left,\n            right: rightValue = elementSnapDirections.right,\n            bottom: bottomValue = elementSnapDirections.bottom,\n            center: centerValue = elementSnapDirections.center,\n            middle: middleValue = elementSnapDirections.middle,\n            className,\n            rect,\n        } = snapRect;\n        const {\n            horizontal,\n            vertical,\n        } = splitSnapDirectionPoses({\n            top: topValue,\n            right: rightValue,\n            left: leftValue,\n            bottom: bottomValue,\n            center: centerValue,\n            middle: middleValue,\n        }, rect);\n        const rectTop = rect.top!;\n        const rectLeft = rect.left!;\n        const width = rect.right! - rectLeft;\n        const height = rect.bottom! - rectTop;\n        const sizes = [width, height];\n\n        vertical.forEach(pos => {\n            nextGuidelines.push({\n                type: \"vertical\", element, pos: [\n                    throttle(pos, 0.1),\n                    rectTop,\n                ], size: height,\n                sizes,\n                className,\n                elementRect: snapRect,\n            });\n        });\n        horizontal.forEach(pos => {\n            nextGuidelines.push({\n                type: \"horizontal\", element, pos: [\n                    rectLeft,\n                    throttle(pos, 0.1),\n                ], size: width,\n                sizes,\n                className,\n                elementRect: snapRect,\n            });\n        });\n    });\n\n    return nextGuidelines;\n}\n\n\nexport function getDefaultGuidelines(\n    horizontalGuidelines: Array<PosGuideline | number> | false,\n    verticalGuidelines: Array<PosGuideline | number> | false,\n    width: number,\n    height: number,\n    clientLeft = 0,\n    clientTop = 0,\n    snapOffset = { left: 0, top: 0, right: 0, bottom: 0 },\n): SnapGuideline[] {\n    const guidelines: SnapGuideline[] = [];\n    const {\n        left: snapOffsetLeft,\n        top: snapOffsetTop,\n        bottom: snapOffsetBottom,\n        right: snapOffsetRight,\n    } = snapOffset;\n    const snapWidth = width! + snapOffsetRight - snapOffsetLeft;\n    const snapHeight = height! + snapOffsetBottom - snapOffsetTop;\n\n    horizontalGuidelines && horizontalGuidelines!.forEach(posInfo => {\n        const nextPosInfo = isObject(posInfo) ? posInfo : { pos: posInfo };\n\n        guidelines.push({\n            type: \"horizontal\", pos: [\n                snapOffsetLeft,\n                throttle(nextPosInfo.pos - clientTop + snapOffsetTop, 0.1),\n            ], size: snapWidth,\n            className: nextPosInfo.className,\n        });\n    });\n    verticalGuidelines && verticalGuidelines!.forEach(posInfo => {\n        const nextPosInfo = isObject(posInfo) ? posInfo : { pos: posInfo };\n\n        guidelines.push({\n            type: \"vertical\", pos: [\n                throttle(nextPosInfo.pos - clientLeft + snapOffsetLeft, 0.1),\n                snapOffsetTop,\n            ], size: snapHeight,\n            className: nextPosInfo.className,\n        });\n    });\n    return guidelines;\n}\n\n\n\nexport function getSnapElementRects(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    values: ElementGuidelineValue[],\n): SnapElementRect[] {\n    if (!values.length) {\n        return [];\n    }\n    const state = moveable.state;\n    const {\n        containerClientRect,\n        targetClientRect: {\n            top: clientTop,\n            left: clientLeft,\n        },\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n    const [containerLeft, containerTop] = calculateContainerPos(rootMatrix, containerClientRect, n);\n    const poses = getAbsolutePosesByState(state);\n    const {\n        minX: targetLeft,\n        minY: targetTop,\n    } = getMinMaxs(poses);\n    const [distLeft, distTop] = minus([targetLeft, targetTop], calculateInversePosition(rootMatrix, [\n        clientLeft - containerLeft,\n        clientTop - containerTop,\n    ], n)).map(pos => roundSign(pos));\n\n    return values.map(value => {\n        const rect = value.element.getBoundingClientRect();\n        const left = rect.left - containerLeft;\n        const top = rect.top - containerTop;\n        const bottom = top + rect.height;\n        const right = left + rect.width;\n        const [elementLeft, elementTop] = calculateInversePosition(rootMatrix, [left, top], n);\n        const [elementRight, elementBottom] = calculateInversePosition(rootMatrix, [right, bottom], n);\n\n        return {\n            ...value,\n            rect: {\n                left: elementLeft + distLeft,\n                right: elementRight + distLeft,\n                top: elementTop + distTop,\n                bottom: elementBottom + distTop,\n                center: (elementLeft + elementRight) / 2 + distLeft,\n                middle: (elementTop + elementBottom) / 2 + distTop,\n            },\n        };\n    });\n}\n\n","import {\n    Renderer,\n    SnappableProps,\n    SnappableState,\n    SnapGuideline,\n    SnapInfo,\n    ScalableProps,\n    SnapPosInfo,\n    RotatableProps,\n    RectInfo,\n    MoveableManagerInterface,\n    SnappableRenderType,\n    BoundType,\n    MoveableGroupInterface,\n} from \"../types\";\nimport {\n    prefix,\n    calculatePoses,\n    getRect,\n    getAbsolutePosesByState,\n    getAbsolutePoses,\n    getClientRect,\n    getRefTarget,\n    getDragDistByState,\n    triggerEvent,\n    getDirectionCondition,\n} from \"../utils\";\nimport {\n    findIndex, hasClass, throttle,\n} from \"@daybrush/utils\";\nimport {\n    getDragDist,\n    scaleMatrix,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { minus, rotate, plus } from \"@scena/matrix\";\nimport { dragControlCondition as rotatableDragControlCondtion } from \"./Rotatable\";\nimport { FLOAT_POINT_NUM } from \"../consts\";\nimport {\n    getInnerBoundInfo,\n    getCheckInnerBoundLineInfos,\n    checkRotateInnerBounds,\n    checkInnerBoundPoses,\n} from \"./snappable/innerBounds\";\nimport {\n    checkBoundPoses,\n    checkRotateBounds,\n    getBounds,\n} from \"./snappable/bounds\";\nimport {\n    checkSnaps,\n    getSnapInfosByDirection,\n    getNearOffsetInfo,\n    getCheckSnapDirections,\n} from \"./snappable/snap\";\nimport {\n    renderSnapPoses,\n    renderGuidelines,\n    renderDashedGuidelines,\n    renderGapGuidelines,\n} from \"./snappable/render\";\nimport {\n    hasGuidelines,\n} from \"./snappable/utils\";\nimport {\n    checkMaxBounds,\n    checkMoveableSnapBounds,\n    getSnapBoundInfo,\n} from \"./snappable/snapBounds\";\nimport { getTotalGuidelines } from \"./snappable/getTotalGuidelines\";\n\n\nexport interface SnapPoses {\n    vertical: number[];\n    horizontal: number[];\n}\n\nexport function snapStart(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n) {\n    const state = moveable.state;\n\n    if (state.guidelines && state.guidelines.length) {\n        return;\n    }\n    const container = moveable.state.container;\n    const snapContainer = moveable.props.snapContainer || container!;\n\n    const containerClientRect = state.containerClientRect;\n    const snapOffset = {\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0,\n    };\n\n    if (container !== snapContainer) {\n        const snapContainerTarget = getRefTarget(snapContainer, true);\n\n        if (snapContainerTarget) {\n            const snapContainerRect = getClientRect(snapContainerTarget);\n            const offset1 = getDragDistByState(state, [\n                snapContainerRect.left - containerClientRect.left,\n                snapContainerRect.top - containerClientRect.top,\n            ]);\n            const offset2 = getDragDistByState(state, [\n                snapContainerRect.right - containerClientRect.right,\n                snapContainerRect.bottom - containerClientRect.bottom,\n            ]);\n            snapOffset.left = throttle(offset1[0], 0.00001);\n            snapOffset.top = throttle(offset1[1], 0.00001);\n            snapOffset.right = throttle(offset2[0], 0.00001);\n            snapOffset.bottom = throttle(offset2[1], 0.00001);\n        }\n    }\n\n    state.snapOffset = snapOffset;\n    state.guidelines = getTotalGuidelines(moveable);\n    state.enableSnap = true;\n}\n\nfunction getNextFixedPoses(\n    matrix: number[],\n    width: number,\n    height: number,\n    fixedDirection: number[],\n    fixedPos: number[],\n    is3d: boolean\n) {\n    const nextPoses = calculatePoses(matrix, width, height, is3d ? 4 : 3);\n    const nextFixedPos = getPosByDirection(nextPoses, fixedDirection);\n\n    return getAbsolutePoses(nextPoses, minus(fixedPos, nextFixedPos));\n}\n\nexport function normalized(value: number) {\n    return value ? value / Math.abs(value) : 0;\n}\n\n\nexport function getSizeOffsetInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any\n) {\n    const { fixedDirection } = datas;\n    const directions = getCheckSnapDirections(direction, fixedDirection, keepRatio);\n    const innerBoundLineInfos = getCheckInnerBoundLineInfos(moveable, poses, direction, keepRatio);\n    const offsets = [\n        ...getSnapBoundInfo(\n            moveable,\n            poses,\n            directions,\n            keepRatio,\n            isRequest,\n            datas\n        ),\n        ...getInnerBoundInfo(\n            moveable,\n            innerBoundLineInfos,\n            datas\n        ),\n    ];\n    const widthOffsetInfo = getNearOffsetInfo(offsets, 0);\n    const heightOffsetInfo = getNearOffsetInfo(offsets, 1);\n\n    return {\n        width: {\n            isBound: widthOffsetInfo.isBound,\n            offset: widthOffsetInfo.offset[0],\n        },\n        height: {\n            isBound: heightOffsetInfo.isBound,\n            offset: heightOffsetInfo.offset[1],\n        },\n    };\n}\nexport function recheckSizeByTwoDirection(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    width: number,\n    height: number,\n    maxWidth: number,\n    maxHeight: number,\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const snapPos = getPosByDirection(poses, direction);\n\n    const {\n        horizontal: { offset: horizontalOffset },\n        vertical: { offset: verticalOffset },\n    } = checkMoveableSnapBounds(moveable, isRequest, {\n        vertical: [snapPos[0]],\n        horizontal: [snapPos[1]],\n    });\n\n    if (verticalOffset || horizontalOffset) {\n        const [nextWidthOffset, nextHeightOffset] = getDragDist({\n            datas,\n            distX: -verticalOffset,\n            distY: -horizontalOffset,\n        });\n        const nextWidth = Math.min(\n            maxWidth || Infinity,\n            width + direction[0] * nextWidthOffset\n        );\n        const nextHeight = Math.min(\n            maxHeight || Infinity,\n            height + direction[1] * nextHeightOffset\n        );\n\n        return [nextWidth - width, nextHeight - height];\n    }\n    return [0, 0];\n}\nexport function checkSizeDist(\n    moveable: MoveableManagerInterface<any, any>,\n    getNextPoses: (widthOffset: number, heightOffset: number) => number[][],\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    const poses = getAbsolutePosesByState(moveable.state);\n    const keepRatio = moveable.props.keepRatio;\n\n    let widthOffset = 0;\n    let heightOffset = 0;\n\n    for (let i = 0; i < 2; ++i) {\n        const nextPoses = getNextPoses(widthOffset, heightOffset);\n        const {\n            width: widthOffsetInfo,\n            height: heightOffsetInfo,\n        } = getSizeOffsetInfo(\n            moveable,\n            nextPoses,\n            direction,\n            keepRatio,\n            isRequest,\n            datas\n        );\n\n        const isWidthBound = widthOffsetInfo.isBound;\n        const isHeightBound = heightOffsetInfo.isBound;\n        let nextWidthOffset = widthOffsetInfo.offset;\n        let nextHeightOffset = heightOffsetInfo.offset;\n\n        if (i === 1) {\n            if (!isWidthBound) {\n                nextWidthOffset = 0;\n            }\n            if (!isHeightBound) {\n                nextHeightOffset = 0;\n            }\n        }\n        if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\n            return [0, 0];\n        }\n        if (keepRatio) {\n            const widthDist =\n                Math.abs(nextWidthOffset) * (width ? 1 / width : 1);\n            const heightDist =\n                Math.abs(nextHeightOffset) * (height ? 1 / height : 1);\n            const isGetWidthOffset =\n                isWidthBound && isHeightBound\n                    ? widthDist < heightDist\n                    : isHeightBound ||\n                    (!isWidthBound && widthDist < heightDist);\n            if (isGetWidthOffset) {\n                // width : height = ? : heightOffset\n                nextWidthOffset = (width * nextHeightOffset) / height;\n            } else {\n                // width : height = widthOffset : ?\n                nextHeightOffset = (height * nextWidthOffset) / width;\n            }\n        }\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    if (direction[0] && direction[1]) {\n        const { maxWidth, maxHeight } = checkMaxBounds(\n            moveable,\n            poses,\n            direction,\n            fixedPosition,\n            datas\n        );\n\n        const [nextWidthOffset, nextHeightOffset] = recheckSizeByTwoDirection(\n            moveable,\n            getNextPoses(widthOffset, heightOffset).map(pos => pos.map(p => throttle(p, FLOAT_POINT_NUM))),\n            width + widthOffset,\n            height + heightOffset,\n            maxWidth,\n            maxHeight,\n            direction,\n            isRequest,\n            datas\n        );\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    return [widthOffset, heightOffset];\n}\n\nexport function checkSnapRotate(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    rect: RectInfo,\n    rotation: number\n) {\n    if (!hasGuidelines(moveable, \"rotatable\")) {\n        return {\n            isSnap: false,\n            rotation,\n        };\n    }\n\n    const { pos1, pos2, pos3, pos4, origin: origin2 } = rect;\n    const rad = (rotation * Math.PI) / 180;\n    const prevPoses = [pos1, pos2, pos3, pos4].map((pos) => minus(pos, origin2));\n    const nextPoses = prevPoses.map((pos) => rotate(pos, rad));\n\n    // console.log(moveable.state.left, moveable.state.top, moveable.state.origin);\n    // console.log(pos1, pos2, pos3, pos4, origin, rad, prevPoses, nextPoses);\n    const result = [\n        ...checkRotateBounds(moveable, prevPoses, nextPoses, origin2, rotation),\n        ...checkRotateInnerBounds(\n            moveable,\n            prevPoses,\n            nextPoses,\n            origin2,\n            rotation\n        ),\n    ];\n    result.sort((a, b) => Math.abs(a - rotation) - Math.abs(b - rotation));\n    const isSnap = result.length > 0;\n\n    return {\n        isSnap,\n        rotation: isSnap ? result[0] : rotation,\n    };\n}\nexport function checkSnapResize(\n    moveable: MoveableManagerInterface<{}, {}>,\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"resizable\")) {\n        return [0, 0];\n    }\n    const { fixedDirection, nextAllMatrix } = datas;\n    const { allMatrix, is3d } = moveable.state;\n\n    return checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                nextAllMatrix || allMatrix,\n                width + widthOffset,\n                height + heightOffset,\n                fixedDirection,\n                fixedPosition,\n                is3d\n            );\n        },\n        width,\n        height,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n}\nexport function checkSnapScale(\n    moveable: MoveableManagerInterface<ScalableProps, any>,\n    scale: number[],\n    direction: number[],\n    isRequest: boolean,\n    datas: any\n) {\n    if (!hasGuidelines(moveable, \"scalable\")) {\n        return [0, 0];\n    }\n    const { startOffsetWidth, startOffsetHeight, fixedPosition, fixedDirection, is3d } = datas;\n    const sizeDist = checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                scaleMatrix(\n                    datas,\n                    plus(scale, [widthOffset / startOffsetWidth, heightOffset / startOffsetHeight]),\n                ),\n                startOffsetWidth,\n                startOffsetHeight,\n                fixedDirection,\n                fixedPosition,\n                is3d\n            );\n        },\n        startOffsetWidth,\n        startOffsetHeight,\n        direction,\n        fixedPosition,\n        isRequest,\n        datas\n    );\n    return [sizeDist[0] / startOffsetWidth, sizeDist[1] / startOffsetHeight];\n}\n\nexport function startCheckSnapDrag(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: any\n) {\n    datas.absolutePoses = getAbsolutePosesByState(moveable.state);\n}\n\n\n\nfunction getSnapGuidelines(posInfos: SnapPosInfo[]) {\n    const guidelines: SnapGuideline[] = [];\n\n    posInfos.forEach((posInfo) => {\n        posInfo.guidelineInfos.forEach(({ guideline }) => {\n            if (guidelines.indexOf(guideline) > -1) {\n                return;\n            }\n            guidelines.push(guideline);\n        });\n    });\n\n    return guidelines;\n}\n\nfunction addBoundGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n    verticalSnapPoses: SnappableRenderType[],\n    horizontalSnapPoses: SnappableRenderType[],\n    externalBounds?: BoundType | false | null\n) {\n    const {\n        vertical: verticalBoundInfos,\n        horizontal: horizontalBoundInfos,\n    } = checkBoundPoses(\n        getBounds(moveable, externalBounds),\n        verticalPoses,\n        horizontalPoses\n    );\n    verticalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            verticalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    horizontalBoundInfos.forEach((info) => {\n        if (info.isBound) {\n            horizontalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    const {\n        vertical: verticalInnerBoundPoses,\n        horizontal: horizontalInnerBoundPoses,\n    } = checkInnerBoundPoses(moveable);\n\n    verticalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                verticalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        verticalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n\n    horizontalInnerBoundPoses.forEach((innerPos) => {\n        if (\n            findIndex(\n                horizontalSnapPoses,\n                ({ type, pos }) => type === \"bounds\" && pos === innerPos\n            ) >= 0\n        ) {\n            return;\n        }\n        horizontalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n}\n\nconst directionCondition = getDirectionCondition(\"\", [\"resizable\", \"scalable\"]);\n\n/**\n * @namespace Moveable.Snappable\n * @description Whether or not target can be snapped to the guideline. (default: false)\n * @sort 2\n */\nexport default {\n    name: \"snappable\",\n    dragRelation: \"strong\",\n    props: {\n        snappable: [Boolean, Array],\n        snapContainer: Object,\n\n        snapDirections: [Boolean, Object],\n        elementSnapDirections: [Boolean, Object],\n\n        snapGap: Boolean,\n        snapGridWidth: Number,\n        snapGridHeight: Number,\n        isDisplaySnapDigit: Boolean,\n        isDisplayInnerSnapDigit: Boolean,\n        snapDigit: Number,\n        snapThreshold: Number,\n\n        horizontalGuidelines: Array,\n        verticalGuidelines: Array,\n        elementGuidelines: Array,\n\n        bounds: Object,\n        innerBounds: Object,\n        snapDistFormat: Function,\n\n\n        maxSnapElementGuidelineDistance: Number,\n        maxSnapElementGapDistance: Number,\n    } as const,\n    events: {\n        onSnap: \"snap\",\n    } as const,\n    css: [\n        `:host {\n    --bounds-color: #d66;\n}\n.guideline {\n    pointer-events: none;\n    z-index: 2;\n}\n.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}\n.guideline-group {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.guideline-group .size-value {\n    position: absolute;\n    color: #f55;\n    font-size: 12px;\n    font-weight: bold;\n}\n.guideline-group.horizontal .size-value {\n    transform-origin: 50% 100%;\n    transform: translateX(-50%);\n    left: 50%;\n    bottom: 5px;\n}\n.guideline-group.vertical .size-value {\n    transform-origin: 0% 50%;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 5px;\n}\n.guideline.gap {\n    background: #f55;\n}\n.size-value.gap {\n    color: #f55;\n}\n`,\n    ],\n    render(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        React: Renderer\n    ): any[] {\n        const state = moveable.state;\n        const {\n            top: targetTop,\n            left: targetLeft,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            snapRenderInfo,\n        } = state;\n\n        if (!snapRenderInfo || !hasGuidelines(moveable, \"\")) {\n            return [];\n        }\n        state.guidelines = getTotalGuidelines(moveable);\n\n\n        const minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\n        const minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\n        const externalPoses = snapRenderInfo.externalPoses || [];\n        const poses = getAbsolutePosesByState(moveable.state);\n        const verticalSnapPoses: SnappableRenderType[] = [];\n        const horizontalSnapPoses: SnappableRenderType[] = [];\n        const verticalGuidelines: SnapGuideline[] = [];\n        const horizontalGuidelines: SnapGuideline[] = [];\n        const snapInfos: Array<{\n            vertical: SnapInfo;\n            horizontal: SnapInfo;\n        }> = [];\n        const { width, height, top, left, bottom, right } = getRect(poses);\n        const targetRect = { left, right, top, bottom, center: (left + right) / 2, middle: (top + bottom) / 2 };\n        const hasExternalPoses = externalPoses.length > 0;\n        const externalRect = hasExternalPoses\n            ? getRect(externalPoses)\n            : ({} as ReturnType<typeof getRect>);\n\n        if (!snapRenderInfo.request) {\n            if (snapRenderInfo.direction) {\n                snapInfos.push(\n                    getSnapInfosByDirection(\n                        moveable,\n                        poses,\n                        snapRenderInfo.direction\n                    )\n                );\n            }\n            if (snapRenderInfo.snap) {\n                const rect = getRect(poses);\n                if (snapRenderInfo.center) {\n                    (rect as any).middle = (rect.top + rect.bottom) / 2;\n                    (rect as any).center = (rect.left + rect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, rect, 1));\n            }\n            if (hasExternalPoses) {\n                if (snapRenderInfo.center) {\n                    (externalRect as any).middle =\n                        (externalRect.top + externalRect.bottom) / 2;\n                    (externalRect as any).center =\n                        (externalRect.left + externalRect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, externalRect, 1));\n            }\n            snapInfos.forEach((snapInfo) => {\n                const {\n                    vertical: { posInfos: verticalPosInfos },\n                    horizontal: { posInfos: horizontalPosInfos },\n                } = snapInfo;\n                verticalSnapPoses.push(\n                    ...verticalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                horizontalSnapPoses.push(\n                    ...horizontalPosInfos.filter(({ guidelineInfos }) => {\n                        return guidelineInfos.some(({ guideline }) => !guideline.hide);\n                    }).map(\n                        (posInfo) => ({\n                            type: \"snap\",\n                            pos: posInfo.pos,\n                        } as const)\n                    )\n                );\n                verticalGuidelines.push(...getSnapGuidelines(verticalPosInfos));\n                horizontalGuidelines.push(...getSnapGuidelines(horizontalPosInfos));\n            });\n        }\n\n        addBoundGuidelines(\n            moveable,\n            [left, right],\n            [top, bottom],\n            verticalSnapPoses,\n            horizontalSnapPoses\n        );\n        if (hasExternalPoses) {\n            addBoundGuidelines(\n                moveable,\n                [externalRect.left, externalRect.right],\n                [externalRect.top, externalRect.bottom],\n                verticalSnapPoses,\n                horizontalSnapPoses,\n                snapRenderInfo.externalBounds\n            );\n        }\n        const allGuidelines = [...verticalGuidelines, ...horizontalGuidelines];\n        const elementGuidelines = allGuidelines.filter(guideline => guideline.element && !guideline.gapRects);\n        const gapGuidelines = allGuidelines.filter(guideline => guideline.gapRects).sort((a, b) => {\n            return a.gap! - b.gap!;\n        });\n\n        triggerEvent(\n            moveable,\n            \"onSnap\",\n            {\n                guidelines: allGuidelines.filter(({ element }) => !element),\n                elements: elementGuidelines,\n                gaps: gapGuidelines,\n            },\n            true\n        );\n        return [\n            ...renderDashedGuidelines(\n                moveable,\n                elementGuidelines,\n                [minLeft, minTop],\n                targetRect,\n                React,\n            ),\n            ...renderGapGuidelines(\n                moveable,\n                gapGuidelines,\n                [minLeft, minTop],\n                targetRect,\n                React,\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"horizontal\",\n                horizontalGuidelines,\n                [targetLeft, targetTop],\n                targetRect,\n                React\n            ),\n            ...renderGuidelines(\n                moveable,\n                \"vertical\",\n                verticalGuidelines,\n                [targetLeft, targetTop],\n                targetRect,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"horizontal\",\n                horizontalSnapPoses,\n                minLeft,\n                targetTop,\n                width,\n                0,\n                React\n            ),\n            ...renderSnapPoses(\n                moveable,\n                \"vertical\",\n                verticalSnapPoses,\n                minTop,\n                targetLeft,\n                height,\n                1,\n                React\n            ),\n        ];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n        e: any\n    ) {\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            snap: true,\n            center: true,\n        };\n        snapStart(moveable);\n    },\n    drag(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        const state = moveable.state;\n        state.guidelines = getTotalGuidelines(moveable);\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragControlCondition(moveable: MoveableManagerInterface, e: any) {\n        if (directionCondition(moveable, e) || rotatableDragControlCondtion(moveable, e)) {\n            return true;\n        }\n        if (!e.isRequest && e.inputEvent) {\n            return hasClass(e.inputEvent.target, prefix(\"snap-control\"));\n        }\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupStart(moveable: any, e: any) {\n        this.dragStart(moveable, e);\n    },\n    dragGroup(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    dragGroupControlStart(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragGroupControl(\n        moveable: MoveableManagerInterface<SnappableProps, SnappableState>\n    ) {\n        this.drag(moveable);\n    },\n    dragGroupControlEnd(\n        moveable: MoveableGroupInterface<SnappableProps, SnappableState>\n    ) {\n        this.unset(moveable);\n    },\n    unset(moveable: any) {\n        const state = moveable.state;\n\n        state.enableSnap = false;\n        state.guidelines = [];\n        state.snapRenderInfo = null;\n        state.elementRects = [];\n    },\n};\n\n\n/**\n * Whether or not target can be snapped to the guideline. (default: false)\n * @name Moveable.Snappable#snappable\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snappable = true;\n */\n/**\n *  A snap container that is the basis for snap, bounds, and innerBounds. (default: null = container)\n * @name Moveable.Snappable#snapContainer\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.querySelector(\".container\"));\n *\n * moveable.snapContainer = document.body;\n */\n/**\n * You can specify the directions to snap to the target. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#snapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapDirections: true,\n * });\n * // snap center\n * moveable.snapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n\n/**\n * You can specify the snap directions of elements. (default: { left: true, top: true, right: true, bottom: true })\n * @name Moveable.Snappable#elementSnapDirections\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   elementSnapDirections: true,\n * });\n * // snap center\n * moveable.elementSnapDirections = { left: true, top: true, right: true, bottom: true, center: true, middle: true };\n */\n/**\n * When you drag, make the gap snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapGap\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapElement: true,\n *   snapGap: true,\n * });\n *\n * moveable.snapGap = false;\n */\n/**\n * Distance value that can snap to guidelines. (default: 5)\n * @name Moveable.Snappable#snapThreshold\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapThreshold = 5;\n */\n\n/**\n * Add guidelines in the horizontal direction. (default: [])\n * @name Moveable.Snappable#horizontalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.horizontalGuidelines = [100, 200, 500];\n */\n\n/**\n * Add guidelines in the vertical direction. (default: [])\n * @name Moveable.Snappable#verticalGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.verticalGuidelines = [100, 200, 500];\n */\n/**\n * Add guidelines for the element. (default: [])\n * @name Moveable.Snappable#elementGuidelines\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.elementGuidelines = [\n *   document.querySelector(\".element\"),\n * ];\n */\n/**\n * You can set up boundaries.\n * @name Moveable.Snappable#bounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.bounds = { left: 0, right: 1000, top: 0, bottom: 1000};\n */\n/**\n * You can set up inner boundaries.\n * @name Moveable.Snappable#innerBounds\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.innerBounds = { left: 500, top: 500, width: 100, height: 100};\n */\n/**\n * snap distance digits (default: 0)\n * @name Moveable.Snappable#snapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapDigit = 0\n */\n\n/**\n * If width size is greater than 0, you can vertical snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridWidth\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridWidth = 5;\n */\n\n/**\n * If height size is greater than 0, you can horizontal snap to the grid. (default: 0)\n * @name Moveable.Snappable#snapGridHeight\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapGridHeight = 5;\n */\n/**\n * Whether to show snap distance (default: true)\n * @name Moveable.Snappable#isDisplaySnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplaySnapDigit = true;\n */\n\n/**\n * Whether to show element inner snap distance (default: false)\n * @name Moveable.Snappable#isDisplayInnerSnapDigit\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplayInnerSnapDigit = true;\n */\n\n\n/**\n * You can set the text format of the distance shown in the guidelines. (default: self)\n * @name Moveable.Snappable#snapDistFormat\n * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Snappable.html#.SnappableOptions}\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  snappable: true,\n *  snapDistFormat: (v, type) => v,\n * });\n * moveable.snapDistFormat = (v, type) => `${v}px`;\n */\n\n/**\n * When you drag or dragControl, the `snap` event is called.\n * @memberof Moveable.Snappable\n * @event snap\n * @param {Moveable.Snappable.OnSnap} - Parameters for the `snap` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     snappable: true\n * });\n * moveable.on(\"snap\", e => {\n *     console.log(\"onSnap\", e);\n * });\n */\n","import { prefix, getControlTransform, getLineStyle, getProps } from \"./utils\";\nimport {\n    Renderer, MoveableManagerInterface,\n    RenderDirections,\n} from \"./types\";\nimport { DIRECTION_INDEXES, DIRECTION_ROTATIONS, DIRECTIONS, DIRECTIONS4 } from \"./consts\";\nimport { IObject, throttle, getRad, getKeys } from \"@daybrush/utils\";\n\nexport interface DirectionControlInfo {\n    data: Record<string, any>;\n    classNames: string[];\n    dir: string;\n}\nexport function renderDirectionControlsByInfos(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    ableName: string,\n    renderDirections: DirectionControlInfo[],\n    React: Renderer,\n): any[] {\n\n    const {\n        renderPoses,\n        rotation: rotationRad,\n        direction,\n    } = moveable.getState();\n    const {\n        zoom,\n    } = getProps(moveable.props, ableName as any);\n\n\n    const sign = (direction > 0 ? 1 : -1);\n    const degRotation = rotationRad / Math.PI * 180;\n    const directionMap: IObject<boolean> = {};\n\n    const renderState = moveable.renderState;\n    if (!renderState.renderDirectionMap) {\n        renderState.renderDirectionMap = {};\n    }\n    const renderDirectionMap = renderState.renderDirectionMap;\n\n    renderDirections.forEach(({ dir }) => {\n        directionMap[dir] = true;\n    });\n\n    return renderDirections.map(({ data, classNames, dir }) => {\n        const indexes = DIRECTION_INDEXES[dir];\n\n        if (!indexes || !directionMap[dir]) {\n            return null;\n        }\n        renderDirectionMap[dir] = true;\n        const directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n\n        const dataAttrs: Record<string, string> = {};\n\n        getKeys(data).forEach(name => {\n            dataAttrs[`data-${name}`] = data[name];\n        });\n        return (\n            <div className={prefix(\"control\", \"direction\", dir, ableName, ...classNames)}\n                data-rotation={directionRotation}\n                data-direction={dir}\n                {...dataAttrs}\n                key={`direction-${dir}`}\n                style={getControlTransform(rotationRad, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\n        );\n    });\n}\nexport function renderDirectionControls(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    defaultDirections: string[],\n    ableName: string,\n    React: Renderer,\n): any[] {\n    const {\n        renderDirections: directions = defaultDirections,\n    } = getProps(moveable.props, ableName as any);\n\n    if (!directions) {\n        return [];\n    }\n    const renderDirections = directions === true ? DIRECTIONS : directions;\n\n    return renderDirectionControlsByInfos(\n        moveable,\n        ableName,\n        renderDirections.map(dir => {\n            return {\n                data: {},\n                classNames: [],\n                dir,\n            };\n        }),\n        React,\n    );\n}\nexport function renderAroundControls(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    React: Renderer,\n): any[] {\n    const renderState = moveable.renderState;\n    if (!renderState.renderDirectionMap) {\n        renderState.renderDirectionMap = {};\n    }\n    const {\n        renderPoses,\n        rotation: rotationRad,\n        direction,\n    } = moveable.getState();\n\n    const renderDirectionMap = renderState.renderDirectionMap;\n\n    const {\n        zoom,\n    } = moveable.props;\n    const sign = (direction > 0 ? 1 : -1);\n    const degRotation = rotationRad / Math.PI * 180;\n\n    return getKeys(renderDirectionMap).map(dir => {\n        const indexes = DIRECTION_INDEXES[dir];\n\n        if (!indexes) {\n            return null;\n        }\n        const directionRotation = (throttle(degRotation, 15) + sign * DIRECTION_ROTATIONS[dir] + 720) % 180;\n\n        return (\n            <div className={prefix(\"around-control\")} data-rotation={directionRotation} data-direction={dir} key={`direction-around-${dir}`}\n                style={getControlTransform(rotationRad, zoom!, ...indexes.map(index => renderPoses[index]))}></div>\n        );\n    });\n}\n\nexport function renderLine(\n    React: Renderer,\n    direction: string,\n    pos1: number[],\n    pos2: number[],\n    zoom: number,\n    key: number | string,\n    ...classNames: string[]\n): any {\n    const rad = getRad(pos1, pos2);\n    const rotation = direction ? (throttle(rad / Math.PI * 180, 15)) % 180 : -1;\n\n    return <div key={`line-${key}`}\n        className={prefix(\"line\", \"direction\", direction ? \"edge\" : \"\", direction, ...classNames)}\n        data-rotation={rotation}\n        data-line-key={key}\n        data-direction={direction} style={getLineStyle(pos1, pos2, zoom, rad)}></div>;\n}\n\nexport function renderEdgeLines(\n    React: Renderer,\n    ableName: string,\n    edge: true | string[],\n    poses: number[][],\n    zoom: number,\n): any[] {\n    const directions = edge === true ? DIRECTIONS4 : edge;\n\n    return directions.map((direction, i) => {\n        const [index1, index2] = DIRECTION_INDEXES[direction];\n\n        if (index2 == null) {\n            return;\n        }\n        return renderLine(React, direction, poses[index1], poses[index2], zoom, `${ableName}Edge${i}`, ableName);\n    }).filter(Boolean);\n}\nexport function getRenderDirections(ableName: string) {\n    return (\n        moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n        React: Renderer,\n    ) => {\n        const edge = getProps(moveable.props, ableName as any).edge;\n\n        if (edge && (edge === true || edge.length)) {\n            return [\n                ...renderEdgeLines(\n                    React,\n                    ableName,\n                    edge,\n                    moveable.getState().renderPoses,\n                    moveable.props.zoom!,\n                ),\n                ...renderDiagonalDirections(moveable, ableName, React),\n            ];\n        }\n        return renderAllDirections(moveable, ableName, React);\n    };\n}\nexport function renderAllDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    ableName: string,\n    React: Renderer,\n) {\n    return renderDirectionControls(moveable, DIRECTIONS, ableName, React);\n}\nexport function renderDiagonalDirections(\n    moveable: MoveableManagerInterface<Partial<RenderDirections>>,\n    ableName: string,\n    React: Renderer,\n): any[] {\n    return renderDirectionControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], ableName, React);\n}\n","import {\n    setDragStart, getBeforeDragDist, getTransformDist,\n    convertTransformFormat, resolveTransformEvent, fillTransformStartEvent,\n    setDefaultTransformIndex, fillOriginalTransform,\n} from \"../gesto/GestoUtils\";\nimport {\n    triggerEvent, fillParams,\n    getDistSize, prefix,\n    fillEndParams, getComputedStyle,\n    fillCSSObject,\n} from \"../utils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    DraggableProps, OnDrag, OnDragGroup,\n    OnDragGroupStart, OnDragStart, OnDragEnd, DraggableState,\n    Renderer, OnDragGroupEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { triggerChildGesto } from \"../groupUtils\";\nimport { startCheckSnapDrag } from \"./Snappable\";\nimport { IObject, getRad, throttle, throttleArray } from \"@daybrush/utils\";\nimport { checkSnapBoundsDrag } from \"./snappable/snapBounds\";\nimport { TINY_NUM } from \"../consts\";\n\n/**\n * @namespace Draggable\n * @memberof Moveable\n * @description Draggable refers to the ability to drag and move targets.\n */\nexport default {\n    name: \"draggable\",\n    props: {\n        draggable: Boolean,\n        throttleDrag: Number,\n        throttleDragRotate: Number,\n        startDragRotate: Number,\n        edgeDraggable: Boolean,\n    } as const,\n    events: {\n        onDragStart: \"dragStart\",\n        onDrag: \"drag\",\n        onDragEnd: \"dragEnd\",\n        onDragGroupStart: \"dragGroupStart\",\n        onDragGroup: \"dragGroup\",\n        onDragGroupEnd: \"dragGroupEnd\",\n    } as const,\n    render(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        React: Renderer,\n    ): any[] {\n        const { throttleDragRotate, zoom } = moveable.props;\n        const { dragInfo, beforeOrigin } = moveable.getState();\n\n        if (!throttleDragRotate || !dragInfo) {\n            return [];\n        }\n        const dist = dragInfo.dist;\n\n        if (!dist[0] && !dist[1]) {\n            return [];\n        }\n\n        const width = getDistSize(dist);\n        const rad = getRad(dist, [0, 0]);\n\n        return [<div className={prefix(\n            \"line\",\n            \"horizontal\",\n            \"dragline\",\n            \"dashed\",\n        )} key={`dragRotateGuideline`} style={{\n            width: `${width}px`,\n            transform: `translate(${beforeOrigin[0]}px, ${beforeOrigin[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n        }} />];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ) {\n        const { datas, parentEvent, parentGesto } = e;\n        const state = moveable.state;\n        const {\n            target,\n            gestos,\n        } = state;\n\n        if (gestos.draggable) {\n            return false;\n        }\n        gestos.draggable = parentGesto || moveable.targetGesto;\n        const style = getComputedStyle(target!);\n\n        datas.datas = {};\n        datas.left = parseFloat(style.left || \"\") || 0;\n        datas.top = parseFloat(style.top || \"\") || 0;\n        datas.bottom = parseFloat(style.bottom || \"\") || 0;\n        datas.right = parseFloat(style.right || \"\") || 0;\n        datas.startValue = [0, 0];\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e, \"translate\");\n        startCheckSnapDrag(moveable, datas);\n\n        datas.prevDist = [0, 0];\n        datas.prevBeforeDist = [0, 0];\n        datas.isDrag = false;\n        datas.deltaOffset = [0, 0];\n\n        const params = fillParams<OnDragStart>(moveable, e, {\n            set: (translate: number[]) => {\n                datas.startValue = translate;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\n\n        if (result !== false) {\n            datas.isDrag = true;\n            moveable.state.dragInfo = {\n                startRect: moveable.getRect(),\n                dist: [0, 0],\n            };\n        } else {\n            gestos.draggable = null;\n            datas.isPinch = false;\n        }\n        return datas.isDrag ? params : false;\n    },\n    drag(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ): OnDrag | undefined {\n        if (!e) {\n            return;\n        }\n        resolveTransformEvent(e, \"translate\");\n\n        const { datas, parentEvent, parentFlag, isPinch, isRequest, deltaOffset } = e;\n        let { distX, distY } = e;\n        const { isDrag, prevDist, prevBeforeDist, startValue } = datas;\n\n        if (!isDrag) {\n            return;\n        }\n\n        if (deltaOffset) {\n            distX += deltaOffset[0];\n            distY += deltaOffset[1];\n        }\n        const props = moveable.props;\n\n        const parentMoveable = props.parentMoveable;\n        const throttleDrag = parentEvent ? 0 : (props.throttleDrag || 0);\n        const throttleDragRotate = parentEvent ? 0 : (props.throttleDragRotate || 0);\n\n        let isSnap = false;\n        let dragRotateRad = 0;\n\n        if (!parentEvent && throttleDragRotate > 0 && (distX || distY)) {\n            const startDragRotate = props.startDragRotate || 0;\n            const deg\n                = throttle(startDragRotate + getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate)\n                - startDragRotate;\n            const ry = distY * Math.abs(Math.cos((deg - 90) / 180 * Math.PI));\n            const rx = distX * Math.abs(Math.cos(deg / 180 * Math.PI));\n            const r = getDistSize([rx, ry]);\n            dragRotateRad = deg * Math.PI / 180;\n\n            distX = r * Math.cos(dragRotateRad);\n            distY = r * Math.sin(dragRotateRad);\n        }\n\n        if (!isPinch && !parentEvent && !parentFlag && (!throttleDragRotate || distX || distY)) {\n            const [verticalInfo, horizontalInfo] = checkSnapBoundsDrag(\n                moveable, distX, distY, throttleDragRotate, isRequest || deltaOffset, datas,\n            );\n            const {\n                isSnap: isVerticalSnap,\n                isBound: isVerticalBound,\n                offset: verticalOffset,\n            } = verticalInfo;\n            const {\n                isSnap: isHorizontalSnap,\n                isBound: isHorizontalBound,\n                offset: horizontalOffset,\n            } = horizontalInfo;\n\n            isSnap = isVerticalSnap || isHorizontalSnap || isVerticalBound || isHorizontalBound;\n\n            distX += verticalOffset;\n            distY += horizontalOffset;\n        }\n\n        const beforeTranslate = plus(getBeforeDragDist({ datas, distX, distY }), startValue);\n        const translate = plus(getTransformDist({ datas, distX, distY }), startValue);\n\n        if (!throttleDragRotate && !isSnap) {\n            throttleArray(translate, throttleDrag);\n            throttleArray(beforeTranslate, throttleDrag);\n        }\n        throttleArray(translate, TINY_NUM);\n        throttleArray(beforeTranslate, TINY_NUM);\n\n        const beforeDist = minus(beforeTranslate, startValue);\n        const dist = minus(translate, startValue);\n        const delta = minus(dist, prevDist);\n        const beforeDelta = minus(beforeDist, prevBeforeDist);\n\n        datas.prevDist = dist;\n        datas.prevBeforeDist = beforeDist;\n\n\n        datas.passDelta = delta; //distX - (datas.passDistX || 0);\n        // datas.passDeltaY = distY - (datas.passDistY || 0);\n        datas.passDist = dist; //distX;\n        // datas.passDistY = distY;\n\n        const left = datas.left + beforeDist[0];\n        const top = datas.top + beforeDist[1];\n        const right = datas.right - beforeDist[0];\n        const bottom = datas.bottom - beforeDist[1];\n        const nextTransform = convertTransformFormat(datas,\n            `translate(${translate[0]}px, ${translate[1]}px)`, `translate(${dist[0]}px, ${dist[1]}px)`);\n\n        fillOriginalTransform(e, nextTransform);\n\n        moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\n        if (!parentEvent && !parentMoveable && delta.every(num => !num) && beforeDelta.some(num => !num)) {\n            return;\n        }\n\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const params = fillParams<OnDrag>(moveable, e, {\n            transform: nextTransform,\n            dist,\n            delta,\n            translate,\n            beforeDist,\n            beforeDelta,\n            beforeTranslate,\n            left,\n            top,\n            right,\n            bottom,\n            width,\n            height,\n            isPinch,\n            ...fillCSSObject({\n                transform: nextTransform,\n            }, e),\n        });\n\n        !parentEvent && triggerEvent(moveable, \"onDrag\", params);\n        return params;\n    },\n    dragAfter(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            deltaOffset,\n        } = datas;\n\n        if (deltaOffset[0] || deltaOffset[1]) {\n            datas.deltaOffset = [0, 0];\n            return this.drag(moveable, {...e, deltaOffset });\n        }\n        return false;\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const { parentEvent, datas } = e;\n\n        moveable.state.dragInfo = null;\n        if (!datas.isDrag) {\n            return;\n        }\n        datas.isDrag = false;\n        const param = fillEndParams<OnDragEnd>(moveable, e, {});\n        !parentEvent && triggerEvent(moveable, \"onDragEnd\", param);\n        return param;\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas, clientX, clientY } = e;\n\n        const params = this.dragStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const events = triggerChildGesto(moveable, this, \"dragStart\", [\n            clientX || 0,\n            clientY || 0,\n        ], e, false, \"draggable\");\n\n        const nextParams: OnDragGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\n\n        datas.isDrag = result !== false;\n\n        return datas.isDrag ? params : false;\n    },\n    dragGroup(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        const params = this.drag(moveable, e);\n        const { passDelta } = e.datas;\n        const events = triggerChildGesto(moveable, this, \"drag\", passDelta, e, false, \"draggable\");\n\n        if (!params) {\n            return;\n        }\n        const nextParams: OnDragGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onDragGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        this.dragEnd(moveable, e);\n        const events = triggerChildGesto(moveable, this, \"dragEnd\", [0, 0], e, false, \"draggable\");\n        triggerEvent(moveable, \"onDragGroupEnd\", fillEndParams<OnDragGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        }));\n\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Draggable#request\n     * @param {object} [e] - the draggable's request parameter\n     * @param {number} [e.x] - x position\n     * @param {number} [e.y] - y position\n     * @param {number} [e.deltaX] - X number to move\n     * @param {number} [e.deltaY] - Y number to move\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"draggable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 });\n     * moveable.request(\"draggable\", { x: 220, y: 100 });\n     * moveable.request(\"draggable\", { x: 240, y: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        return {\n            isControl: false,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"x\" in e) {\n                    distX = e.x - rect.left;\n                } else if (\"deltaX\" in e) {\n                    distX += e.deltaX;\n                }\n                if (\"y\" in e) {\n                    distY = e.y - rect.top;\n                } else if (\"deltaY\" in e) {\n                    distY += e.deltaY;\n                }\n\n                return { datas, distX, distY };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n    unset(moveable: MoveableManagerInterface<any, Record<string, any>>) {\n        moveable.state.gestos.draggable = null;\n        moveable.state.dragInfo = null;\n    },\n};\n\n/**\n * Whether or not target can be dragged. (default: false)\n * @name Moveable.Draggable#draggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.draggable = true;\n */\n\n/**\n * throttle of x, y when drag.\n * @name Moveable.Draggable#throttleDrag\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleDrag = 1;\n */\n\n/**\n* throttle of angle of x, y when drag.\n* @name Moveable.Draggable#throttleDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* moveable.throttleDragRotate = 45;\n*/\n\n/**\n* start angle of throttleDragRotate of x, y when drag.\n* @name Moveable.Draggable#startDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* // 45, 135, 225, 315\n* moveable.throttleDragRotate = 90;\n* moveable.startDragRotate = 45;\n*/\n\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable.Draggable\n * @event dragStart\n * @param {Moveable.Draggable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable.Draggable\n * @event drag\n * @param {Moveable.Draggable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable.Draggable\n * @event dragEnd\n * @param {Moveable.Draggable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group drag starts, the `dragGroupStart` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroupStart\n* @param {Moveable.Draggable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroupStart\", ({ targets }) => {\n*     console.log(\"onDragGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group drag, the `dragGroup` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroup\n* @param {Moveable.Draggable.OnDragGroup} - Parameters for the `dragGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroup\", ({ targets, events }) => {\n*     console.log(\"onDragGroup\", targets);\n*     events.forEach(ev => {\n*          // drag event\n*          console.log(\"onDrag left, top\", ev.left, ev.top);\n*          // ev.target!.style.left = `${ev.left}px`;\n*          // ev.target!.style.top = `${ev.top}px`;\n*          console.log(\"onDrag translate\", ev.dist);\n*          ev.target!.style.transform = ev.transform;)\n*     });\n* });\n*/\n\n/**\n * When the group drag finishes, the `dragGroupEnd` event is called.\n * @memberof Moveable.Draggable\n * @event dragGroupEnd\n * @param {Moveable.Draggable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    triggerEvent,\n    fillParams,\n    fillEndParams,\n    getAbsolutePosesByState,\n    catchEvent,\n    getOffsetSizeDist,\n    getProps,\n    getDirectionCondition,\n    calculatePoses,\n    fillAfterTransform,\n    getDirectionViewClassName,\n    getTotalDirection,\n} from \"../utils\";\nimport {\n    setDragStart,\n    getResizeDist,\n    getAbsolutePosition,\n    getPosByDirection,\n    getNextMatrix,\n    getNextTransforms,\n} from \"../gesto/GestoUtils\";\nimport {\n    ResizableProps, OnResizeGroup, OnResizeGroupEnd,\n    OnResizeGroupStart, DraggableProps, OnDrag, OnResizeStart, SnappableState,\n    OnResize, OnResizeEnd, MoveableManagerInterface, MoveableGroupInterface, SnappableProps,\n    OnBeforeResize, OnBeforeResizeGroup, ResizableRequestParam,\n} from \"../types\";\nimport { getRenderDirections } from \"../renderDirections\";\nimport {\n    fillChildEvents,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, convertDimension, createRotateMatrix, plus } from \"@scena/matrix\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\nimport { checkSnapResize } from \"./Snappable\";\nimport {\n    calculateBoundSize,\n    isString, convertUnitSize,\n    throttle,\n    isNumber,\n} from \"@daybrush/utils\";\nimport { TINY_NUM } from \"../consts\";\nimport { parseMat } from \"css-to-mat\";\n\n/**\n * @namespace Resizable\n * @memberof Moveable\n * @description Resizable indicates whether the target's width and height can be increased or decreased.\n */\n\nconst directionCondition = getDirectionCondition(\"resizable\");\n\nexport default {\n    name: \"resizable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        resizable: Boolean,\n        throttleResize: Number,\n        renderDirections: Array,\n        keepRatio: Boolean,\n        resizeFormat: Function,\n        keepRatioFinally: Boolean,\n        edge: Boolean,\n    } as const,\n    events: {\n        onResizeStart: \"resizeStart\",\n        onBeforeResize: \"beforeResize\",\n        onResize: \"resize\",\n        onResizeEnd: \"resizeEnd\",\n\n        onResizeGroupStart: \"resizeGroupStart\",\n        onBeforeResizeGroup: \"beforeResizeGroup\",\n        onResizeGroup: \"resizeGroup\",\n        onResizeGroupEnd: \"resizeGroupEnd\",\n    } as const,\n    render: getRenderDirections(\"resizable\"),\n    dragControlCondition: directionCondition,\n    viewClassName: getDirectionViewClassName(\"resizable\"),\n    dragControlStart(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps, SnappableState>,\n        e: any,\n    ) {\n        const {\n            inputEvent,\n            isPinch,\n            isGroup,\n            parentDirection,\n            parentGesto,\n            datas,\n            parentFixedDirection,\n            parentEvent,\n        } = e;\n\n        const direction = getTotalDirection(\n            parentDirection,\n            isPinch,\n            inputEvent,\n            datas,\n        );\n\n        const state = moveable.state;\n        const { target, width, height, gestos } = state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (gestos.resizable) {\n            return false;\n        }\n        gestos.resizable = parentGesto || moveable.controlGesto;\n        !isPinch && setDragStart(moveable, e);\n\n        datas.datas = {};\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.prevWidth = 0;\n        datas.prevHeight = 0;\n\n        datas.minSize = [0, 0];\n        datas.startWidth = state.cssWidth;\n        datas.startHeight = state.cssHeight;\n        datas.maxSize = [Infinity, Infinity];\n\n        if (!isGroup) {\n            datas.minSize = [\n                state.minOffsetWidth,\n                state.minOffsetHeight,\n            ];\n            datas.maxSize = [\n                state.maxOffsetWidth,\n                state.maxOffsetHeight,\n            ];\n        }\n        const transformOrigin = moveable.props.transformOrigin || \"% %\";\n\n        datas.transformOrigin = transformOrigin && isString(transformOrigin)\n            ? transformOrigin.split(\" \")\n            : transformOrigin;\n\n        datas.startOffsetMatrix = state.offsetMatrix;\n        datas.startTransformOrigin = state.transformOrigin;\n\n        datas.isWidth = e?.parentIsWidth ?? ((!direction[0] && !direction[1]) || direction[0] || !direction[1]);\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n\n        datas.startPositions = getAbsolutePosesByState(moveable.state);\n\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n        }\n        function setMin(minSize: Array<string | number>)  {\n            datas.minSize = [\n                convertUnitSize(`${minSize[0]}`, 0) || 0,\n                convertUnitSize(`${minSize[1]}`, 0) || 0,\n            ];\n        }\n        function setMax(maxSize: Array<string | number>) {\n            const nextMaxSize = [\n                maxSize[0] || Infinity,\n                maxSize[1] || Infinity,\n            ];\n            if (!isNumber(nextMaxSize[0]) || isFinite(nextMaxSize[0])) {\n                nextMaxSize[0] = convertUnitSize(`${nextMaxSize[0]}`, 0) || Infinity;\n            }\n            if (!isNumber(nextMaxSize[1]) || isFinite(nextMaxSize[1])) {\n                nextMaxSize[1] = convertUnitSize(`${nextMaxSize[1]}`, 0) || Infinity;\n            }\n            datas.maxSize = nextMaxSize;\n        }\n\n        setRatio(width / height);\n        setFixedDirection(parentFixedDirection || [-direction[0], -direction[1]]);\n\n        datas.setFixedDirection = setFixedDirection;\n        datas.setMin = setMin;\n        datas.setMax = setMax;\n        const params = fillParams<OnResizeStart>(moveable, e, {\n            direction,\n            startRatio: datas.ratio,\n            set: ([startWidth, startHeight]: number[]) => {\n                datas.startWidth = startWidth;\n                datas.startHeight = startHeight;\n            },\n            setMin,\n            setMax,\n            setRatio,\n            setFixedDirection,\n            setOrigin: (origin: Array<string | number>) => {\n                datas.transformOrigin = origin;\n            },\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onResizeStart\", params);\n\n        datas.startFixedDirection = datas.fixedDirection;\n        if (result !== false) {\n            datas.isResize = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n        }\n        return datas.isResize ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps & SnappableProps>,\n        e: any,\n    ) {\n        const {\n            datas,\n            parentFlag,\n            isPinch,\n            parentKeepRatio,\n            dragClient,\n            parentDist,\n            isRequest,\n            isGroup,\n            parentEvent,\n            resolveMatrix,\n        } = e;\n\n        const {\n            isResize,\n            transformOrigin,\n            startWidth,\n            startHeight,\n            prevWidth,\n            prevHeight,\n            minSize,\n            maxSize,\n            ratio,\n            startOffsetWidth,\n            startOffsetHeight,\n            isWidth,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        if (resolveMatrix) {\n            const {\n                is3d,\n            } = moveable.state;\n            const {\n                startOffsetMatrix,\n                startTransformOrigin,\n            } = datas;\n            const n = is3d ? 4 : 3;\n            let targetMatrix = parseMat(getNextTransforms(e));\n            const targetN = Math.sqrt(targetMatrix.length);\n\n            if (n !== targetN) {\n                targetMatrix = convertDimension(targetMatrix, targetN, n);\n            }\n\n            const nextAllMatrix = getNextMatrix(\n                startOffsetMatrix,\n                targetMatrix,\n                startTransformOrigin,\n                n,\n            );\n            const poses = calculatePoses(nextAllMatrix, startOffsetWidth, startOffsetHeight, n);\n\n            datas.startPositions = poses;\n            datas.nextTargetMatrix = targetMatrix;\n            datas.nextAllMatrix = nextAllMatrix;\n        }\n        const props = getProps(moveable.props, \"resizable\");\n        const {\n            resizeFormat,\n            throttleResize = parentFlag ? 0 : 1,\n            parentMoveable,\n            keepRatioFinally,\n        } = props;\n        const direction = datas.direction;\n        let sizeDirection = direction;\n        let distWidth = 0;\n        let distHeight = 0;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = (ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio)) || false;\n\n        function getNextBoundingSize() {\n            const fixedDirection = datas.fixedDirection;\n            const nextSize = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n\n            distWidth = nextSize.distWidth;\n            distHeight = nextSize.distHeight;\n\n            let nextWidth = (sizeDirection[0] - fixedDirection[0]) || keepRatio\n                ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\n            let nextHeight = (sizeDirection[1] - fixedDirection[1]) || keepRatio\n                ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\n\n            if (keepRatio && startOffsetWidth && startOffsetHeight) {\n                // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\n                if (isWidth) {\n                    nextHeight = nextWidth / ratio;\n                } else {\n                    nextWidth = nextHeight * ratio;\n                }\n            }\n            return [nextWidth, nextHeight];\n        }\n\n        let [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n        if (!parentEvent) {\n            datas.setFixedDirection(datas.fixedDirection);\n\n            triggerEvent(moveable, \"onBeforeResize\", fillParams<OnBeforeResize>(moveable, e, {\n                startFixedDirection: datas.startFixedDirection,\n                setFixedDirection(nextFixedDirection: number[]) {\n                    datas.setFixedDirection(nextFixedDirection);\n\n                    [boundingWidth, boundingHeight] = getNextBoundingSize();\n\n                    return [boundingWidth, boundingHeight];\n                },\n                boundingWidth,\n                boundingHeight,\n                setSize(size: number[]) {\n                    [boundingWidth, boundingHeight] = size;\n                },\n            }, true));\n        }\n\n        let fixedPosition = dragClient;\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapResize(\n                moveable,\n                boundingWidth,\n                boundingHeight,\n                direction,\n                fixedPosition,\n                isRequest,\n                datas,\n            );\n        }\n        if (parentDist) {\n            !parentDist[0] && (snapDist[0] = 0);\n            !parentDist[1] && (snapDist[1] = 0);\n        }\n\n        function computeSize() {\n            if (resizeFormat) {\n                [boundingWidth, boundingHeight] = resizeFormat([boundingWidth, boundingHeight]);\n            }\n            boundingWidth = throttle(boundingWidth, throttleResize!);\n            boundingHeight = throttle(boundingHeight, throttleResize!);\n        }\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                // pre-compute before maintaining the ratio\n                computeSize();\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                boundingWidth += snapDist[0];\n                boundingHeight = boundingWidth / ratio;\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                boundingHeight += snapDist[1];\n                boundingWidth = boundingHeight * ratio;\n            }\n        } else {\n            boundingWidth += snapDist[0];\n            boundingHeight += snapDist[1];\n\n            boundingWidth = Math.max(0, boundingWidth);\n            boundingHeight = Math.max(0, boundingHeight);\n        }\n\n        [boundingWidth, boundingHeight] = calculateBoundSize(\n            [boundingWidth, boundingHeight],\n            minSize,\n            maxSize,\n            keepRatio ? ratio : false,\n        );\n        computeSize();\n\n        if (keepRatio && (isGroup || keepRatioFinally)) {\n            if (isWidth) {\n                boundingHeight = boundingWidth / ratio;\n            } else {\n                boundingWidth = boundingHeight * ratio;\n            }\n        }\n        distWidth = boundingWidth - startOffsetWidth;\n        distHeight = boundingHeight - startOffsetHeight;\n\n        const delta = [distWidth - prevWidth, distHeight - prevHeight];\n\n        datas.prevWidth = distWidth;\n        datas.prevHeight = distHeight;\n\n        const inverseDelta = getResizeDist(\n            moveable,\n            boundingWidth,\n            boundingHeight,\n            fixedPosition,\n            transformOrigin,\n            datas,\n        );\n\n        if (!parentMoveable && delta.every(num => !num) && inverseDelta.every(num => !num)) {\n            return;\n        }\n        const drag = Draggable.drag(\n            moveable,\n            setCustomDrag(e, moveable.state, inverseDelta, !!isPinch, false, \"draggable\"),\n        ) as OnDrag;\n        const transform = drag.transform;\n\n        const nextWidth = startWidth + distWidth;\n        const nextHeight = startHeight + distHeight;\n\n        const params = fillParams<OnResize>(moveable, e, {\n            width: nextWidth,\n            height: nextHeight,\n            offsetWidth: Math.round(boundingWidth),\n            offsetHeight: Math.round(boundingHeight),\n            startRatio: ratio,\n            boundingWidth,\n            boundingHeight,\n            direction,\n            dist: [distWidth, distHeight],\n            delta,\n            isPinch: !!isPinch,\n            drag,\n            ...fillAfterTransform({\n                style: {\n                    width: `${nextWidth}px`,\n                    height: `${nextHeight}px`,\n                },\n                transform,\n            }, drag, e),\n        });\n        !parentEvent && triggerEvent(moveable, \"onResize\", params);\n        return params;\n    },\n    dragControlAfter(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            isResize,\n            startOffsetWidth,\n            startOffsetHeight,\n            prevWidth,\n            prevHeight,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const errorWidth = width - (startOffsetWidth + prevWidth);\n        const errorHeight = height - (startOffsetHeight + prevHeight);\n        const isErrorWidth = Math.abs(errorWidth) > 3;\n        const isErrorHeight = Math.abs(errorHeight) > 3;\n\n        if (isErrorWidth) {\n            datas.startWidth += errorWidth;\n            datas.startOffsetWidth += errorWidth;\n            datas.prevWidth += errorWidth;\n        }\n        if (isErrorHeight) {\n            datas.startHeight += errorHeight;\n            datas.startOffsetHeight += errorHeight;\n            datas.prevHeight += errorHeight;\n        }\n        if (isErrorWidth || isErrorHeight) {\n            return this.dragControl(moveable, e);\n        }\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, parentEvent } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        datas.isResize = false;\n\n        const params = fillEndParams<OnResizeEnd>(moveable, e, {});\n        !parentEvent && triggerEvent(moveable, \"onResizeEnd\", params);\n        return params;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const params = this.dragControlStart(moveable, {...e, isGroup: true });\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n\n            const startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n            const pos = getPosByDirection(startPositions, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n        const {\n            startOffsetWidth: parentStartOffsetWidth,\n            startOffsetHeight: parentStartOffsetHeight,\n        } = datas;\n\n        function updateGroupMin() {\n            const originalMinSize = datas.minSize;\n            originalEvents.forEach(ev => {\n                const {\n                    minSize: childMinSize,\n                    startOffsetWidth: childStartOffsetWidth,\n                    startOffsetHeight: childStartOffsetHeight,\n                } = ev.datas;\n\n                const parentMinWidth = parentStartOffsetWidth\n                    * (childStartOffsetWidth ? childMinSize[0] / childStartOffsetWidth : 0);\n                const parentMinHeight = parentStartOffsetHeight\n                    * (childStartOffsetHeight ? childMinSize[1] / childStartOffsetHeight : 0);\n\n                originalMinSize[0] = Math.max(originalMinSize[0], parentMinWidth);\n                originalMinSize[1] = Math.max(originalMinSize[1], parentMinHeight);\n            });\n        }\n\n        function updateGroupMax() {\n            const originalMaxSize = datas.maxSize;\n            originalEvents.forEach(ev => {\n                const {\n                    maxSize: childMaxSize,\n                    startOffsetWidth: childStartOffsetWidth,\n                    startOffsetHeight: childStartOffsetHeight,\n                } = ev.datas;\n\n                const parentMaxWidth = parentStartOffsetWidth\n                    * (childStartOffsetWidth ? childMaxSize[0] / childStartOffsetWidth : 0);\n                const parentMaxHeight = parentStartOffsetHeight\n                    * (childStartOffsetHeight ? childMaxSize[1] / childStartOffsetHeight : 0);\n\n                originalMaxSize[0] = Math.min(originalMaxSize[0], parentMaxWidth);\n                originalMaxSize[1] = Math.min(originalMaxSize[1], parentMaxHeight);\n            });\n        }\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n\n        updateGroupMin();\n        updateGroupMax();\n\n        const setFixedDirection = (fixedDirection: number[]) => {\n            params.setFixedDirection(fixedDirection);\n            events.forEach((ev, i) => {\n                ev.setFixedDirection(fixedDirection);\n                setDist(ev.moveable, originalEvents[i]);\n            });\n        };\n\n        datas.setFixedDirection = setFixedDirection;\n\n        const nextParams: OnResizeGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events: events.map(ev => {\n                return {\n                    ...ev,\n                    setMin: (minSize: Array<number | string>) => {\n                        ev.setMin(minSize);\n                        updateGroupMin();\n                    },\n                    setMax: (maxSize: Array<number | string>) => {\n                        ev.setMax(maxSize);\n                        updateGroupMax();\n                    },\n                };\n            }),\n            setFixedDirection,\n            setMin: (minSize: Array<number | string>) => {\n                params.setMin(minSize);\n                updateGroupMin();\n            },\n            setMax: (maxSize: Array<number | string>) => {\n                params.setMax(maxSize);\n                updateGroupMax();\n            },\n        };\n        const result = triggerEvent(moveable, \"onResizeGroupStart\", nextParams);\n\n        datas.isResize = result !== false;\n        return datas.isResize ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        const props = getProps(moveable.props, \"resizable\");\n\n        catchEvent(moveable, \"onBeforeResize\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeResizeGroup\", fillParams<OnBeforeResizeGroup>(moveable, e, {\n                ...parentEvent,\n                targets: props.targets!,\n            }, true));\n        });\n\n\n        const params = this.dragControl(moveable, {...e, isGroup: true });\n\n        if (!params) {\n            return;\n        }\n        const {\n            boundingWidth,\n            boundingHeight,\n            dist,\n        } = params;\n\n        const keepRatio = props.keepRatio;\n\n        const parentScale = [\n            boundingWidth / (boundingWidth - dist[0]),\n            boundingHeight / (boundingHeight - dist[1]),\n        ];\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * parentScale[0],\n                        ev.datas.originalY * parentScale[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                    parentKeepRatio: keepRatio,\n                };\n            },\n        );\n        const nextParams: OnResizeGroup = {\n            targets: props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onResizeGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isResize) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams: OnResizeGroupEnd = fillEndParams<OnResizeGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onResizeGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Resizable#request\n     * @param {Moveable.Resizable.ResizableRequestParam} e - the Resizable's request parameter\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"resizable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any>) {\n        const datas: Record<string, any> = {};\n        let distWidth = 0;\n        let distHeight = 0;\n        const rect = moveable.getRect();\n\n        return {\n            isControl: true,\n            requestStart(e: ResizableRequestParam) {\n                return { datas, parentDirection: e.direction || [1, 1], parentIsWidth: e?.horizontal ?? true };\n            },\n            request(e: ResizableRequestParam) {\n                if (\"offsetWidth\" in e) {\n                    distWidth = e.offsetWidth! - rect.offsetWidth;\n                } else if (\"deltaWidth\" in e) {\n                    distWidth += e.deltaWidth!;\n                }\n                if (\"offsetHeight\" in e) {\n                    distHeight = e.offsetHeight! - rect.offsetHeight;\n                } else if (\"deltaHeight\" in e) {\n                    distHeight += e.deltaHeight!;\n                }\n\n\n                return { datas, parentDist: [distWidth, distHeight], parentKeepRatio: e.keepRatio };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n    unset(moveable: MoveableManagerInterface<any, {}>) {\n        moveable.state.gestos.resizable = null;\n    },\n};\n\n/**\n * Whether or not target can be resized.\n * @name Moveable.Resizable#resizable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     resizable: false,\n * });\n *\n * moveable.resizable = true;\n */\n\n/**\n * throttle of width, height when resize. If throttleResize is set to less than 1, the target may shake.\n * @name Moveable.Resizable#throttleResize\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   throttleResize: 1,\n * });\n *\n * moveable.throttleResize = 0;\n */\n/**\n * When resize or scale, keeps a ratio of the width, height.\n * @name Moveable.Resizable#keepRatio\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * Set directions to show the control box.\n * @name Moveable.Resizable#renderDirections\n * @default [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"]\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * Function to convert size for resize\n * @name Moveable.Resizable#resizeFormat\n * @default oneself\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   resizeFormat: v => v,\n * });\n *\n * moveable.resizeFormat = (size: number[]) => ([Math.trunc(size[0]), Math.trunc(size[1])];\n */\n\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable.Resizable\n * @event resizeStart\n * @param {Moveable.Resizable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When resizing, `beforeResize` is called before `resize` occurs. In `beforeResize`, you can get and set the pre-value before resizing.\n * @memberof Moveable.Resizable\n * @event beforeResize\n * @param {Moveable.Resizable.OnBeforeResize} - Parameters for the `beforeResize` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"beforeResize\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"resize\", ({ target, width, height, drag }) => {\n *     target.style.width = `${width}px`;\n *     target.style.height = `${height}px`;\n *     target.style.transform = drag.transform;\n * });\n */\n\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable.Resizable\n * @event resize\n * @param {Moveable.Resizable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable.Resizable\n * @event resizeEnd\n * @param {Moveable.Resizable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group resize starts, the `resizeGroupStart` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroupStart\n* @param {Moveable.Resizable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroupStart\", ({ targets }) => {\n*     console.log(\"onResizeGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group resize, the `resizeGroup` event is called.\n* @memberof Moveable.Resizable\n* @event resizeGroup\n* @param {Moveable.Resizable.onResizeGroup} - Parameters for the `resizeGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     resizable: true\n* });\n* moveable.on(\"resizeGroup\", ({ targets, events }) => {\n*     console.log(\"onResizeGroup\", targets);\n*     events.forEach(ev => {\n*         const offset = [\n*             direction[0] < 0 ? -ev.delta[0] : 0,\n*             direction[1] < 0 ? -ev.delta[1] : 0,\n*         ];\n*         // ev.drag is a drag event that occurs when the group resize.\n*         const left = offset[0] + ev.drag.beforeDist[0];\n*         const top = offset[1] + ev.drag.beforeDist[1];\n*         const width = ev.width;\n*         const top = ev.top;\n*     });\n* });\n*/\n\n/**\n * When the group resize finishes, the `resizeGroupEnd` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroupEnd\n * @param {Moveable.Resizable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    prefix, triggerEvent, fillParams,\n    calculatePosition, fillEndParams, getRotationRad, getRefTargets,\n    catchEvent, getProps, calculateMoveableClientPositions,\n    fillAfterTransform,\n} from \"../utils\";\nimport {\n    IObject, hasClass, getRad,\n    throttle,\n    getDist,\n    getKeys,\n    isArray,\n} from \"@daybrush/utils\";\nimport {\n    RotatableProps, OnRotateGroup, OnRotateGroupEnd,\n    Renderer, OnRotateGroupStart, OnRotateStart, OnRotate,\n    OnRotateEnd, MoveableClientRect, SnappableProps,\n    SnappableState, MoveableManagerInterface, MoveableGroupInterface, DraggableProps,\n    OnBeforeRotate,\n    OnBeforeRotateGroup,\n    OnResizeStart,\n    OnResize,\n    TransformObject,\n    OnDragStart,\n} from \"../types\";\nimport { triggerChildAbles } from \"../groupUtils\";\nimport { calculate, convertPositionMatrix, getOrigin, minus, plus, rotate as rotateMatrix } from \"@scena/matrix\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\nimport { checkSnapRotate } from \"./Snappable\";\nimport {\n    fillTransformStartEvent,\n    convertTransformFormat, getRotateDist,\n    getOriginDirection,\n    getDirectionOffset,\n    fillTransformEvent,\n    setDefaultTransformIndex,\n    resolveTransformEvent,\n    getTransformDirection,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { DirectionControlInfo, renderAroundControls, renderDirectionControlsByInfos } from \"../renderDirections\";\nimport { DIRECTIONS, DIRECTION_REGION_TO_DIRECTION } from \"../consts\";\nimport Resizable from \"./Resizable\";\nimport Draggable from \"./Draggable\";\n\n/**\n * @namespace Rotatable\n * @memberof Moveable\n * @description Rotatable indicates whether the target can be rotated.\n */\n\nfunction setRotateStartInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: IObject<any>, clientX: number, clientY: number,\n    rect: MoveableClientRect,\n) {\n    const groupable = moveable.props.groupable;\n    const state = moveable.state;\n    const n = state.is3d ? 4 : 3;\n    const origin = datas.origin;\n    const nextOrigin = calculatePosition(\n        moveable.state.rootMatrix,\n        // TO-DO #710\n        minus([origin[0], origin[1]], groupable ? [0, 0] : [state.left, state.top]),\n        n,\n    );\n    const startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\n\n    datas.startAbsoluteOrigin = startAbsoluteOrigin;\n    datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\n    datas.defaultDeg = datas.prevDeg;\n    datas.prevSnapDeg = 0;\n    datas.loop = 0;\n    datas.startDist = getDist(startAbsoluteOrigin, [clientX, clientY]);\n}\n\nfunction getAbsoluteDist(\n    deg: number,\n    direction: number,\n    datas: IObject<any>,\n) {\n    const {\n        defaultDeg,\n        prevDeg,\n    } = datas;\n\n\n    let normalizedPrevDeg = prevDeg % 360;\n    let loop = Math.floor(prevDeg / 360);\n\n    if (normalizedPrevDeg < 0) {\n        normalizedPrevDeg += 360;\n    }\n\n    if (normalizedPrevDeg > deg && normalizedPrevDeg > 270 && deg < 90) {\n        // 360 => 0\n        ++loop;\n    } else if (normalizedPrevDeg < deg && normalizedPrevDeg < 90 && deg > 270) {\n        // 0 => 360\n        --loop;\n    }\n    const dist = direction * (loop * 360 + deg - defaultDeg);\n\n    datas.prevDeg = defaultDeg + dist;\n\n    return dist;\n}\nfunction getAbsoluteDistByClient(\n    clientX: number, clientY: number,\n    direction: number,\n    datas: IObject<any>,\n) {\n    return getAbsoluteDist(\n        getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180,\n        direction,\n        datas,\n    );\n}\nfunction getRotateInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    dist: number,\n    startValue: number,\n    checkSnap?: boolean,\n) {\n    const {\n        throttleRotate = 0,\n    } = moveable.props;\n    const prevSnapDeg = datas.prevSnapDeg;\n    let snapRotation = 0;\n    let isSnap = false;\n\n    if (checkSnap) {\n        const result = checkSnapRotate(moveable, moveableRect, dist);\n\n        isSnap = result.isSnap;\n        snapRotation = startValue + result.rotation;\n    }\n\n    if (!isSnap) {\n        snapRotation = throttle(startValue + dist, throttleRotate);\n    }\n    const snapDeg = snapRotation - startValue;\n\n    datas.prevSnapDeg = snapDeg;\n\n    return [snapDeg - prevSnapDeg, snapDeg, snapRotation];\n\n\n}\n\nexport function getReversePositionX(dir: string) {\n    if (dir === \"left\") {\n        return \"right\";\n    } else if (dir === \"right\") {\n        return \"left\";\n    }\n    return dir;\n}\nexport function getReversePositionY(dir: string) {\n    if (dir === \"top\") {\n        return \"bottom\";\n    } else if (dir === \"bottom\") {\n        return \"top\";\n    }\n    return dir;\n}\nexport function getRotationPositions(\n    rotationPosition: RotatableProps[\"rotationPosition\"],\n    [pos1, pos2, pos3, pos4]: number[][],\n    direction: number,\n) {\n    if (rotationPosition === \"none\") {\n        return;\n    }\n    const [dir1, dir2] = (rotationPosition || \"top\").split(\"-\");\n    let radPoses = [pos1, pos2];\n\n    // if (scale[0] < 0) {\n    //     dir1 = getReversePositionX(dir1);\n    //     dir2 = getReversePositionX(dir2);\n    // }\n    // if (scale[1] < 0) {\n    //     dir1 = getReversePositionY(dir1);\n    //     dir2 = getReversePositionY(dir2);\n    // }\n    if (dir1 === \"left\") {\n        radPoses = [pos3, pos1];\n    } else if (dir1 === \"right\") {\n        radPoses = [pos2, pos4];\n    } else if (dir1 === \"bottom\") {\n        radPoses = [pos4, pos3];\n    }\n    let pos = [\n        (radPoses[0][0] + radPoses[1][0]) / 2,\n        (radPoses[0][1] + radPoses[1][1]) / 2,\n    ];\n    const rad = getRotationRad(radPoses, direction);\n    if (dir2) {\n        const isStart = dir2 === \"top\" || dir2 === \"left\";\n        const isReverse = dir1 === \"bottom\" || dir1 === \"left\";\n\n        pos = radPoses[(isStart && !isReverse) || (!isStart && isReverse) ? 0 : 1];\n    }\n    return [pos, rad] as const;\n}\n\nexport function dragControlCondition(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n    if (e.isRequest) {\n        return e.requestAble === \"rotatable\";\n    }\n    const target = e.inputEvent.target as HTMLElement;\n    if (\n        hasClass(target, prefix(\"rotation-control\"))\n        || hasClass(target, prefix(\"around-control\"))\n        || (hasClass(target, prefix(\"control\")) && hasClass(target, prefix(\"rotatable\")))\n    ) {\n        return true;\n    }\n    const rotationTarget = moveable.props.rotationTarget;\n\n    if (rotationTarget) {\n        return getRefTargets(rotationTarget, true).some(element => {\n            if (!element) {\n                return false;\n            }\n            return target === element || target.contains(element);\n        });\n    }\n    return false;\n}\n\nconst directionCSS = DIRECTIONS.map(dir => {\n    let top = \"\";\n    let left = \"\";\n    let originX = \"center\";\n    let originY = \"center\";\n\n    if (dir.indexOf(\"n\") > -1) {\n        top = \"top: -20px;\";\n        originY = \"bottom\";\n    }\n    if (dir.indexOf(\"s\") > -1) {\n        top = \"top: 0px;\";\n        originY = \"top\";\n    }\n    if (dir.indexOf(\"w\") > -1) {\n        left = \"left: -20px;\";\n        originX = \"right\";\n    }\n    if (dir.indexOf(\"e\") > -1) {\n        left = \"left: 0px;\";\n        originX = \"left\";\n    }\n    return `.around-control[data-direction*=\"${dir}\"] {\n        ${left}${top}\n        transform-origin: ${originX} ${originY};\n    }`;\n}).join(\"\\n\");\nconst css = `.rotation {\n    position: absolute;\n    height: 40px;\n    width: 1px;\n    transform-origin: 50% 100%;\n    height: calc(40px * var(--zoom));\n    top: auto;\n    left: 0;\n    bottom: 100%;\n    will-change: transform;\n}\n.rotation .rotation-line {\n    display: block;\n    width: 100%;\n    height: 100%;\n    transform-origin: 50% 50%;\n}\n.rotation .rotation-control {\n    border-color: #4af;\n    border-color: var(--moveable-color);\n    background:#fff;\n    cursor: alias;\n}\n:global .view-rotation-dragging, .rotatable.direction.control {\n    cursor: alias;\n}\n.around-control {\n    position: absolute;\n    will-change: transform;\n    width: 20px;\n    height: 20px;\n    left: -10px;\n    top: -10px;\n    box-sizing: border-box;\n    background: transparent;\n    z-index: 8;\n    cursor: alias;\n    transform-origin: center center;\n}\n.rotatable.direction.control.move {\n    cursor: move;\n}\n${directionCSS}\n`;\nexport default {\n    name: \"rotatable\",\n    canPinch: true,\n    props: {\n        rotatable: Boolean,\n        rotationPosition: String,\n        throttleRotate: Number,\n        renderDirections: Object,\n        rotationTarget: Object,\n        rotateAroundControls: Boolean,\n        edge: Boolean,\n        resolveAblesWithRotatable: Object,\n    } as const,\n    events: {\n        onRotateStart: \"rotateStart\",\n        onBeforeRotate: \"beforeRotate\",\n        onRotate: \"rotate\",\n        onRotateEnd: \"rotateEnd\",\n        onRotateGroupStart: \"rotateGroupStart\",\n        onBeforeRotateGroup: \"beforeRotateGroup\",\n        onRotateGroup: \"rotateGroup\",\n        onRotateGroupEnd: \"rotateGroupEnd\",\n    } as const,\n    css: [css],\n    viewClassName(moveable: MoveableManagerInterface<RotatableProps>) {\n        if (!moveable.isDragging(\"rotatable\")) {\n            return \"\";\n        }\n        return prefix(\"view-rotation-dragging\");\n    },\n    render(moveable: MoveableManagerInterface<RotatableProps>, React: Renderer): any {\n        const {\n            rotatable,\n            rotationPosition,\n            zoom,\n            renderDirections,\n            rotateAroundControls,\n            resolveAblesWithRotatable,\n        } = getProps(moveable.props, \"rotatable\");\n        const {\n            renderPoses,\n            direction,\n        } = moveable.getState();\n        if (!rotatable) {\n            return null;\n        }\n        const positions = getRotationPositions(rotationPosition!, renderPoses, direction);\n\n        const jsxs = [];\n\n        if (positions) {\n            const [pos, rad] = positions;\n            jsxs.push(\n                <div key=\"rotation\" className={prefix(\"rotation\")} style={{\n                    // tslint:disable-next-line: max-line-length\n                    transform: `translate(-50%) translate(${pos[0]}px, ${pos[1]}px) rotate(${rad}rad)`,\n                }}>\n                    <div className={prefix(\"line rotation-line\")} style={{\n                        transform: `scaleX(${zoom})`,\n                    }}></div>\n                    <div className={prefix(\"control rotation-control\")} style={{\n                        transform: `translate(0.5px) scale(${zoom})`,\n                    }}></div>\n                </div>\n            );\n        }\n        if (renderDirections) {\n            const ables = getKeys(resolveAblesWithRotatable || {});\n            const resolveMap: Record<string, string> = {};\n\n            ables.forEach(name => {\n                resolveAblesWithRotatable![name]!.forEach(direction => {\n                    resolveMap[direction] = name;\n                });\n            });\n\n            let directionControlInfos: DirectionControlInfo[] = [];\n\n            if (isArray(renderDirections)) {\n                directionControlInfos = renderDirections.map(dir => {\n                    const able = resolveMap[dir];\n\n                    return {\n                        data: able ? { resolve: able } : {},\n                        classNames: able ? [`move`] : [],\n                        dir,\n                    };\n                });\n            }\n\n            jsxs.push(...renderDirectionControlsByInfos(\n                moveable,\n                \"rotatable\",\n                directionControlInfos,\n                React,\n            ));\n        }\n        if (rotateAroundControls) {\n            jsxs.push(...renderAroundControls(moveable, React));\n        }\n\n        return jsxs;\n    },\n    dragControlCondition: dragControlCondition as (moveable: any, e: any) => boolean,\n    dragControlStart(\n        moveable: MoveableManagerInterface<RotatableProps & SnappableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const {\n            datas,\n            clientX, clientY,\n            parentRotate, parentFlag, isPinch,\n            isRequest,\n        } = e;\n        const state = moveable.state;\n        const {\n            target, left, top,\n            direction, beforeDirection, targetTransform,\n            moveableClientRect,\n            offsetMatrix,\n            targetMatrix,\n            allMatrix,\n            width,\n            height,\n        } = state;\n\n        if (!isRequest && !target) {\n            return false;\n        }\n\n        const rect = moveable.getRect();\n        datas.rect = rect;\n        datas.transform = targetTransform;\n        datas.left = left;\n        datas.top = top;\n        let setFixedDirection: OnRotateStart[\"setFixedDirection\"] = (fixedDirection: number[]) => {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getDirectionOffset(moveable, fixedDirection);\n\n            if (resizeStart) {\n                resizeStart.setFixedDirection(fixedDirection);\n            }\n        };\n        let startClientX = clientX;\n        let startClientY = clientY;\n\n        if (isRequest || isPinch || parentFlag) {\n            const externalRotate = parentRotate || 0;\n\n            datas.beforeInfo = {\n                origin: rect.beforeOrigin,\n                prevDeg: externalRotate,\n                defaultDeg: externalRotate,\n                prevSnapDeg: 0,\n                startDist: 0,\n            };\n            datas.afterInfo = {\n                ...datas.beforeInfo,\n                origin: rect.origin,\n            };\n            datas.absoluteInfo = {\n                ...datas.beforeInfo,\n                origin: rect.origin,\n                startValue: externalRotate,\n            };\n        } else {\n            const inputTarget = e.inputEvent?.target;\n\n            if (inputTarget) {\n                const regionDirection = inputTarget.getAttribute(\"data-direction\") || \"\";\n                const controlDirection = DIRECTION_REGION_TO_DIRECTION[regionDirection];\n\n                if (controlDirection) {\n                    datas.isControl = true;\n                    datas.isAroundControl = hasClass(inputTarget, prefix(\"around-control\"));\n                    datas.controlDirection = controlDirection;\n                    const resolve = inputTarget.getAttribute(\"data-resolve\");\n\n                    if (resolve) {\n                        datas.resolveAble = resolve;\n                    }\n\n                    const clientPoses = calculateMoveableClientPositions(\n                        state.rootMatrix,\n                        state.renderPoses,\n                        moveableClientRect,\n                    );\n\n\n                    [startClientX, startClientY] = getPosByDirection(clientPoses, controlDirection);\n                }\n            }\n\n\n            datas.beforeInfo = { origin: rect.beforeOrigin };\n            datas.afterInfo = { origin: rect.origin };\n            datas.absoluteInfo = {\n                origin: rect.origin,\n                startValue: rect.rotation,\n            };\n\n            const originalFixedDirection = setFixedDirection;\n\n            setFixedDirection = (fixedDirection: number[]) => {\n                const n = state.is3d ? 4 : 3;\n                const originalPosition = getPosByDirection([\n                    [0, 0],\n                    [width, 0],\n                    [0, height],\n                    [width, height],\n                ], fixedDirection);\n                const [originX, originY] = plus(getOrigin(targetMatrix, n), originalPosition);\n                const fixedBeforeOrigin = calculate(\n                    offsetMatrix,\n                    convertPositionMatrix([originX, originY], n),\n                );\n                const fixedAfterOrigin = calculate(\n                    allMatrix,\n                    convertPositionMatrix([originalPosition[0], originalPosition[1]], n),\n                );\n                originalFixedDirection(fixedDirection);\n\n                datas.beforeInfo.origin = fixedBeforeOrigin;\n                datas.afterInfo.origin = fixedAfterOrigin;\n                datas.absoluteInfo.origin = fixedAfterOrigin;\n\n                setRotateStartInfo(moveable, datas.beforeInfo, startClientX, startClientY, moveableClientRect);\n                setRotateStartInfo(moveable, datas.afterInfo, startClientX, startClientY, moveableClientRect);\n                setRotateStartInfo(moveable, datas.absoluteInfo, startClientX, startClientY, moveableClientRect);\n            };\n        }\n\n        datas.startClientX = startClientX;\n        datas.startClientY = startClientY;\n        datas.direction = direction;\n        datas.beforeDirection = beforeDirection;\n        datas.startValue = 0;\n        datas.datas = {};\n\n        setDefaultTransformIndex(e, \"rotate\");\n\n        let dragStart: OnDragStart | false = false;\n        let resizeStart: OnResizeStart | false = false;\n\n\n\n        if (datas.isControl && datas.resolveAble) {\n            const resolveAble = datas.resolveAble;\n\n            if  (resolveAble === \"resizable\") {\n                resizeStart = Resizable.dragControlStart(moveable, {\n                    ...(new CustomGesto(\"resizable\").dragStart([0, 0], e)),\n                    parentDirection: datas.controlDirection,\n                    parentFixedDirection: datas.fixedDirection,\n                });\n            }\n        }\n\n        if (!resizeStart) {\n            dragStart = Draggable.dragStart!(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            );\n        }\n\n        setFixedDirection(getOriginDirection(moveable));\n        const params = fillParams<OnRotateStart>(moveable, e, {\n            set: (rotatation: number) => {\n                datas.startValue = rotatation * Math.PI / 180;\n            },\n            setFixedDirection,\n            ...fillTransformStartEvent(e),\n            dragStart,\n            resizeStart,\n        });\n        const result = triggerEvent(moveable, \"onRotateStart\", params);\n        datas.isRotate = result !== false;\n        state.snapRenderInfo = {\n            request: e.isRequest,\n        };\n\n        return datas.isRotate ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<RotatableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, distX, distY, parentRotate, parentFlag, isPinch, groupDelta } = e;\n        const {\n            beforeDirection,\n            beforeInfo,\n            afterInfo,\n            absoluteInfo,\n            isRotate,\n            startValue,\n            rect,\n            startClientX,\n            startClientY,\n        } = datas;\n\n        if (!isRotate) {\n            return;\n        }\n\n        resolveTransformEvent(e, \"rotate\");\n\n        const targetDirection = getTransformDirection(e);\n        const direction = beforeDirection * targetDirection;\n        const {\n            parentMoveable,\n        } = moveable.props;\n\n\n        let beforeDelta = 0;\n        let beforeDist: number;\n        let beforeRotation: number;\n\n        let delta = 0;\n        let dist: number;\n        let rotation: number;\n\n        let absoluteDelta = 0;\n        let absoluteDist: number;\n        let absoluteRotation: number;\n\n        const startRotation = 180 / Math.PI * startValue;\n        const absoluteStartRotation = absoluteInfo.startValue;\n        let isSnap = false;\n        const nextClientX = startClientX + distX;\n        const nextClientY = startClientY + distY;\n\n        if (!parentFlag && \"parentDist\" in e) {\n            const parentDist = e.parentDist;\n\n            beforeDist = parentDist;\n            dist = parentDist;\n            absoluteDist = parentDist;\n        } else if (isPinch || parentFlag) {\n            beforeDist = getAbsoluteDist(parentRotate, beforeDirection, beforeInfo);\n            dist = getAbsoluteDist(parentRotate, direction, afterInfo);\n            absoluteDist = getAbsoluteDist(parentRotate, direction, absoluteInfo);\n        } else {\n            beforeDist = getAbsoluteDistByClient(nextClientX, nextClientY, beforeDirection, beforeInfo);\n            dist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, afterInfo);\n            absoluteDist = getAbsoluteDistByClient(nextClientX, nextClientY, direction, absoluteInfo);\n            isSnap = true;\n        }\n        beforeRotation = startRotation + beforeDist;\n        rotation = startRotation + dist;\n        absoluteRotation = absoluteStartRotation + absoluteDist;\n\n\n        triggerEvent(moveable, \"onBeforeRotate\", fillParams<OnBeforeRotate>(moveable, e, {\n            beforeRotation,\n            rotation,\n            absoluteRotation,\n            setRotation(nextRotation: number) {\n                dist = nextRotation - startRotation;\n                beforeDist = dist;\n                absoluteDist = dist;\n            },\n        }, true));\n\n        [\n            beforeDelta,\n            beforeDist,\n            beforeRotation,\n        ] = getRotateInfo(moveable, rect, beforeInfo, beforeDist, startRotation, isSnap);\n\n        [\n            delta,\n            dist,\n            rotation,\n        ] = getRotateInfo(moveable, rect, afterInfo, dist, startRotation, isSnap);\n\n        [\n            absoluteDelta,\n            absoluteDist,\n            absoluteRotation,\n        ] = getRotateInfo(moveable, rect, absoluteInfo, absoluteDist, absoluteStartRotation, isSnap);\n\n        if (!absoluteDelta && !delta && !beforeDelta && !parentMoveable) {\n            return;\n        }\n\n        const nextTransform = convertTransformFormat(\n            datas, `rotate(${rotation}deg)`, `rotate(${dist}deg)`,\n        );\n\n        const inverseDist = getRotateDist(moveable, dist, datas);\n        const inverseDelta = minus(\n            plus(groupDelta || [0, 0], inverseDist),\n            datas.prevInverseDist || [0, 0],\n        );\n        datas.prevInverseDist = inverseDist;\n\n        datas.requestValue = null;\n\n        const dragEvent = fillTransformEvent(\n            moveable,\n            nextTransform,\n            inverseDelta,\n            isPinch,\n            e,\n        );\n\n        let transformEvent: TransformObject = dragEvent;\n        const parentDistance = getDist(\n            [nextClientX, nextClientY],\n            absoluteInfo.startAbsoluteOrigin,\n        ) - absoluteInfo.startDist;\n\n        let resize: OnResize | undefined = undefined;\n\n        if (datas.resolveAble === \"resizable\") {\n            const resizeEvent = Resizable.dragControl(\n                moveable,\n                {\n                    ...setCustomDrag(e, moveable.state, [e.deltaX, e.deltaY], !!isPinch, false, \"resizable\"),\n                    resolveMatrix: true,\n                    parentDistance,\n                },\n            );\n\n            if (resizeEvent) {\n                resize = resizeEvent;\n                transformEvent = fillAfterTransform(transformEvent, resizeEvent, e);\n            }\n        }\n\n        const params = fillParams<OnRotate>(moveable, e, {\n            delta,\n            dist,\n            rotate: rotation,\n            rotation,\n\n            beforeDist,\n            beforeDelta,\n            beforeRotate: beforeRotation,\n            beforeRotation,\n\n            absoluteDist,\n            absoluteDelta,\n            absoluteRotate: absoluteRotation,\n            absoluteRotation,\n\n            isPinch: !!isPinch,\n            resize,\n            ...dragEvent,\n            ...transformEvent,\n        });\n        triggerEvent(moveable, \"onRotate\", params);\n\n        return params;\n    },\n    dragControlAfter(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n        const requestValue = e.datas.requestValue;\n\n        if (requestValue != null) {\n            // return this.dragControl(moveable, {...e, parentDist: });\n        }\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n        datas.isRotate = false;\n\n        const params = fillEndParams<OnRotateEnd>(moveable, e, {});\n\n        triggerEvent(moveable, \"onRotateEnd\", params);\n        return params;\n    },\n    dragGroupControlCondition: dragControlCondition as (moveable: any, e: any) => boolean,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const {\n            left: parentLeft,\n            top: parentTop,\n            beforeOrigin: parentBeforeOrigin,\n        } = moveable.state;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        params.set(datas.beforeDirection * moveable.rotation);\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                const { left, top, beforeOrigin } = child.state;\n                const childClient = plus(\n                    minus([left, top], [parentLeft, parentTop]),\n                    minus(beforeOrigin, parentBeforeOrigin),\n                );\n\n                ev.datas.startGroupClient = childClient;\n                ev.datas.groupClient = childClient;\n                return { ...ev, parentRotate: 0 };\n            },\n        );\n\n        const nextParams: OnRotateGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\n\n        datas.isRotate = result !== false;\n\n        return datas.isRotate ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        catchEvent(moveable, \"onBeforeRotate\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeRotateGroup\", fillParams<OnBeforeRotateGroup>(moveable, e, {\n                ...parentEvent,\n                targets: moveable.props.targets!,\n            }, true));\n        });\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const direction = datas.beforeDirection;\n        const parentRotate = params.beforeDist;\n        const rad = parentRotate / 180 * Math.PI;\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const startGroupClient = ev.datas.startGroupClient;\n                const [prevClientX, prevClientY] = ev.datas.groupClient;\n                const [clientX, clientY] = rotateMatrix(startGroupClient, rad * direction);\n                const delta = [clientX - prevClientX, clientY - prevClientY];\n\n                ev.datas.groupClient = [clientX, clientY];\n                return { ...ev, parentRotate, groupDelta: delta };\n            },\n        );\n        moveable.rotation = direction * params.beforeRotation;\n\n        const nextParams: OnRotateGroup = {\n            targets: moveable.props.targets!,\n            events,\n            set(rotation: number) {\n                moveable.rotation = rotation;\n            },\n            setGroupRotation(rotation: number) {\n                moveable.rotation = rotation;\n            },\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onRotateGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnRotateGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Rotatable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.deltaRotate=0] -  delta number of rotation\n     * @param {number} [e.rotate=0] - absolute number of moveable's rotation\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"rotatable\", { deltaRotate: 10 }, true);\n     *\n     * * moveable.request(\"rotatable\", { rotate: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"rotatable\");\n     *\n     * // request\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     *\n     * requester.request({ rotate: 10 });\n     * requester.request({ rotate: 20 });\n     * requester.request({ rotate: 30 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<RotatableProps>) {\n        const datas = {};\n        let distRotate = 0;\n\n        const startRotation = moveable.getRotation();\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaRotate\" in e) {\n                    distRotate += e.deltaRotate;\n                } else if (\"rotate\" in e) {\n                    distRotate = e.rotate - startRotation;\n                }\n\n                return { datas, parentDist: distRotate };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether or not target can be rotated. (default: false)\n * @name Moveable.Rotatable#rotatable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.rotatable = true;\n */\n/**\n * You can specify the position of the rotation. (default: \"top\")\n * @name Moveable.Rotatable#rotationPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   rotationPosition: \"top\",\n * });\n *\n * moveable.rotationPosition = \"bottom\"\n */\n\n/**\n * throttle of angle(degree) when rotate.\n * @name Moveable.Rotatable#throttleRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleRotate = 1;\n */\n\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable.Rotatable\n * @event rotateStart\n * @param {Moveable.Rotatable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n* When rotating, the rotate event is called.\n* @memberof Moveable.Rotatable\n* @event rotate\n* @param {Moveable.Rotatable.OnRotate} - Parameters for the rotate event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { rotatable: true });\n* moveable.on(\"rotate\", ({ target, transform, dist }) => {\n*     target.style.transform = transform;\n* });\n*/\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable.Rotatable\n * @event rotateEnd\n * @param {Moveable.Rotatable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n * When the group rotate starts, the `rotateGroupStart` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupStart\n * @param {Moveable.Rotatable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\n *     console.log(\"onRotateGroupStart\", targets);\n * });\n */\n\n/**\n* When the group rotate, the `rotateGroup` event is called.\n* @memberof Moveable.Rotatable\n* @event rotateGroup\n* @param {Moveable.Rotatable.OnRotateGroup} - Parameters for the `rotateGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     rotatable: true\n* });\n* moveable.on(\"rotateGroup\", ({ targets, events }) => {\n*     console.log(\"onRotateGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group rotate.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const deg = ev.beforeDist;\n*     });\n* });\n*/\n\n/**\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupEnd\n * @param {Moveable.Rotatable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    triggerEvent, multiply2,\n    fillParams, fillEndParams, getAbsolutePosesByState,\n    catchEvent, getOffsetSizeDist, getDirectionCondition, getDirectionViewClassName, getTotalDirection,\n} from \"../utils\";\nimport { MIN_SCALE } from \"../consts\";\nimport {\n    setDragStart, resolveTransformEvent,\n    convertTransformFormat,\n    getScaleDist,\n    fillTransformStartEvent,\n    fillTransformEvent,\n    getAbsolutePosition,\n    setDefaultTransformIndex,\n    getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { getRenderDirections } from \"../renderDirections\";\nimport {\n    ScalableProps, OnScaleGroup, OnScaleGroupEnd,\n    OnScaleGroupStart, DraggableProps, OnDragStart,\n    SnappableState, GroupableProps, OnScaleStart,\n    OnScale, OnScaleEnd, MoveableManagerInterface, MoveableGroupInterface,\n    OnBeforeScaleGroup,\n    OnBeforeScale,\n} from \"../types\";\nimport {\n    fillChildEvents,\n    triggerChildAbles,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { calculate, createRotateMatrix, plus, minus } from \"@scena/matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapScale } from \"./Snappable\";\nimport {\n    isArray, IObject, getDist,\n    throttle,\n} from \"@daybrush/utils\";\n\nconst directionCondition = getDirectionCondition(\"scalable\");\n\n/**\n * @namespace Scalable\n * @memberof Moveable\n * @description Scalable indicates whether the target's x and y can be scale of transform.\n */\nexport default {\n    name: \"scalable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        scalable: Boolean,\n        throttleScale: Number,\n        renderDirections: String,\n        keepRatio: Boolean,\n        edge: Boolean,\n    } as const,\n    events: {\n        onScaleStart: \"scaleStart\",\n        onBeforeScale: \"beforeScale\",\n        onScale: \"scale\",\n        onScaleEnd: \"scaleEnd\",\n        onScaleGroupStart: \"scaleGroupStart\",\n        onBeforeScaleGroup: \"beforeScaleGroup\",\n        onScaleGroup: \"scaleGroup\",\n        onScaleGroupEnd: \"scaleGroupEnd\",\n    } as const,\n    render: getRenderDirections(\"scalable\"),\n    dragControlCondition: directionCondition,\n    viewClassName: getDirectionViewClassName(\"scalable\"),\n    dragControlStart(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const { datas, isPinch, inputEvent, parentDirection } = e;\n\n        const direction = getTotalDirection(\n            parentDirection,\n            isPinch,\n            inputEvent,\n            datas,\n        );\n        const {\n            width,\n            height,\n            targetTransform,\n            target,\n            pos1,\n            pos2,\n            pos4,\n        } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (!isPinch) {\n            setDragStart(moveable, e);\n        }\n        datas.datas = {};\n        datas.transform = targetTransform;\n        datas.prevDist = [1, 1];\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.startValue = [1, 1];\n\n        const scaleWidth = getDist(pos1, pos2);\n        const scaleHeight = getDist(pos2, pos4);\n        const isWidth = (!direction[0] && !direction[1]) || direction[0] || !direction[1];\n\n\n        datas.scaleWidth = scaleWidth;\n        datas.scaleHeight = scaleHeight;\n        datas.scaleXRatio = scaleWidth / width;\n        datas.scaleYRatio = scaleHeight / height;\n\n        setDefaultTransformIndex(e, \"scale\");\n\n\n\n        datas.isWidth = isWidth;\n\n\n        function setRatio(ratio: number) {\n            datas.ratio = ratio && isFinite(ratio) ? ratio : 0;\n        }\n\n        datas.startPositions = getAbsolutePosesByState(moveable.state);\n        function setFixedDirection(fixedDirection: number[]) {\n            datas.fixedDirection = fixedDirection;\n            datas.fixedPosition = getPosByDirection(datas.startPositions, fixedDirection);\n        }\n\n\n        datas.setFixedDirection = setFixedDirection;\n        setRatio(getDist(pos1, pos2) / getDist(pos2, pos4));\n        setFixedDirection([-direction[0], -direction[1]]);\n\n        const params = fillParams<OnScaleStart>(moveable, e, {\n            direction,\n            set: (scale: number[]) => {\n                datas.startValue = scale;\n            },\n            setRatio,\n            setFixedDirection,\n            ...fillTransformStartEvent(e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart,\n        });\n        const result = triggerEvent(moveable, \"onScaleStart\", params);\n\n        datas.startFixedDirection = datas.fixedDirection;\n\n        if (result !== false) {\n            datas.isScale = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n\n        }\n        return datas.isScale ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps & GroupableProps, SnappableState>,\n        e: any) {\n        resolveTransformEvent(e, \"scale\");\n        const {\n            datas,\n            parentKeepRatio,\n            parentFlag, isPinch,\n            dragClient,\n            isRequest,\n        } = e;\n        const {\n            prevDist,\n            direction,\n            startOffsetWidth,\n            startOffsetHeight,\n            isScale,\n            startValue,\n            isWidth,\n            ratio,\n        } = datas;\n\n        if (!isScale) {\n            return false;\n        }\n\n        const props = moveable.props;\n        const {\n            throttleScale,\n            parentMoveable,\n        } = props;\n        let sizeDirection = direction;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = (ratio && (parentKeepRatio != null ? parentKeepRatio : props.keepRatio)) || false;\n        const state = moveable.state;\n\n        function getNextScale() {\n            const {\n                distWidth,\n                distHeight,\n            } = getOffsetSizeDist(sizeDirection, keepRatio, datas, e);\n\n\n            let scaleX = (startOffsetWidth + distWidth) / startOffsetWidth;\n            let scaleY = (startOffsetHeight + distHeight) / startOffsetHeight;\n\n            scaleX = sizeDirection[0] || keepRatio ? scaleX * startValue[0] : startValue[0];\n            scaleY = sizeDirection[1] || keepRatio ? scaleY * startValue[1] : startValue[1];\n\n            if (scaleX === 0) {\n                scaleX = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n            }\n            if (scaleY === 0) {\n                scaleY = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n            }\n            return [scaleX, scaleY];\n        }\n\n\n        let scale = getNextScale();\n\n        if (!isPinch && moveable.props.groupable) {\n            const snapRenderInfo = state.snapRenderInfo || {};\n            const stateDirection = snapRenderInfo.direction;\n\n            if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\n                state.snapRenderInfo = { direction, request: e.isRequest };\n            }\n        }\n\n        triggerEvent(moveable, \"onBeforeScale\", fillParams<OnBeforeScale>(moveable, e, {\n            scale,\n            setFixedDirection(nextFixedDirection: number[]) {\n                datas.setFixedDirection(nextFixedDirection);\n\n                scale = getNextScale();\n\n                return scale;\n            },\n            startFixedDirection: datas.startFixedDirection,\n            setScale(nextScale: number[]) {\n                scale = nextScale;\n            },\n        }, true));\n\n        const dist = [scale[0] / startValue[0], scale[1] / startValue[1]];\n        let fixedPosition = dragClient;\n        let snapDist = [0, 0];\n\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsolutePosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n        if (!isPinch) {\n            snapDist = checkSnapScale(\n                moveable,\n                dist,\n                direction,\n                isRequest,\n                datas,\n            );\n        }\n\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0] * startOffsetWidth) > Math.abs(snapDist[1] * startOffsetHeight)) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n                } else {\n                    dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n                }\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                dist[0] += snapDist[0];\n                const snapHeight = startOffsetWidth * dist[0] * startValue[0] / ratio;\n\n                dist[1] = snapHeight / startOffsetHeight / startValue[1];\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                dist[1] += snapDist[1];\n                const snapWidth = startOffsetHeight * dist[1] * startValue[1] * ratio;\n\n                dist[0] = snapWidth / startOffsetWidth / startValue[0];\n            }\n        } else {\n            dist[0] += snapDist[0];\n            dist[1] += snapDist[1];\n            if (!snapDist[0]) {\n                dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n            }\n            if (!snapDist[1]) {\n                dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n            }\n        }\n\n        if (dist[0] === 0) {\n            dist[0] = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (dist[1] === 0) {\n            dist[1] = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        const delta = [dist[0] / prevDist[0], dist[1] / prevDist[1]];\n        scale = multiply2(dist, startValue);\n\n        const inverseDist = getScaleDist(moveable, dist, datas.fixedDirection, fixedPosition, datas);\n        const inverseDelta = minus(inverseDist, datas.prevInverseDist || [0, 0]);\n\n        datas.prevDist = dist;\n        datas.prevInverseDist = inverseDist;\n        if (\n            scale[0] === prevDist[0] && scale[1] === prevDist[1]\n            && inverseDelta.every(num => !num)\n            && !parentMoveable\n        ) {\n            return false;\n        }\n\n\n        const nextTransform = convertTransformFormat(\n            datas, `scale(${scale.join(\", \")})`, `scale(${dist.join(\", \")})`);\n        const params = fillParams<OnScale>(moveable, e, {\n            offsetWidth: startOffsetWidth,\n            offsetHeight: startOffsetHeight,\n            direction,\n\n            scale,\n            dist,\n            delta,\n\n            isPinch: !!isPinch,\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onScale\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScalableProps>, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return false;\n        }\n\n        datas.isScale = false;\n\n        const scaleEndParam = fillEndParams<OnScaleEnd>(moveable, e, {});\n        triggerEvent(moveable, \"onScaleEnd\", scaleEndParam);\n        return scaleEndParam;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const originalEvents = fillChildEvents(moveable, \"resizable\", e);\n\n        function setDist(child: MoveableManagerInterface, ev: any) {\n            const fixedDirection = datas.fixedDirection;\n            const fixedPosition = datas.fixedPosition;\n            const startPositions = ev.datas.startPositions || getAbsolutePosesByState(child.state);\n            const pos = getPosByDirection(startPositions, fixedDirection);\n            const [originalX, originalY] = calculate(\n                createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                3,\n            );\n            ev.datas.originalX = originalX;\n            ev.datas.originalY = originalY;\n\n            return ev;\n        }\n\n        datas.moveableScale = moveable.scale;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                return setDist(child, ev);\n            },\n        );\n\n        const setFixedDirection = (fixedDirection: number[]) => {\n            params.setFixedDirection(fixedDirection);\n            events.forEach((ev, i) => {\n                ev.setFixedDirection(fixedDirection);\n                setDist(ev.moveable, originalEvents[i]);\n            });\n        };\n\n        datas.setFixedDirection = setFixedDirection;\n        const nextParams: OnScaleGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n            setFixedDirection,\n        };\n        const result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\n\n        datas.isScale = result !== false;\n        return datas.isScale ? nextParams : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return;\n        }\n\n        catchEvent(moveable, \"onBeforeScale\", parentEvent => {\n            triggerEvent(moveable, \"onBeforeScaleGroup\", fillParams<OnBeforeScaleGroup>(moveable, e, {\n                ...parentEvent,\n                targets: moveable.props.targets!,\n            }, true));\n        });\n\n        const params = this.dragControl(moveable, e);\n        if (!params) {\n            return;\n        }\n\n        const moveableScale = datas.moveableScale;\n        moveable.scale = [\n            params.scale[0] * moveableScale[0],\n            params.scale[1] * moveableScale[1],\n        ];\n        const keepRatio = moveable.props.keepRatio;\n        const { dist, scale } = params;\n\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAbles(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = calculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * dist[0],\n                        ev.datas.originalY * dist[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale: scale,\n                    parentKeepRatio: keepRatio,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                };\n            },\n        );\n        const nextParams: OnScaleGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onScaleGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isScale) {\n            return;\n        }\n        this.dragControlEnd(moveable, e);\n        const events = triggerChildAbles(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnScaleGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n            events,\n        });\n\n        triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Scalable#request\n     * @param {Moveable.Scalable.ScalableRequestParam} e - the Scalable's request parameter\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"scalable\");\n     *\n     * // request\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request() {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                distWidth += e.deltaWidth;\n                distHeight += e.deltaHeight;\n\n                return { datas, parentDist: [distWidth, distHeight], parentKeepRatio: e.keepRatio };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can scaled.\n *\n * @name Moveable.Scalable#scalable\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.scalable = true;\n */\n\n/**\n * throttle of scaleX, scaleY when scale.\n * @name Moveable.Scalable#throttleScale\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleScale = 0.1;\n */\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Scalable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Scalable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable.Scalable\n * @event scaleStart\n * @param {Moveable.Scalable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When scaling, `beforeScale` is called before `scale` occurs. In `beforeScale`, you can get and set the pre-value before scaling.\n * @memberof Moveable.Scalable\n * @event beforeScale\n * @param {Moveable.Scalable.OnBeforeScale} - Parameters for the `beforeScale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"beforeScale\", ({ setFixedDirection }) => {\n *     if (shiftKey) {\n *        setFixedDirection([0, 0]);\n *     }\n * });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n\n/**\n * When scaling, the `scale` event is called.\n * @memberof Moveable.Scalable\n * @event scale\n * @param {Moveable.Scalable.OnScale} - Parameters for the `scale` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the scale finishes, the `scaleEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleEnd\n * @param {Moveable.Scalable.OnScaleEnd} - Parameters for the `scaleEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group scale starts, the `scaleGroupStart` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroupStart\n* @param {Moveable.Scalable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroupStart\", ({ targets }) => {\n*     console.log(\"onScaleGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group scale, the `scaleGroup` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroup\n* @param {Moveable.Scalable.OnScaleGroup} - Parameters for the `scaleGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroup\", ({ targets, events }) => {\n*     console.log(\"onScaleGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group scale.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const scaleX = ev.scale[0];\n*         const scaleY = ev.scale[1];\n*     });\n* });\n*/\n\n/**\n * When the group scale finishes, the `scaleGroupEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleGroupEnd\n * @param {Moveable.Scalable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    prefix, getLineStyle, getDirection, getAbsolutePosesByState,\n    triggerEvent, fillParams, fillEndParams, getDirectionViewClassName,\n} from \"../utils\";\nimport {\n    convertDimension, invert, multiply,\n    calculate,\n    createIdentityMatrix,\n    ignoreDimension,\n    minus,\n    createWarpMatrix,\n    plus,\n} from \"@scena/matrix\";\nimport { NEARBY_POS } from \"../consts\";\nimport {\n    setDragStart, getDragDist, getPosIndexesByDirection, setDefaultTransformIndex,\n    fillTransformStartEvent, resolveTransformEvent,\n    convertTransformFormat, fillOriginalTransform, getTransfromMatrix,\n} from \"../gesto/GestoUtils\";\nimport {\n    WarpableProps, ScalableProps, ResizableProps,\n    Renderer, SnappableProps, SnappableState,\n    OnWarpStart, OnWarp, OnWarpEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { hasClass, dot, getRad } from \"@daybrush/utils\";\nimport { renderAllDirections } from \"../renderDirections\";\nimport { hasGuidelines } from \"./snappable/utils\";\nimport { checkMoveableSnapBounds } from \"./snappable/snapBounds\";\n\nfunction getMiddleLinePos(pos1: number[], pos2: number[]) {\n    return pos1.map((pos, i) => dot(pos, pos2[i], 1, 2));\n}\n\nfunction getTriangleRad(pos1: number[], pos2: number[], pos3: number[]) {\n    // pos1 Rad\n    const rad1 = getRad(pos1, pos2);\n    const rad2 = getRad(pos1, pos3);\n\n    const rad = rad2 - rad1;\n\n    return rad >= 0 ? rad : rad + 2 * Math.PI;\n}\n\nfunction isValidPos(poses1: number[][], poses2: number[][]) {\n    const rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\n    const rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\n    const pi = Math.PI;\n\n    if ((rad1 >= pi && rad2 <= pi) || (rad1 <= pi && rad2 >= pi)) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * @namespace Moveable.Warpable\n * @description Warpable indicates whether the target can be warped(distorted, bented).\n */\nexport default {\n    name: \"warpable\",\n    ableGroup: \"size\",\n    props: {\n        warpable: Boolean,\n        renderDirections: Array,\n        edge: Boolean,\n    } as const,\n    events: {\n        onWarpStart: \"warpStart\",\n        onWarp: \"warp\",\n        onWarpEnd: \"warpEnd\",\n    } as const,\n    viewClassName: getDirectionViewClassName(\"warpable\"),\n    render(moveable: MoveableManagerInterface<ResizableProps & ScalableProps & WarpableProps>, React: Renderer): any[] {\n        const { resizable, scalable, warpable, zoom } = moveable.props;\n\n        if (resizable || scalable || !warpable) {\n            return [];\n        }\n        const { pos1, pos2, pos3, pos4 } = moveable.state;\n\n        const linePosFrom1 = getMiddleLinePos(pos1, pos2);\n        const linePosFrom2 = getMiddleLinePos(pos2, pos1);\n        const linePosFrom3 = getMiddleLinePos(pos1, pos3);\n        const linePosFrom4 = getMiddleLinePos(pos3, pos1);\n        const linePosTo1 = getMiddleLinePos(pos3, pos4);\n        const linePosTo2 = getMiddleLinePos(pos4, pos3);\n        const linePosTo3 = getMiddleLinePos(pos2, pos4);\n        const linePosTo4 = getMiddleLinePos(pos4, pos2);\n\n        return [\n            <div className={prefix(\"line\")}\n                key=\"middeLine1\" style={getLineStyle(linePosFrom1, linePosTo1, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine2\" style={getLineStyle(linePosFrom2, linePosTo2, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine3\" style={getLineStyle(linePosFrom3, linePosTo3, zoom)}></div>,\n            <div className={prefix(\"line\")}\n                key=\"middeLine4\" style={getLineStyle(linePosFrom4, linePosTo4, zoom)}></div>,\n            ...renderAllDirections(moveable, \"warpable\", React),\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (e.isRequest) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"warpable\"));\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<WarpableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, inputEvent } = e;\n        const { target } = moveable.props;\n        const { target: inputTarget } = inputEvent;\n        const direction = getDirection(inputTarget, datas);\n\n        if (!direction || !target) {\n            return false;\n        }\n        const state = moveable.state;\n        const {\n            transformOrigin, is3d,\n            targetTransform, targetMatrix,\n            width, height,\n            left, top,\n        } = state;\n\n        datas.datas = {};\n        datas.targetTransform = targetTransform;\n        datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\n        datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\n        datas.direction = direction;\n        datas.left = left;\n        datas.top = top;\n        datas.poses = [\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n        ].map(p => minus(p, transformOrigin));\n\n        datas.nextPoses = datas.poses.map(([x, y]: number[]) => calculate(datas.warpTargetMatrix, [x, y, 0, 1], 4));\n        datas.startValue = createIdentityMatrix(4);\n        datas.prevMatrix = createIdentityMatrix(4);\n        datas.absolutePoses = getAbsolutePosesByState(state);\n        datas.posIndexes = getPosIndexesByDirection(direction);\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e, \"matrix3d\");\n\n        state.snapRenderInfo = {\n            request: e.isRequest,\n            direction,\n        };\n\n        const params = fillParams<OnWarpStart>(moveable, e, {\n            set: (matrix: number[]) => {\n                datas.startValue = matrix;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = triggerEvent(moveable, \"onWarpStart\", params);\n        if (result !== false) {\n            datas.isWarp = true;\n        }\n        return datas.isWarp;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<WarpableProps & SnappableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, isRequest } = e;\n        let { distX, distY } = e;\n        const {\n            targetInverseMatrix, prevMatrix, isWarp, startValue,\n            poses,\n            posIndexes,\n            absolutePoses,\n        } = datas;\n\n        if (!isWarp) {\n            return false;\n        }\n        resolveTransformEvent(e, \"matrix3d\");\n        if (hasGuidelines(moveable, \"warpable\")) {\n            const selectedPoses: number[][] = posIndexes.map((index: number) => absolutePoses[index]);\n\n            if (selectedPoses.length > 1) {\n                selectedPoses.push([\n                    (selectedPoses[0][0] + selectedPoses[1][0]) / 2,\n                    (selectedPoses[0][1] + selectedPoses[1][1]) / 2,\n                ]);\n            }\n\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkMoveableSnapBounds(\n                moveable,\n                isRequest,\n                {\n                    horizontal: selectedPoses.map(pos => pos[1] + distY),\n                    vertical: selectedPoses.map(pos => pos[0] + distX),\n                },\n            );\n\n            distY -= horizontalSnapInfo.offset;\n            distX -= verticalSnapInfo.offset;\n        }\n\n        const dist = getDragDist({ datas, distX, distY }, true);\n        const nextPoses = datas.nextPoses.slice();\n\n        posIndexes.forEach((index: number) => {\n            nextPoses[index] = plus(nextPoses[index], dist);\n        });\n\n        if (!NEARBY_POS.every(\n            nearByPoses => isValidPos(nearByPoses.map(i => poses[i]), nearByPoses.map(i => nextPoses[i])),\n        )) {\n            return false;\n        }\n        const h = createWarpMatrix(\n            poses[0],\n            poses[2],\n            poses[1],\n            poses[3],\n            nextPoses[0],\n            nextPoses[2],\n            nextPoses[1],\n            nextPoses[3],\n        );\n\n        if (!h.length) {\n            return false;\n        }\n        // B * A * M\n        const afterMatrix = multiply(targetInverseMatrix, h, 4);\n\n        // B * M * A\n        const matrix = getTransfromMatrix(datas, afterMatrix, true);\n\n        const delta = multiply(invert(prevMatrix, 4), matrix, 4);\n\n        datas.prevMatrix = matrix;\n        const totalMatrix = multiply(startValue, matrix, 4);\n        const nextTransform = convertTransformFormat(\n            datas, `matrix3d(${totalMatrix.join(\", \")})`, `matrix3d(${matrix.join(\", \")})`);\n\n        fillOriginalTransform(e, nextTransform);\n        triggerEvent(moveable, \"onWarp\", fillParams<OnWarp>(moveable, e, {\n            delta,\n            matrix: totalMatrix,\n            dist: matrix,\n            multiply,\n            transform: nextTransform,\n        }));\n        return true;\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<WarpableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isWarp) {\n            return false;\n        }\n        datas.isWarp = false;\n\n        triggerEvent(moveable, \"onWarpEnd\", fillEndParams<OnWarpEnd>(moveable, e, {}));\n        return isDrag;\n    },\n};\n\n/**\n * Whether or not target can be warped. (default: false)\n * @name Moveable.Warpable#warpable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.warpable = true;\n */\n\n/**\n* Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n* @name Moveable.Warpable#renderDirections\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     warpable: true,\n*     renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n* });\n*\n* moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n*/\n/**\n* When the warp starts, the warpStart event is called.\n* @memberof Moveable.Warpable\n* @event warpStart\n* @param {Moveable.Warpable.OnWarpStart} - Parameters for the warpStart event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { warpable: true });\n* moveable.on(\"warpStart\", ({ target }) => {\n*     console.log(target);\n* });\n*/\n/**\n * When warping, the warp event is called.\n * @memberof Moveable.Warpable\n * @event warp\n * @param {Moveable.Warpable.OnWarp} - Parameters for the warp event\n * @example\n * import Moveable from \"moveable\";\n * let matrix = [\n *  1, 0, 0, 0,\n *  0, 1, 0, 0,\n *  0, 0, 1, 0,\n *  0, 0, 0, 1,\n * ];\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\n *    // target.style.transform = transform;\n *    matrix = multiply(matrix, delta);\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\n * });\n */\n/**\n * When the warp finishes, the warpEnd event is called.\n * @memberof Moveable.Warpable\n * @event warpEnd\n * @param {Moveable.Warpable.OnWarpEnd} - Parameters for the warpEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n","import { prefix } from \"./utils\";\n\nexport const AREA_PIECES = /*#__PURE__*/prefix(\"area-pieces\");\nexport const AREA_PIECE = /*#__PURE__*/prefix(\"area-piece\");\nexport const AVOID = /*#__PURE__*/prefix(\"avoid\");\nexport const VIEW_DRAGGING = prefix(\"view-dragging\");\n","import {\n    createWarpMatrix,\n} from \"@scena/matrix\";\nimport { ref } from \"framework-utils\";\nimport { getRect, calculateInversePosition, makeMatrixCSS, prefix } from \"../utils\";\nimport {\n    Renderer, GroupableProps, DragAreaProps, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { AREA_PIECE, AVOID, AREA_PIECES } from \"../classNames\";\nimport { addClass, removeClass, requestAnimationFrame } from \"@daybrush/utils\";\n\nfunction restoreStyle(moveable: MoveableManagerInterface) {\n    const el = moveable.areaElement;\n\n    if (!el) {\n        return;\n    }\n    const { width, height } = moveable.state;\n\n    removeClass(el, AVOID);\n\n    el.style.cssText += `left: 0px; top: 0px; width: ${width}px; height: ${height}px`;\n}\n\nfunction renderPieces(React: Renderer): any {\n    return (<div key=\"area_pieces\" className={AREA_PIECES}>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n    </div>);\n}\nexport default {\n    name: \"dragArea\",\n    props: {\n        dragArea: Boolean,\n        passDragArea: Boolean,\n    } as const,\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    render(moveable: MoveableManagerInterface<GroupableProps>, React: Renderer): any[] {\n        const { target, dragArea, groupable, passDragArea } = moveable.props;\n        const { width, height, renderPoses } = moveable.getState();\n\n        const className = passDragArea ? prefix(\"area\", \"pass\") : prefix(\"area\");\n        if (groupable) {\n            return [\n                <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className}></div>,\n                renderPieces(React),\n            ];\n        }\n        if (!target || !dragArea) {\n            return [];\n        }\n        const h = createWarpMatrix(\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n            renderPoses[0],\n            renderPoses[1],\n            renderPoses[2],\n            renderPoses[3],\n        );\n        const transform = h.length ? makeMatrixCSS(h, true) : \"none\";\n\n        return [\n            <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className} style={{\n                top: \"0px\",\n                left: \"0px\",\n                width: `${width}px`,\n                height: `${height}px`,\n                transformOrigin: \"0 0\",\n                transform,\n            }}></div>,\n            renderPieces(React),\n        ];\n    },\n    dragStart(moveable: MoveableManagerInterface, { datas, clientX, clientY, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        datas.isDragArea = false;\n        const areaElement = moveable.areaElement;\n        const state = moveable.state;\n        const {\n            moveableClientRect,\n            renderPoses,\n            rootMatrix,\n            is3d,\n        } = state;\n        const { left, top } = moveableClientRect;\n        const {\n            left: relativeLeft,\n            top: relativeTop,\n            width,\n            height,\n        } = getRect(renderPoses);\n        const n = is3d ? 4 : 3;\n        let [posX, posY] = calculateInversePosition(rootMatrix, [clientX - left, clientY - top], n);\n\n        posX -= relativeLeft;\n        posY -= relativeTop;\n        const rects = [\n            { left: relativeLeft, top: relativeTop, width, height: posY - 10 },\n            { left: relativeLeft, top: relativeTop, width: posX - 10, height },\n            { left: relativeLeft, top: relativeTop + posY + 10, width, height: height - posY - 10 },\n            { left: relativeLeft + posX + 10, top: relativeTop, width: width - posX - 10, height },\n        ];\n\n        const children = [].slice.call(areaElement.nextElementSibling!.children) as HTMLElement[];\n        rects.forEach((rect, i) => {\n            children[i].style.cssText\n                = `left: ${rect.left}px;top: ${rect.top}px; width: ${rect.width}px; height: ${rect.height}px;`;\n        });\n        addClass(areaElement, AVOID);\n        state.disableNativeEvent = true;\n        return;\n    },\n    drag(moveable: MoveableManagerInterface, { datas, inputEvent }: any) {\n        this.enableNativeEvent(moveable);\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            datas.isDragArea = true;\n            restoreStyle(moveable);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<DragAreaProps>, e: any) {\n        this.enableNativeEvent(moveable);\n        const { inputEvent, datas } = e;\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            restoreStyle(moveable);\n        }\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<DragAreaProps>,\n        e: any,\n    ) {\n        return this.dragEnd(moveable, e);\n    },\n    unset(moveable: MoveableManagerInterface<DragAreaProps>) {\n        restoreStyle(moveable);\n        moveable.state.disableNativeEvent = false;\n    },\n    enableNativeEvent(moveable: MoveableManagerInterface<DragAreaProps>) {\n        const state = moveable.state;\n        if (state.disableNativeEvent) {\n            requestAnimationFrame(() => {\n                state.disableNativeEvent = false;\n            });\n        }\n    },\n};\n\n/**\n * Add an event to the moveable area instead of the target for stopPropagation. (default: false, true in group)\n * @name Moveable#dragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n/**\n * Set `pointerEvents: none;` css to pass events in dragArea. (default: false)\n * @name Moveable#passDragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n","import { prefix, getControlTransform } from \"../utils\";\nimport { Renderer, OriginOptions, MoveableManagerInterface } from \"../types\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"origin\", {\n    render(moveable: MoveableManagerInterface<OriginOptions>, React: Renderer): any[] {\n        const { zoom } = moveable.props;\n        const { beforeOrigin, rotation } = moveable.getState();\n\n        return [\n            <div className={prefix(\"control\", \"origin\")}\n                style={getControlTransform(rotation, zoom!, beforeOrigin)} key=\"beforeOrigin\"></div>,\n        ];\n    },\n});\n\n/**\n * Whether or not the origin controlbox will be visible or not (default: true)\n * @name Moveable#origin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.origin = true;\n */\n","\nimport { ScrollableProps, OnScroll, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { triggerEvent, fillParams, getRefTarget } from \"../utils\";\nimport DragScroll from \"@scena/dragscroll\";\n\nfunction getDefaultScrollPosition(e: { scrollContainer: HTMLElement, direction: number[] }) {\n    const scrollContainer = e.scrollContainer;\n\n    return [\n        scrollContainer.scrollLeft,\n        scrollContainer.scrollTop,\n    ];\n}\n/**\n * @namespace Moveable.Scrollable\n * @description Whether or not target can be scrolled to the scroll container (default: false)\n */\nexport default {\n    name: \"scrollable\",\n    canPinch: true,\n    props: {\n        scrollable: Boolean,\n        scrollContainer: Object,\n        scrollThreshold: Number,\n        getScrollPosition: Function,\n    } as const,\n    events: {\n        onScroll: \"scroll\",\n        onScrollGroup: \"scrollGroup\",\n    } as const,\n    dragRelation: \"strong\",\n    dragStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const props = moveable.props;\n        const {\n            scrollContainer = moveable.getContainer() as HTMLElement,\n        } = props;\n\n        const dragScroll = new DragScroll();\n        const scrollContainerElement = getRefTarget<HTMLElement>(scrollContainer, true);\n\n        e.datas.dragScroll = dragScroll;\n\n        const gestoName = e.isControl ? \"controlGesto\" : \"targetGesto\";\n        const targets = e.targets;\n\n        dragScroll.on(\"scroll\", ({ container, direction }) => {\n            const params = fillParams<OnScroll>(moveable, e, {\n                scrollContainer: container,\n                direction,\n            }) as any;\n\n            const eventName = targets ? \"onScrollGroup\" : \"onScroll\" as any;\n            if (targets) {\n                params.targets = targets;\n            }\n            triggerEvent(moveable, eventName, params);\n        }).on(\"move\", ({ offsetX, offsetY }) => {\n            moveable[gestoName].scrollBy(offsetX, offsetY, e.inputEvent, false);\n        });\n        dragScroll.dragStart(e, {\n            container: scrollContainerElement!,\n        });\n    },\n    checkScroll(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const {\n            dragScroll,\n        } = e.datas;\n        if (!dragScroll) {\n            return;\n        }\n        const {\n            scrollContainer = moveable.getContainer(),\n            scrollThreshold = 0,\n            getScrollPosition = getDefaultScrollPosition,\n        } = moveable.props;\n\n        dragScroll.drag(e, {\n            container: scrollContainer,\n            threshold: scrollThreshold,\n            getScrollPosition: (ev: any) => {\n                return getScrollPosition({ scrollContainer: ev.container, direction: ev.direction });\n            },\n        });\n\n        return true;\n    },\n    drag(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.checkScroll(moveable, e);\n    },\n    dragEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        e.datas.dragScroll.dragEnd();\n        e.datas.dragScroll = null;\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragStart(moveable, { ...e, isControl: true });\n    },\n    dragControl(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets, isControl: true });\n    },\n    dragGroupContro(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n};\n\n/**\n * Whether or not target can be scrolled to the scroll container (default: false)\n * @name Moveable.Scrollable#scrollable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n * moveable.scrollable = true;\n */\n\n/**\n * The container to which scroll is applied (default: container)\n * @name Moveable.Scrollable#scrollContainer\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n/**\n * Expand the range of the scroll check area. (default: 0)\n * @name Moveable.Scrollable#scrollThreshold\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n\n/**\n * Sets a function to get the scroll position. (default: Function)\n * @name Moveable.Scrollable#getScrollPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scroll` event occur to scroll.\n * @memberof Moveable.Scrollable\n * @event scroll\n * @param {Moveable.Scrollable.OnScroll} - Parameters for the `scroll` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scrollGroup` event occur to scroll in group.\n * @memberof Moveable.Scrollable\n * @event scrollGroup\n * @param {Moveable.Scrollable.OnScrollGroup} - Parameters for the `scrollGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n","export default {\n    name: \"\",\n    props: {\n        target: Object,\n        dragTarget: Object,\n        container: Object,\n        portalContainer: Object,\n        rootContainer: Object,\n        useResizeObserver: Boolean,\n        zoom: Number,\n        transformOrigin: Array,\n        edge: Object,\n        ables: Array,\n        className: String,\n        pinchThreshold: Number,\n        pinchOutside: Boolean,\n        triggerAblesSimultaneously: Boolean,\n        checkInput: Boolean,\n        cspNonce: String,\n        translateZ: Number,\n        hideDefaultLines: Boolean,\n        props: Object,\n        flushSync: Function,\n        stopPropagation: Boolean,\n        preventClickEventOnDrag: Boolean,\n        preventClickDefault: Boolean,\n        viewContainer: Object,\n    } as const,\n    events: {} as const,\n};\n","import { prefix, makeMatrixCSS } from \"../utils\";\nimport { Renderer, MoveableManagerInterface } from \"../types\";\nimport { createWarpMatrix } from \"@scena/matrix\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"padding\", {\n    render(moveable: MoveableManagerInterface, React: Renderer): any[] {\n        const props = moveable.props;\n        if (props.dragArea) {\n            return [];\n        }\n        const padding = props.padding || {};\n        const {\n            left = 0,\n            top = 0,\n            right = 0,\n            bottom = 0,\n        } = padding;\n        const {\n            renderPoses,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        } = moveable.getState();\n\n        const poses = [pos1, pos2, pos3, pos4];\n        const paddingDirections: number[][] = [];\n\n        if (left > 0) {\n            paddingDirections.push([0, 2]);\n        }\n        if (top > 0) {\n            paddingDirections.push([0, 1]);\n        }\n        if (right > 0) {\n            paddingDirections.push([1, 3]);\n        }\n        if (bottom > 0) {\n            paddingDirections.push([2, 3]);\n        }\n        return paddingDirections.map(([dir1, dir2], i) => {\n            const paddingPos1 = poses[dir1];\n            const paddingPos2 = poses[dir2];\n            const paddingPos3 = renderPoses[dir1];\n            const paddingPos4 = renderPoses[dir2];\n\n            const h = createWarpMatrix(\n                [0, 0],\n                [100, 0],\n                [0, 100],\n                [100, 100],\n                paddingPos1,\n                paddingPos2,\n                paddingPos3,\n                paddingPos4,\n            );\n            if (!h.length) {\n                return undefined;\n            }\n            return (<div key={`padding${i}`} className={prefix(\"padding\")} style={{\n                transform: makeMatrixCSS(h, true),\n            }}></div>);\n        });\n    },\n});\n\n/**\n * Add padding around the target to increase the drag area.\n * @name Moveable#padding\n * @default null\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  target: document.querySelector(\".target\"),\n *  padding: { left: 0, top: 0, right: 0, bottom: 0 },\n * });\n * moveable.padding = { left: 10, top: 10, right: 10, bottom: 10 },\n * moveable.updateRect();\n */\n","import { convertCSSSize } from \"../../utils\";\nimport { ControlPose } from \"../../types\";\nimport { convertUnitSize } from \"@daybrush/utils\";\n\nconst RADIUS_DIRECTIONS = [\"nw\", \"ne\", \"se\", \"sw\"] as const;\n\nfunction calculateRatio(values: number[], size: number) {\n    const sumSize = values[0] + values[1];\n    const sumRatio = sumSize > size ? size / sumSize : 1;\n\n    values[0] *= sumRatio;\n    values[1] = size - values[1] * sumRatio;\n\n    return values;\n}\nexport const HORIZONTAL_RADIUS_ORDER = [1, 2, 5, 6];\nexport const VERTICAL_RADIUS_ORDER = [0, 3, 4, 7];\nexport const HORIZONTAL_RADIUS_DIRECTIONS = [1, -1, -1, 1] as const;\nexport const VERTICAL_RADIUS_DIRECTIONS = [1, 1, -1, -1] as const;\n\nexport function getRadiusStyles(\n    nextPoses: ControlPose[],\n    isRelative: boolean,\n    width: number,\n    height: number,\n    left = 0,\n    top = 0,\n    right: number = width,\n    bottom: number = height,\n) {\n    const clipStyles: string[] = [];\n    let isVertical = false;\n\n    const radiusPoses = nextPoses.filter(pos => !pos.virtual);\n    const raws = radiusPoses.map(posInfo => {\n        const { horizontal, vertical, pos } = posInfo;\n\n        if (vertical && !isVertical) {\n            isVertical = true;\n            clipStyles.push(\"/\");\n        }\n\n        if (isVertical) {\n            const rawPos = Math.max(0, vertical === 1 ? pos[1] - top : bottom - pos[1]);\n            clipStyles.push(convertCSSSize(rawPos, height, isRelative));\n\n            return rawPos;\n        } else {\n            const rawPos = Math.max(0, horizontal === 1 ? pos[0] - left : right - pos[0]);\n            clipStyles.push(convertCSSSize(rawPos, width, isRelative));\n\n            return rawPos;\n        }\n    });\n\n    return {\n        radiusPoses,\n        styles: clipStyles,\n        raws,\n    };\n}\nexport function getRadiusRange(controlPoses: ControlPose[]) {\n    // [start, length]\n    const horizontalRange = [0, 0];\n    const verticalRange = [0, 0];\n    const length = controlPoses.length;\n\n    for (let i = 0; i < length; ++i) {\n        const clipPose = controlPoses[i];\n\n        if (!clipPose.sub) {\n            continue;\n        }\n        if (clipPose.horizontal) {\n            if (horizontalRange[1] === 0) {\n                horizontalRange[0] = i;\n            }\n            horizontalRange[1] = i - horizontalRange[0] + 1;\n            verticalRange[0] = i + 1;\n        }\n        if (clipPose.vertical) {\n            if (verticalRange[1] === 0) {\n                verticalRange[0] = i;\n            }\n            verticalRange[1] = i - verticalRange[0] + 1;\n        }\n    }\n\n    return {\n        horizontalRange,\n        verticalRange,\n    };\n}\nexport function getRadiusValues(\n    values: string[],\n    width: number,\n    height: number,\n    left: number,\n    top: number,\n    minCounts: number[] = [0, 0],\n    full = false,\n): ControlPose[] {\n    const splitIndex = values.indexOf(\"/\");\n    const splitLength = (splitIndex > -1 ? values.slice(0, splitIndex) : values).length;\n    const horizontalValues = values.slice(0, splitLength);\n    const verticalValues = values.slice(splitLength + 1);\n    const horizontalValuesLength = horizontalValues.length;\n    const verticalValuesLength = verticalValues.length;\n    const hasVerticalValues = verticalValuesLength > 0;\n    const [\n        nwValue = \"0px\",\n        neValue = nwValue,\n        seValue = nwValue,\n        swValue = neValue,\n    ] = horizontalValues;\n    const [\n        wnValue = nwValue,\n        enValue = hasVerticalValues ? wnValue : neValue,\n        esValue = hasVerticalValues ? wnValue : seValue,\n        wsValue = hasVerticalValues ? enValue : swValue,\n    ] = verticalValues;\n\n    const horizontalRawPoses = [nwValue, neValue, seValue, swValue].map(pos => convertUnitSize(pos, width));\n    const verticalRawPoses = [wnValue, enValue, esValue, wsValue].map(pos => convertUnitSize(pos, height));\n    const horizontalPoses = horizontalRawPoses.slice();\n    const verticalPoses = verticalRawPoses.slice();\n\n    [horizontalPoses[0], horizontalPoses[1]] = calculateRatio(\n        [horizontalPoses[0], horizontalPoses[1]],\n        width,\n    );\n    [horizontalPoses[3], horizontalPoses[2]] = calculateRatio(\n        [horizontalPoses[3], horizontalPoses[2]],\n        width,\n    );\n    [verticalPoses[0], verticalPoses[3]] = calculateRatio(\n        [verticalPoses[0], verticalPoses[3]], height,\n    );\n    [verticalPoses[1], verticalPoses[2]] = calculateRatio(\n        [verticalPoses[1], verticalPoses[2]], height,\n    );\n\n    const nextHorizontalPoses = full\n        ? horizontalPoses\n        : horizontalPoses.slice(0, Math.max(minCounts[0], horizontalValuesLength));\n    const nextVerticalPoses = full\n        ? verticalPoses\n        : verticalPoses.slice(0, Math.max(minCounts[1], verticalValuesLength));\n\n    return [\n        ...nextHorizontalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                virtual: i >= horizontalValuesLength,\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [left + pos, top + (VERTICAL_RADIUS_DIRECTIONS[i] === -1 ? height : 0)],\n                sub: true,\n                raw: horizontalRawPoses[i],\n                direction,\n            };\n        }),\n        ...nextVerticalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                virtual: i >= verticalValuesLength,\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [left + (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1 ? width : 0), top + pos],\n                sub: true,\n                raw: verticalRawPoses[i],\n                direction,\n            };\n        }),\n    ];\n}\nexport function removeRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    index: number,\n    startIndex: number,\n    length: number = poses.length,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    const radiuslIndex = index - startIndex;\n    let deleteCount = 0;\n\n    if (radiuslIndex === 0) {\n        deleteCount = length;\n    } else if (radiuslIndex > 0 && radiuslIndex < horizontalRange[1]) {\n        deleteCount = horizontalRange[1] - radiuslIndex;\n    } else if (radiuslIndex >= verticalRange[0]) {\n        deleteCount = verticalRange[0] + verticalRange[1] - radiuslIndex;\n    } else {\n        return;\n    }\n    controlPoses.splice(index, deleteCount);\n    poses.splice(index, deleteCount);\n}\nexport function addRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    startIndex: number,\n    horizontalIndex: number,\n    verticalIndex: number,\n    distX: number,\n    distY: number,\n    right: number,\n    bottom: number,\n    left = 0,\n    top = 0,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    if (horizontalIndex > -1) {\n        const radiusX = HORIZONTAL_RADIUS_DIRECTIONS[horizontalIndex] === 1\n            ? distX - left\n            : right - distX;\n        for (let i = horizontalRange[1]; i <= horizontalIndex; ++i) {\n            const y = VERTICAL_RADIUS_DIRECTIONS[i] === 1 ? top : bottom;\n            let x = 0;\n            if (horizontalIndex === i) {\n                x = distX;\n            } else if (i === 0) {\n                x = left + radiusX;\n            } else if (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1) {\n                x = right - (poses[startIndex][0] - left);\n            }\n            controlPoses.splice(startIndex + i, 0, {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [x, y],\n            });\n            poses.splice(startIndex + i, 0, [x, y]);\n\n            if (i === 0) {\n                break;\n            }\n        }\n    } else if (verticalIndex > - 1) {\n        const radiusY = VERTICAL_RADIUS_DIRECTIONS[verticalIndex] === 1\n            ? distY - top\n            : bottom - distY;\n        if (horizontalRange[1] === 0 && verticalRange[1] === 0) {\n            const pos = [\n                left + radiusY,\n                top,\n            ];\n            controlPoses.push({\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[0],\n                vertical: 0,\n                pos,\n            });\n            poses.push(pos);\n        }\n\n        const startVerticalIndex = verticalRange[0];\n        for (let i = verticalRange[1]; i <= verticalIndex; ++i) {\n            const x = HORIZONTAL_RADIUS_DIRECTIONS[i] === 1 ? left : right;\n            let y = 0;\n            if (verticalIndex === i) {\n                y = distY;\n            } else if (i === 0) {\n                y = top + radiusY;\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === 1) {\n                y = poses[startIndex + startVerticalIndex][1];\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === -1) {\n                y = bottom - (poses[startIndex + startVerticalIndex][1] - top);\n            }\n            controlPoses.push({\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [x, y],\n            });\n            poses.push([x, y]);\n            if (i === 0) {\n                break;\n            }\n        }\n    }\n}\nexport function splitRadiusPoses(\n    controlPoses: ControlPose[],\n    raws: number[] = controlPoses.map(pos => pos.raw!),\n) {\n    const horizontals = controlPoses\n        .map((pos, i) => pos.horizontal ? raws[i] : null).filter(pos => pos != null) as number[];\n    const verticals = controlPoses\n        .map((pos, i) => pos.vertical ? raws[i] : null).filter(pos => pos != null) as number[];\n\n    return {\n        horizontals,\n        verticals,\n    };\n}\n","import {\n    Renderer, ClippableProps, OnClip,\n    ClippableState, OnClipEnd, OnClipStart,\n    ControlPose, MoveableManagerInterface, DraggableProps,\n} from \"../types\";\nimport { splitBracket, splitComma, splitUnit, splitSpace, convertUnitSize, getRad } from \"@daybrush/utils\";\nimport {\n    prefix, calculatePosition, getDiagonalSize,\n    fillParams, triggerEvent,\n    makeMatrixCSS, getRect, fillEndParams,\n    convertCSSSize,\n    getComputedStyle,\n    getSizeDistByDist,\n    getProps,\n} from \"../utils\";\nimport { plus, minus, multiply } from \"@scena/matrix\";\nimport { getDragDist, calculatePointerDist, setDragStart } from \"../gesto/GestoUtils\";\nimport {\n    getRadiusValues,\n    HORIZONTAL_RADIUS_ORDER, VERTICAL_RADIUS_ORDER, getRadiusStyles, addRadiusPos, removeRadiusPos,\n} from \"./roundable/borderRadius\";\nimport { renderLine } from \"../renderDirections\";\nimport { checkSnapBoundPriority } from \"./snappable/snap\";\nimport { checkSnapBounds } from \"./snappable/snapBounds\";\nimport { getDefaultGuidelines } from \"./snappable/getTotalGuidelines\";\n\n\nconst CLIP_DIRECTIONS = [\n    [0, -1, \"n\"],\n    [1, 0, \"e\"],\n] as const;\nconst CLIP_RECT_DIRECTIONS = [\n    [-1, -1, \"nw\"],\n    [0, -1, \"n\"],\n    [1, -1, \"ne\"],\n    [1, 0, \"e\"],\n    [1, 1, \"se\"],\n    [0, 1, \"s\"],\n    [-1, 1, \"sw\"],\n    [-1, 0, \"w\"],\n] as const;\n\n// 1 2 5 6 0 3 4 7\n// 0 1 2 3 4 5 6 7\n\nfunction getClipStyles(\n    moveable: MoveableManagerInterface<ClippableProps>,\n    clipPath: ReturnType<typeof getClipPath>,\n    poses: number[][],\n) {\n    const {\n        clipRelative,\n    } = moveable.props;\n    const {\n        width,\n        height,\n    } = moveable.state;\n    const {\n        type: clipType,\n        poses: clipPoses,\n    } = clipPath!;\n\n    const isRect = clipType === \"rect\";\n    const isCircle = clipType === \"circle\";\n    if (clipType === \"polygon\") {\n        return poses.map(pos => `${convertCSSSize(pos[0], width, clipRelative)} ${convertCSSSize(pos[1], height, clipRelative)}`);\n    } else if (isRect || clipType === \"inset\") {\n        const top = poses[1][1];\n        const right = poses[3][0];\n        const left = poses[7][0];\n        const bottom = poses[5][1];\n\n        if (isRect) {\n            return [\n                top,\n                right,\n                bottom,\n                left,\n            ].map(pos => `${pos}px`);\n        }\n        const clipStyles\n            = [top, width - right, height - bottom, left]\n                .map((pos, i) => convertCSSSize(pos, i % 2 ? width : height, clipRelative));\n\n        if (poses.length > 8) {\n            const [subWidth, subHeight] = minus(poses[4], poses[0]);\n\n            clipStyles.push(\"round\", ...getRadiusStyles(\n                clipPoses.slice(8).map((info, i) => {\n                    return {\n                        ...info,\n                        pos: poses[i],\n                    };\n                }),\n                clipRelative!,\n                subWidth,\n                subHeight,\n                left, top, right, bottom,\n            ).styles);\n        }\n        return clipStyles;\n    } else if (isCircle || clipType === \"ellipse\") {\n        const center = poses[0];\n        const ry = convertCSSSize(\n            Math.abs(poses[1][1] - center[1]),\n            isCircle ? Math.sqrt((width * width + height * height) / 2) : height,\n            clipRelative,\n        );\n\n        const clipStyles = isCircle ? [ry]\n            : [convertCSSSize(Math.abs(poses[2][0] - center[0]), width, clipRelative), ry];\n\n        clipStyles.push(\n            \"at\", convertCSSSize(center[0], width, clipRelative),\n            convertCSSSize(center[1], height, clipRelative));\n\n        return clipStyles;\n    }\n}\n\nfunction getRectPoses(top: number, right: number, bottom: number, left: number): ControlPose[] {\n    const xs = [left, (left + right) / 2, right];\n    const ys = [top, (top + bottom) / 2, bottom];\n\n    return CLIP_RECT_DIRECTIONS.map(([dirx, diry, dir]) => {\n        const x = xs[dirx + 1];\n        const y = ys[diry + 1];\n        return {\n            vertical: Math.abs(diry),\n            horizontal: Math.abs(dirx),\n            direction: dir,\n            pos: [x, y],\n        };\n    });\n}\n\nexport function getControlSize(\n    controlPoses: ControlPose[],\n) {\n    const xRange = [Infinity, -Infinity];\n    const yRange = [Infinity, -Infinity];\n\n    controlPoses.forEach(({ pos }) => {\n        xRange[0] = Math.min(xRange[0], pos[0]);\n        xRange[1] = Math.max(xRange[1], pos[0]);\n        yRange[0] = Math.min(yRange[0], pos[1]);\n        yRange[1] = Math.max(yRange[1], pos[1]);\n    });\n\n    return [\n        Math.abs(xRange[1] - xRange[0]),\n        Math.abs(yRange[1] - yRange[0]),\n    ];\n}\n\nexport function moveControlPos(\n    controlPoses: ControlPose[],\n    index: number,\n    dist: number[],\n    isRect?: boolean,\n    keepRatio?: boolean,\n) {\n    const { direction, sub } = controlPoses[index];\n    const dists = controlPoses.map(() => [0, 0]);\n    const directions = direction ? direction.split(\"\") : [];\n\n    if (isRect && index < 8) {\n        const verticalDirections = directions.filter(dir => dir === \"w\" || dir === \"e\");\n        const horizontalDirections = directions.filter(dir => dir === \"n\" || dir === \"s\");\n\n        const verticalDirection = verticalDirections[0];\n        const horizontalDirection = horizontalDirections[0];\n\n        dists[index] = dist;\n        const [width, height] = getControlSize(controlPoses);\n        const ratio = width && height ? width / height : 0;\n\n        if (ratio && keepRatio) {\n            // 0 1 2\n            // 7   3\n            // 6 5 4\n\n            const fixedIndex = (index + 4) % 8;\n            const fixedPosition = controlPoses[fixedIndex].pos;\n            const sizeDirection = [0, 0];\n\n            if (direction!.indexOf(\"w\") > -1) {\n                sizeDirection[0] = -1;\n            } else if (direction!.indexOf(\"e\") > -1) {\n                sizeDirection[0] = 1;\n            }\n            if (direction!.indexOf(\"n\") > -1) {\n                sizeDirection[1] = -1;\n            } else if (direction!.indexOf(\"s\") > -1) {\n                sizeDirection[1] = 1;\n            }\n\n\n            const nextDist = getSizeDistByDist(\n                [width, height],\n                dist,\n                ratio,\n                sizeDirection,\n                true,\n            );\n            const nextWidth = width + nextDist[0];\n            const nextHeight = height + nextDist[1];\n            let top = fixedPosition[1];\n            let bottom = fixedPosition[1];\n            let left = fixedPosition[0];\n            let right = fixedPosition[0];\n\n            if (sizeDirection[0] === -1) {\n                left = right - nextWidth;\n            } else if (sizeDirection[0] === 1) {\n                right = left + nextWidth;\n            } else {\n                left = left - nextWidth / 2;\n                right = right + nextWidth / 2;\n            }\n            if (sizeDirection[1] === -1) {\n                top = bottom - nextHeight;\n            } else if (sizeDirection[1] === 1) {\n                bottom = top + nextHeight;\n            } else {\n                top = bottom - nextHeight / 2;\n                bottom = top + nextHeight;\n            }\n\n            const nextControlPoses = getRectPoses(top, right, bottom, left);\n\n            controlPoses.forEach((controlPose, i) => {\n                dists[i][0] = nextControlPoses[i].pos[0] - controlPose.pos[0];\n                dists[i][1] = nextControlPoses[i].pos[1] - controlPose.pos[1];\n            });\n        } else {\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: controlDir,\n                } = controlPose;\n\n                if (!controlDir) {\n                    return;\n                }\n                if (controlDir.indexOf(verticalDirection) > -1) {\n                    dists[i][0] = dist[0];\n                }\n                if (controlDir.indexOf(horizontalDirection) > -1) {\n                    dists[i][1] = dist[1];\n                }\n            });\n            if (verticalDirection) {\n                dists[1][0] = dist[0] / 2;\n                dists[5][0] = dist[0] / 2;\n            }\n            if (horizontalDirection) {\n                dists[3][1] = dist[1] / 2;\n                dists[7][1] = dist[1] / 2;\n            }\n        }\n    } else if (direction && !sub) {\n        directions.forEach(dir => {\n            const isVertical = dir === \"n\" || dir === \"s\";\n\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: dirDir,\n                    horizontal: dirHorizontal,\n                    vertical: dirVertical,\n                } = controlPose;\n\n                if (!dirDir || dirDir.indexOf(dir) === -1) {\n                    return;\n                }\n                dists[i] = [\n                    isVertical || !dirHorizontal ? 0 : dist[0],\n                    !isVertical || !dirVertical ? 0 : dist[1],\n                ];\n            });\n        });\n    } else {\n        dists[index] = dist;\n    }\n\n    return dists;\n}\nfunction getClipPath(\n    target: HTMLElement | SVGElement,\n    width: number,\n    height: number,\n    defaultClip?: string,\n    customClip?: string,\n) {\n    let clipText: string | undefined = customClip;\n\n    if (!clipText) {\n        const style = getComputedStyle(target!);\n        const clipPath = style.clipPath!;\n\n        clipText = clipPath !== \"none\" ? clipPath : style.clip!;\n    }\n    if (!clipText || clipText === \"none\" || clipText === \"auto\") {\n        clipText = defaultClip;\n\n        if (!clipText) {\n            return;\n        }\n    }\n    const {\n        prefix: clipPrefix = clipText,\n        value = \"\",\n    } = splitBracket(clipText);\n    const isCircle = clipPrefix === \"circle\";\n    let splitter = \" \";\n\n    if (clipPrefix === \"polygon\") {\n        const values = splitComma(value! || `0% 0%, 100% 0%, 100% 100%, 0% 100%`);\n        splitter = \",\";\n\n        const poses: ControlPose[] = values.map(pos => {\n            const [xPos, yPos] = pos.split(\" \");\n\n            return {\n                vertical: 1,\n                horizontal: 1,\n                pos: [\n                    convertUnitSize(xPos, width),\n                    convertUnitSize(yPos, height),\n                ],\n            };\n        });\n\n        return {\n            type: clipPrefix,\n            clipText,\n            poses,\n            splitter,\n        } as const;\n    } else if (isCircle || clipPrefix === \"ellipse\") {\n        let xPos = \"\";\n        let yPos = \"\";\n        let radiusX = 0;\n        let radiusY = 0;\n        const values = splitSpace(value!);\n\n        if (isCircle) {\n            let radius = \"\";\n            [radius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(radius, Math.sqrt((width * width + height * height) / 2));\n            radiusY = radiusX;\n        } else {\n            let xRadius = \"\";\n            let yRadius = \"\";\n            [xRadius = \"50%\", yRadius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(xRadius, width);\n            radiusY = convertUnitSize(yRadius, height);\n        }\n        const centerPos = [\n            convertUnitSize(xPos, width),\n            convertUnitSize(yPos, height),\n        ];\n        const poses: ControlPose[] = [\n            {\n                vertical: 1,\n                horizontal: 1,\n                pos: centerPos,\n                direction: \"nesw\",\n            },\n            ...CLIP_DIRECTIONS.slice(0, isCircle ? 1 : 2).map(dir => ({\n                vertical: Math.abs(dir[1]),\n                horizontal: dir[0],\n                direction: dir[2],\n                sub: true,\n                pos: [\n                    centerPos[0] + dir[0] * radiusX,\n                    centerPos[1] + dir[1] * radiusY,\n                ],\n            })),\n        ];\n        return {\n            type: clipPrefix as \"circle\" | \"ellipse\",\n            clipText,\n            radiusX,\n            radiusY,\n            left: centerPos[0] - radiusX,\n            top: centerPos[1] - radiusY,\n            poses,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"inset\") {\n        const values = splitSpace(value! || \"0 0 0 0\");\n        const roundIndex = values.indexOf(\"round\");\n\n        const rectLength = (roundIndex > -1 ? values.slice(0, roundIndex) : values).length;\n        const radiusValues = values.slice(rectLength + 1);\n        const [\n            topValue,\n            rightValue = topValue,\n            bottomValue = topValue,\n            leftValue = rightValue,\n        ] = values.slice(0, rectLength);\n        const [top, bottom] = [topValue, bottomValue].map(pos => convertUnitSize(pos, height));\n        const [left, right] = [leftValue, rightValue].map(pos => convertUnitSize(pos, width));\n        const nextRight = width - right;\n        const nextBottom = height - bottom;\n        const radiusPoses = getRadiusValues(\n            radiusValues,\n            nextRight - left,\n            nextBottom - top,\n            left,\n            top,\n        );\n        const poses: ControlPose[] = [\n            ...getRectPoses(top, nextRight, nextBottom, left),\n            ...radiusPoses,\n        ];\n\n        return {\n            type: \"inset\",\n            clipText,\n            poses,\n            top,\n            left,\n            right: nextRight,\n            bottom: nextBottom,\n            radius: radiusValues,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"rect\") {\n        // top right bottom left\n        const values = splitComma(value! || `0px, ${width}px, ${height}px, 0px`);\n\n        splitter = \",\";\n        const [top, right, bottom, left] = values.map(pos => {\n            const { value: posValue } = splitUnit(pos);\n\n            return posValue;\n        });\n        const poses = getRectPoses(top, right, bottom, left);\n\n        return {\n            type: \"rect\",\n            clipText,\n            poses,\n            top,\n            right,\n            bottom,\n            left,\n            values,\n            splitter,\n        } as const;\n    }\n    return;\n}\nfunction addClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const [distX, distY] = calculatePointerDist(moveable, e);\n    const { clipPath, clipIndex } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    if (clipType === \"polygon\") {\n        poses.splice(clipIndex, 0, [distX, distY]);\n    } else if (clipType === \"inset\") {\n        const horizontalIndex = HORIZONTAL_RADIUS_ORDER.indexOf(clipIndex);\n        const verticalIndex = VERTICAL_RADIUS_ORDER.indexOf(clipIndex);\n        const length = clipPoses.length;\n\n        addRadiusPos(\n            clipPoses,\n            poses,\n            8,\n            horizontalIndex,\n            verticalIndex,\n            distX,\n            distY,\n            poses[4][0],\n            poses[4][1],\n            poses[0][0],\n            poses[0][1],\n        );\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"added\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle: `${clipType}(${clipStyles.join(splitter)})`,\n        distX: 0,\n        distY: 0,\n    }));\n}\nfunction removeClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const { clipPath, clipIndex } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    const length = poses.length;\n    if (clipType === \"polygon\") {\n        clipPoses.splice(clipIndex, 1);\n        poses.splice(clipIndex, 1);\n    } else if (clipType === \"inset\") {\n        if (clipIndex < 8) {\n            return;\n        }\n        removeRadiusPos(clipPoses, poses, clipIndex, 8, length);\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"removed\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle: `${clipType}(${clipStyles.join(splitter)})`,\n        distX: 0,\n        distY: 0,\n    }));\n}\n/**\n * @namespace Moveable.Clippable\n * @description Whether to clip the target.\n */\n\nexport default {\n    name: \"clippable\",\n    props: {\n        clippable: Boolean,\n        defaultClipPath: String,\n        customClipPath: String,\n        keepRatio: Boolean,\n        clipRelative: Boolean,\n        clipArea: Boolean,\n        dragWithClip: Boolean,\n        clipTargetBounds: Boolean,\n        clipVerticalGuidelines: Array,\n        clipHorizontalGuidelines: Array,\n        clipSnapThreshold: Boolean,\n    } as const,\n    events: {\n        onClipStart: \"clipStart\",\n        onClip: \"clip\",\n        onClipEnd: \"clipEnd\",\n    } as const,\n    css: [\n        `.control.clip-control {\n    background: #6d6;\n    cursor: pointer;\n}\n.control.clip-control.clip-radius {\n    background: #d66;\n}\n.line.clip-line {\n    background: #6e6;\n    cursor: move;\n    z-index: 1;\n}\n.clip-area {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.clip-ellipse {\n    position: absolute;\n    cursor: move;\n    border: 1px solid #6d6;\n    border: var(--zoompx) solid #6d6;\n    border-radius: 50%;\n    transform-origin: 0px 0px;\n}`,\n        `:host {\n    --bounds-color: #d66;\n}`,\n        `.guideline {\n    pointer-events: none;\n    z-index: 2;\n}`,\n        `.line.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, React: Renderer): any[] {\n        const {\n            customClipPath,\n            defaultClipPath,\n            clipArea, zoom,\n        } = moveable.props;\n        const {\n            target, width, height, allMatrix, is3d, left, top,\n            pos1, pos2, pos3, pos4,\n            clipPathState,\n            snapBoundInfos,\n            rotation: rotationRad,\n        } = moveable.getState();\n\n        if (!target) {\n            return [];\n        }\n\n        const clipPath = getClipPath(\n            target, width, height, defaultClipPath || \"inset\", clipPathState || customClipPath);\n\n        if (!clipPath) {\n            return [];\n        }\n        const n = is3d ? 4 : 3;\n        const type = clipPath.type;\n        const clipPoses = clipPath.poses;\n        const poses = clipPoses.map(pos => {\n            // return [x, y];\n            const calculatedPos = calculatePosition(allMatrix, pos.pos, n);\n\n            return [\n                calculatedPos[0] - left,\n                calculatedPos[1] - top,\n            ];\n        });\n\n        let controls: any[] = [];\n        let lines: any[] = [];\n\n        const isRect = type === \"rect\";\n        const isInset = type === \"inset\";\n        const isPolygon = type === \"polygon\";\n\n        if (isRect || isInset || isPolygon) {\n            const linePoses = isInset ? poses.slice(0, 8) : poses;\n\n            lines = linePoses.map((to, i) => {\n                const from = i === 0 ? linePoses[linePoses.length - 1] : linePoses[i - 1];\n\n                const rad = getRad(from, to);\n                const dist = getDiagonalSize(from, to);\n                return <div key={`clipLine${i}`} className={prefix(\"line\", \"clip-line\", \"snap-control\")}\n                    data-clip-index={i}\n                    style={{\n                        width: `${dist}px`,\n                        transform: `translate(${from[0]}px, ${from[1]}px) rotate(${rad}rad) scaleY(${zoom})`,\n                    }}></div>;\n            });\n        }\n        controls = poses.map((pos, i) => {\n            return <div key={`clipControl${i}`}\n                className={prefix(\"control\", \"clip-control\", \"snap-control\")}\n                data-clip-index={i}\n                style={{\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\n                }}></div>;\n        });\n\n        if (isInset) {\n            controls.push(...poses.slice(8).map((pos, i) => {\n                return <div key={`clipRadiusControl${i}`}\n                    className={prefix(\"control\", \"clip-control\", \"clip-radius\", \"snap-control\")}\n                    data-clip-index={8 + i}\n                    style={{\n                        transform: `translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad) scale(${zoom})`,\n                    }}></div>;\n            }));\n        }\n        if (type === \"circle\" || type === \"ellipse\") {\n            const {\n                left: clipLeft,\n                top: clipTop,\n                radiusX,\n                radiusY,\n            } = clipPath;\n\n            const [distLeft, distTop] = minus(\n                calculatePosition(allMatrix, [clipLeft!, clipTop!], n),\n                calculatePosition(allMatrix, [0, 0], n),\n            );\n            let ellipseClipPath = \"none\";\n\n            if (!clipArea) {\n                const piece = Math.max(10, radiusX! / 5, radiusY! / 5);\n                const areaPoses: number[][] = [];\n\n                for (let i = 0; i <= piece; ++i) {\n                    const rad = Math.PI * 2 / piece * i;\n                    areaPoses.push([\n                        radiusX! + (radiusX! - zoom!) * Math.cos(rad),\n                        radiusY! + (radiusY! - zoom!) * Math.sin(rad),\n                    ]);\n                }\n                areaPoses.push([radiusX!, -2]);\n                areaPoses.push([-2, -2]);\n                areaPoses.push([-2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, -2]);\n                areaPoses.push([radiusX!, -2]);\n\n                ellipseClipPath = `polygon(${areaPoses.map(pos => `${pos[0]}px ${pos[1]}px`).join(\", \")})`;\n            }\n            controls.push(<div key=\"clipEllipse\" className={prefix(\"clip-ellipse\", \"snap-control\")} style={{\n                width: `${radiusX! * 2}px`,\n                height: `${radiusY! * 2}px`,\n                clipPath: ellipseClipPath,\n                transform: `translate(${-left + distLeft}px, ${-top + distTop}px) ${makeMatrixCSS(allMatrix)}`,\n            }}></div>);\n        }\n        if (clipArea) {\n            const {\n                width: allWidth,\n                height: allHeight,\n                left: allLeft,\n                top: allTop,\n            } = getRect([pos1, pos2, pos3, pos4, ...poses]);\n            if (isPolygon || isRect || isInset) {\n                const areaPoses = isInset ? poses.slice(0, 8) : poses;\n                controls.push(<div key=\"clipArea\" className={prefix(\"clip-area\", \"snap-control\")} style={{\n                    width: `${allWidth}px`,\n                    height: `${allHeight}px`,\n                    transform: `translate(${allLeft}px, ${allTop}px)`,\n                    clipPath: `polygon(${areaPoses.map(pos => `${pos[0] - allLeft}px ${pos[1] - allTop}px`).join(\", \")})`,\n                }}></div>);\n            }\n        }\n        if (snapBoundInfos) {\n            ([\"vertical\", \"horizontal\"] as const).forEach(directionType => {\n                const info = snapBoundInfos[directionType];\n                const isHorizontal = directionType === \"horizontal\";\n\n                if (info.isSnap) {\n                    lines.push(...info.snap.posInfos.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}snap${i}`, \"guideline\");\n                    }));\n                }\n                if (info.isBound) {\n                    lines.push(...info.bounds.map(({ pos }, i) => {\n                        const snapPos1 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(calculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2, zoom!,\n                            `clip${directionType}bounds${i}`, \"guideline\", \"bounds\", \"bold\");\n                    }));\n                }\n            });\n        }\n        return [\n            ...controls,\n            ...lines,\n        ];\n    },\n    dragControlCondition(moveable: any, e: any) {\n        return e.inputEvent && (e.inputEvent.target.getAttribute(\"class\") || \"\").indexOf(\"clip\") > -1;\n    },\n    dragStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const props = moveable.props;\n        const {\n            dragWithClip = true,\n        } = props;\n\n        if (dragWithClip) {\n            return false;\n        }\n\n        return this.dragControlStart(moveable, e);\n    },\n    drag(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControl(moveable, {...e, isDragTarget: true });\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControlEnd(moveable, e);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const state = moveable.state;\n        const { defaultClipPath, customClipPath } = moveable.props;\n        const { target, width, height } = state;\n        const inputTarget = e.inputEvent ? e.inputEvent.target : null;\n        const className = (inputTarget && inputTarget.getAttribute(\"class\")) || \"\";\n        const datas = e.datas;\n        const clipPath = getClipPath(target!, width, height, defaultClipPath || \"inset\", customClipPath);\n\n        if (!clipPath) {\n            return false;\n        }\n        const { clipText, type, poses } = clipPath;\n        const result = triggerEvent(moveable, \"onClipStart\", fillParams<OnClipStart>(moveable, e, {\n            clipType: type,\n            clipStyle: clipText,\n            poses: poses.map(pos => pos.pos),\n        }));\n\n        if (result === false) {\n            datas.isClipStart = false;\n            return false;\n        }\n        datas.isControl = className && className.indexOf(\"clip-control\") > -1;\n        datas.isLine = className.indexOf(\"clip-line\") > -1;\n        datas.isArea = className.indexOf(\"clip-area\") > -1 || className.indexOf(\"clip-ellipse\") > -1;\n        datas.clipIndex = inputTarget ? parseInt(inputTarget.getAttribute(\"data-clip-index\"), 10) : -1;\n        datas.clipPath = clipPath;\n        datas.isClipStart = true;\n        state.clipPathState = clipText;\n        setDragStart(moveable, e);\n\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<ClippableProps & DraggableProps, ClippableState>, e: any) {\n        const { datas, originalDatas, isDragTarget } = e;\n\n        if (!datas.isClipStart) {\n            return false;\n        }\n        const { isControl, isLine, isArea, clipIndex, clipPath } = datas as {\n            clipPath: ReturnType<typeof getClipPath>,\n            [key: string]: any,\n        };\n        if (!clipPath) {\n            return false;\n        }\n        const props = getProps(moveable.props, \"clippable\");\n\n        const { keepRatio } = props;\n        let distX = 0;\n        let distY = 0;\n\n        const originalDraggable = originalDatas.draggable;\n        const originalDist = getDragDist(e);\n\n        if (isDragTarget && originalDraggable) {\n            [distX, distY] = originalDraggable.prevBeforeDist;\n        } else {\n            [distX, distY] = originalDist;\n        }\n\n        const firstDist = [distX, distY];\n\n        const state = moveable.state;\n        const { width, height } = state;\n        const isDragWithTarget = !isArea && !isControl && !isLine;\n        const {\n            type: clipType,\n            poses: clipPoses,\n            splitter,\n        } = clipPath;\n        const poses = clipPoses.map(pos => pos.pos);\n\n        if (isDragWithTarget) {\n            distX = -distX;\n            distY = -distY;\n        }\n        const isAll = !isControl || clipPoses[clipIndex].direction === \"nesw\";\n        const isRect = clipType === \"inset\" || clipType === \"rect\";\n        let dists = clipPoses.map(() => [0, 0]);\n\n        if (isControl && !isAll) {\n            const { horizontal, vertical } = clipPoses[clipIndex];\n            const dist = [\n                distX * Math.abs(horizontal),\n                distY * Math.abs(vertical),\n            ];\n            dists = moveControlPos(clipPoses, clipIndex, dist, isRect, keepRatio);\n        } else if (isAll) {\n            dists = poses.map(() => [distX, distY]);\n        }\n        const nextPoses: number[][] = poses.map((pos, i) => plus(pos, dists[i]));\n        const guidePoses = [...nextPoses];\n\n        state.snapBoundInfos = null;\n        const isCircle = clipPath.type === \"circle\";\n        const isEllipse = clipPath.type === \"ellipse\";\n\n        if (isCircle || isEllipse) {\n            const guideRect = getRect(nextPoses);\n            const ry = Math.abs(guideRect.bottom - guideRect.top);\n            const rx = Math.abs(isEllipse ? guideRect.right - guideRect.left : ry);\n            const bottom = nextPoses[0][1] + ry;\n            const left = nextPoses[0][0] - rx;\n            const right = nextPoses[0][0] + rx;\n\n            // right\n            if (isCircle) {\n                guidePoses.push([right, guideRect.bottom]);\n                dists.push([1, 0]);\n            }\n            // bottom\n            guidePoses.push([guideRect.left, bottom]);\n            dists.push([0, 1]);\n            // left\n            guidePoses.push([left, guideRect.bottom]);\n            dists.push([1, 0]);\n        }\n\n        const guidelines = getDefaultGuidelines(\n            (props.clipHorizontalGuidelines || []).map(v => convertUnitSize(`${v}`, height)),\n            (props.clipVerticalGuidelines || []).map(v => convertUnitSize(`${v}`, width)),\n            width!, height!,\n        );\n        let guideXPoses: number[] = [];\n        let guideYPoses: number[] = [];\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n            const rectDists = [dists[0], dists[2], dists[4], dists[6]];\n\n            guideXPoses = rectPoses.filter((_, i) => rectDists[i][0]).map(pos => pos[0]);\n            guideYPoses = rectPoses.filter((_, i) => rectDists[i][1]).map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.filter((_, i) => dists[i][0]).map(pos => pos[0]);\n            guideYPoses = guidePoses.filter((_, i) => dists[i][1]).map(pos => pos[1]);\n        }\n        const boundDelta = [0, 0];\n        const {\n            horizontal: horizontalSnapInfo,\n            vertical: verticalSnapInfo,\n        } = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            5,\n        );\n        let snapOffsetY = horizontalSnapInfo.offset;\n        let snapOffsetX = verticalSnapInfo.offset;\n\n        if (horizontalSnapInfo.isBound) {\n            boundDelta[1] += snapOffsetY;\n        }\n        if (verticalSnapInfo.isBound) {\n            boundDelta[0] += snapOffsetX;\n        }\n        if ((isEllipse || isCircle) && dists[0][0] === 0 && dists[0][1] === 0) {\n            const guideRect = getRect(nextPoses);\n            let cy = guideRect.bottom - guideRect.top;\n            let cx = isEllipse ? guideRect.right - guideRect.left : cy;\n\n\n            const distSnapX = verticalSnapInfo.isBound\n                ? Math.abs(snapOffsetX)\n                : (verticalSnapInfo.snapIndex === 0 ? -snapOffsetX : snapOffsetX);\n            const distSnapY = horizontalSnapInfo.isBound\n                ? Math.abs(snapOffsetY)\n                : (horizontalSnapInfo.snapIndex === 0 ? -snapOffsetY : snapOffsetY);\n            cx -= distSnapX;\n            cy -= distSnapY;\n\n            if (isCircle) {\n                cy = checkSnapBoundPriority(verticalSnapInfo, horizontalSnapInfo) > 0 ? cy : cx;\n                cx = cy;\n            }\n            const center = guidePoses[0];\n\n            guidePoses[1][1] = center[1] - cy;\n            guidePoses[2][0] = center[0] + cx;\n            guidePoses[3][1] = center[1] + cy;\n            guidePoses[4][0] = center[0] - cx;\n        } else if (isRect && keepRatio && isControl) {\n            const [width, height] = getControlSize(clipPoses);\n            const ratio = width && height ? width / height : 0;\n            const clipPose = clipPoses[clipIndex];\n            const direction = clipPose.direction! || \"\";\n            let top = guidePoses[1][1];\n            let bottom = guidePoses[5][1];\n            let left = guidePoses[7][0];\n            let right = guidePoses[3][0];\n\n\n            if (snapOffsetY <= snapOffsetX) {\n                snapOffsetY = snapOffsetX / ratio;\n            } else {\n                snapOffsetX = snapOffsetY * ratio;\n            }\n            if (direction!.indexOf(\"w\") > -1) {\n                left -= snapOffsetX;\n            } else if (direction!.indexOf(\"e\") > -1) {\n                right -= snapOffsetX;\n            } else {\n                left += snapOffsetX / 2;\n                right -= snapOffsetX / 2;\n            }\n            if (direction!.indexOf(\"n\") > -1) {\n                top -= snapOffsetY;\n            } else if (direction!.indexOf(\"s\") > -1) {\n                bottom -= snapOffsetY;\n            } else {\n                top += snapOffsetY / 2;\n                bottom -= snapOffsetY / 2;\n            }\n\n            const nextControlPoses = getRectPoses(top, right, bottom, left);\n\n            guidePoses.forEach((pos, i) => {\n                [pos[0], pos[1]] = nextControlPoses[i].pos;\n            });\n        } else {\n            guidePoses.forEach((pos, j) => {\n                const dist = dists[j];\n\n                if (dist[0]) {\n                    pos[0] -= snapOffsetX;\n                }\n                if (dist[1]) {\n                    pos[1] -= snapOffsetY;\n                }\n            });\n        }\n        const nextClipStyles = getClipStyles(moveable, clipPath, nextPoses)!;\n        const clipStyle = `${clipType}(${nextClipStyles.join(splitter)})`;\n\n        state.clipPathState = clipStyle;\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n\n            guideXPoses = rectPoses.map(pos => pos[0]);\n            guideYPoses = rectPoses.map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.map(pos => pos[0]);\n            guideYPoses = guidePoses.map(pos => pos[1]);\n        }\n        state.snapBoundInfos = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            1,\n        );\n\n        if (originalDraggable) {\n            const {\n                is3d,\n                allMatrix,\n            } = state;\n            const n = is3d ? 4 : 3;\n\n            let dragDist = boundDelta;\n\n            if (isDragTarget) {\n                dragDist = [\n                    firstDist[0] + boundDelta[0] - originalDist[0],\n                    firstDist[1] + boundDelta[1] - originalDist[1],\n                ];\n            }\n            originalDraggable.deltaOffset = multiply(allMatrix, [dragDist[0], dragDist[1], 0, 0], n);\n        }\n        triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n            clipEventType: \"changed\",\n            clipType,\n            poses: nextPoses,\n            clipStyle,\n            clipStyles: nextClipStyles,\n            distX,\n            distY,\n        }));\n\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        this.unset(moveable);\n        const { isDrag, datas, isDouble } = e;\n        const { isLine, isClipStart, isControl } = datas;\n\n        if (!isClipStart) {\n            return false;\n        }\n        triggerEvent(moveable, \"onClipEnd\", fillEndParams<OnClipEnd>(moveable, e, {}));\n        if (isDouble) {\n            if (isControl) {\n                removeClipPath(moveable, e);\n            } else if (isLine) {\n                // add\n                addClipPath(moveable, e);\n            }\n        }\n        return isDouble || isDrag;\n    },\n    unset(moveable: MoveableManagerInterface<ClippableProps, ClippableState>) {\n        moveable.state.clipPathState = \"\";\n        moveable.state.snapBoundInfos = null;\n    },\n};\n\n/**\n * Whether to clip the target. (default: false)\n * @name Moveable.Clippable#clippable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n *  If clippath is not set, the default value can be set. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#defaultClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (`rect` not possible) (default: false)\n * @name Moveable.Clippable#clipRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can force the custom clipPath. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#customClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When dragging the target, the clip also moves. (default: true)\n * @name Moveable.Clippable#dragWithClip\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can drag the clip by setting clipArea.\n * @name Moveable.Clippable#clipArea\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n* Whether the clip is bound to the target.\n* @name Moveable.Clippable#clipTargetBounds\n* @default false\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipTargetBounds: true,\n* });\n* moveable.on(\"clipStart\", e => {\n*     console.log(e);\n* }).on(\"clip\", e => {\n*     if (e.clipType === \"rect\") {\n*         e.target.style.clip = e.clipStyle;\n*     } else {\n*         e.target.style.clipPath = e.clipStyle;\n*     }\n* }).on(\"clipEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n * Add clip guidelines in the vertical direction.\n * @name Moveable.Clippable#clipVerticalGuidelines\n * @default 0\n * @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n* Add clip guidelines in the horizontal direction.\n* @name Moveable.Clippable#clipHorizontalGuidelines\n* @default []\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n* istance value that can snap to clip guidelines.\n* @name Moveable.Clippable#clipSnapThreshold\n* @default 5\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n * When drag start the clip area or controls, the `clipStart` event is called.\n * @memberof Moveable.Clippable\n * @event clipStart\n * @param {Moveable.Clippable.OnClipStart} - Parameters for the `clipStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag the clip area or controls, the `clip` event is called.\n * @memberof Moveable.Clippable\n * @event clip\n * @param {Moveable.Clippable.OnClip} - Parameters for the `clip` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the clip area or controls, the `clipEnd` event is called.\n * @memberof Moveable.Clippable\n * @event clipEnd\n * @param {Moveable.Clippable.OnClipEnd} - Parameters for the `clipEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    prefix, triggerEvent,\n    fillParams, calculatePoses, getRect, fillEndParams, convertCSSSize,\n} from \"../utils\";\nimport {\n    OnDragOriginStart, OnDragOrigin,\n    OnDragOriginEnd, MoveableManagerInterface, DraggableProps, OriginDraggableProps, MoveableGroupInterface,\n} from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, getNextMatrix } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport Draggable from \"./Draggable\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\n\n/**\n * @namespace OriginDraggable\n * @memberof Moveable\n * @description Whether to drag origin (default: false)\n */\nexport default {\n    name: \"originDraggable\",\n    props: {\n        originDraggable: Boolean,\n        originRelative: Boolean,\n    } as const,\n    events: {\n        onDragOriginStart: \"dragOriginStart\",\n        onDragOrigin: \"dragOrigin\",\n        onDragOriginEnd: \"dragOriginEnd\",\n    } as const,\n    css: [\n        `:host[data-able-origindraggable] .control.origin {\n    pointer-events: auto;\n}`,\n    ],\n    dragControlCondition(_: any, e: any) {\n        if (e.isRequest) {\n            return e.requestAble === \"originDraggable\";\n        }\n        return hasClass(e.inputEvent.target, prefix(\"origin\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas } = e;\n\n        setDragStart(moveable, e);\n\n        const params = fillParams<OnDragOriginStart>(moveable, e, {\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent(moveable, \"onDragOriginStart\", params);\n\n        datas.startOrigin = moveable.state.transformOrigin;\n        datas.startTargetOrigin = moveable.state.targetOrigin;\n        datas.prevOrigin = [0, 0];\n        datas.isDragOrigin = true;\n\n        if (result === false) {\n            datas.isDragOrigin = false;\n            return false;\n        }\n\n        return params;\n    },\n    dragControl(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas, isPinch, isRequest } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        const [distX, distY] = getDragDist(e);\n        const state = moveable.state;\n        const {\n            width,\n            height,\n            offsetMatrix,\n            targetMatrix,\n            is3d,\n        } = state;\n        const {\n            originRelative = true,\n        } = moveable.props;\n        const n = is3d ? 4 : 3;\n        let dist = [distX, distY];\n\n        if (isRequest) {\n            const distOrigin = e.distOrigin;\n            if (distOrigin[0] || distOrigin[1]) {\n                dist = distOrigin;\n            }\n        }\n        const origin = plus(datas.startOrigin, dist);\n        const targetOrigin = plus(datas.startTargetOrigin, dist);\n        const delta = minus(dist, datas.prevOrigin);\n\n        const nextMatrix = getNextMatrix(\n            offsetMatrix,\n            targetMatrix,\n            origin,\n            n,\n        );\n\n        const rect = moveable.getRect();\n        const nextRect = getRect(calculatePoses(nextMatrix, width, height, n));\n\n        const dragDelta = [\n            rect.left - nextRect.left,\n            rect.top - nextRect.top,\n        ];\n\n        datas.prevOrigin = dist;\n        const transformOrigin = [\n            convertCSSSize(targetOrigin[0], width, originRelative),\n            convertCSSSize(targetOrigin[1], height, originRelative),\n        ].join(\" \");\n        const params = fillParams<OnDragOrigin>(moveable, e, {\n            width,\n            height,\n            origin,\n            dist,\n            delta,\n            transformOrigin,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(e, moveable.state, dragDelta, !!isPinch, false),\n            )!,\n        });\n        triggerEvent(moveable, \"onDragOrigin\", params);\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<OriginDraggableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        triggerEvent(moveable, \"onDragOriginEnd\",\n            fillEndParams<OnDragOriginEnd>(moveable, e, {}));\n        return true;\n    },\n    dragGroupControlCondition(moveable: any, e: any) {\n        return this.dragControlCondition(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        return true;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        moveable.transformOrigin = params.transformOrigin;\n\n        return true;\n    },\n    /**\n    * @method Moveable.OriginDraggable#request\n    * @param {object} e - the OriginDraggable's request parameter\n    * @param {number} [e.x] - x position\n    * @param {number} [e.y] - y position\n    * @param {number} [e.deltaX] - x number to move\n    * @param {number} [e.deltaY] - y number to move\n    * @param {array} [e.deltaOrigin] - left, top number to move transform-origin\n    * @param {array} [e.origin] - transform-origin position\n    * @param {number} [e.isInstant] - Whether to execute the request instantly\n    * @return {Moveable.Requester} Moveable Requester\n    * @example\n\n    * // Instantly Request (requestStart - request - requestEnd)\n    * // Use Relative Value\n    * moveable.request(\"originDraggable\", { deltaX: 10, deltaY: 10 }, true);\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 }, true);\n    * // Use Transform Value\n    * moveable.request(\"originDraggable\", { deltaOrigin: [10, 0] }, true);\n    * moveable.request(\"originDraggable\", { origin: [100, 0] }, true);\n    * // requestStart\n    * const requester = moveable.request(\"originDraggable\");\n    *\n    * // request\n    * // Use Relative Value\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 220, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 240, y: 100 });\n    *\n    * // requestEnd\n    * requester.requestEnd();\n    */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        const transformOrigin = rect.transformOrigin;\n        const distOrigin = [0, 0];\n\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaOrigin\" in e) {\n                    distOrigin[0] += e.deltaOrigin[0];\n                    distOrigin[1] += e.deltaOrigin[1];\n                } else if (\"origin\" in e) {\n                    distOrigin[0] = e.origin[0] - transformOrigin[0];\n                    distOrigin[1] = e.origin[1] - transformOrigin[1];\n                } else {\n                    if (\"x\" in e) {\n                        distX = e.x - rect.left;\n                    } else if (\"deltaX\" in e) {\n                        distX += e.deltaX;\n                    }\n                    if (\"y\" in e) {\n                        distY = e.y - rect.top;\n                    } else if (\"deltaY\" in e) {\n                        distY += e.deltaY;\n                    }\n                }\n\n                return { datas, distX, distY, distOrigin };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether to drag origin (default: false)\n * @name Moveable.OriginDraggable#originDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n * });\n * let translate = [0, 0];\n * moveable.on(\"dragOriginStart\", e => {\n *     e.dragStart && e.dragStart.set(translate);\n * }).on(\"dragOrigin\", e => {\n *     translate = e.drag.beforeTranslate;\n *     e.target.style.cssText\n *         = `transform-origin: ${e.transformOrigin};`\n *         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n * }).on(\"dragOriginEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (default: true)\n * @name Moveable.OriginDraggable#originRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n *     originRelative: false,\n * });\n * moveable.originRelative = true;\n */\n\n/**\n* When drag start the origin, the `dragOriginStart` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginStart\n* @param {Moveable.OriginDraggable.OnDragOriginStart} - Parameters for the `dragOriginStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag the origin, the `dragOrigin` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOrigin\n* @param {Moveable.OriginDraggable.OnDragOrigin} - Parameters for the `dragOrigin` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag end the origin, the `dragOriginEnd` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginEnd\n* @param {Moveable.OriginDraggable.OnDragOriginEnd} - Parameters for the `dragOriginEnd` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n","import {\n    prefix, triggerEvent,\n    fillParams, fillEndParams, calculatePosition,\n    getComputedStyle,\n    fillCSSObject,\n} from \"../utils\";\nimport {\n    Renderer, RoundableProps, OnRoundStart,\n    RoundableState, OnRound, ControlPose, OnRoundEnd,\n    MoveableManagerInterface,\n} from \"../types\";\nimport { splitSpace } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, calculatePointerDist } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport {\n    getRadiusValues,\n    getRadiusStyles,\n    splitRadiusPoses,\n} from \"./roundable/borderRadius\";\n\n\nfunction addBorderRadiusByLine(\n    controlPoses: ControlPose[],\n    lineIndex: number,\n    distX: number,\n    distY: number,\n) {\n    // lineIndex\n    // 0 top\n    // 1 right\n    // 2 bottom\n    // 3 left\n\n    const horizontalsLength = controlPoses.filter(({ virtual, horizontal }) => horizontal && !virtual).length;\n    const verticalsLength = controlPoses.filter(({ virtual, vertical }) => vertical && !virtual).length;\n    let controlIndex = -1;\n\n    //top\n    if (lineIndex === 0) {\n        if (horizontalsLength === 0) {\n            controlIndex = 0;\n        } else if (horizontalsLength === 1) {\n            controlIndex = 1;\n        }\n    }\n    // bottom\n    if (lineIndex === 2) {\n        if (horizontalsLength <= 2) {\n            controlIndex = 2;\n        } else if (horizontalsLength <= 3) {\n            controlIndex = 3;\n        }\n    }\n    // left\n    if (lineIndex === 3) {\n        if (verticalsLength === 0) {\n            controlIndex = 4;\n        } else if (verticalsLength < 4) {\n            controlIndex = 7;\n        }\n    }\n\n    // right\n    if (lineIndex === 1) {\n        if (verticalsLength <= 1) {\n            controlIndex = 5;\n        } else if (verticalsLength <= 2) {\n            controlIndex = 6;\n        }\n    }\n    if (controlIndex === -1 || !controlPoses[controlIndex].virtual) {\n        return;\n    }\n    const controlPoseInfo = controlPoses[controlIndex];\n\n    addBorderRadius(controlPoses, controlIndex);\n\n    if (controlIndex < 4) {\n        controlPoseInfo.pos[0] = distX;\n    } else {\n        controlPoseInfo.pos[1] = distY;\n    }\n}\nfunction addBorderRadius(\n    controlPoses: ControlPose[],\n    index: number,\n) {\n    if (index < 4) {\n        controlPoses.slice(0, index + 1).forEach(info => {\n            info.virtual = false;\n        });\n    } else {\n        if (controlPoses[0].virtual) {\n            controlPoses[0].virtual = false;\n        }\n        controlPoses.slice(4, index + 1).forEach(info => {\n            info.virtual = false;\n        });\n    }\n}\nfunction removeBorderRadius(\n    controlPoses: ControlPose[],\n    index: number,\n) {\n    if (index < 4) {\n        controlPoses.slice(index, 4).forEach(info => {\n            info.virtual = true;\n        });\n    } else {\n        controlPoses.slice(index).forEach(info => {\n            info.virtual = true;\n        });\n    }\n}\nfunction getBorderRadius(\n    target: HTMLElement | SVGElement,\n    width: number,\n    height: number,\n    minCounts: number[] = [0, 0],\n    state?: string,\n    full?: boolean,\n) {\n    let borderRadius: string;\n    let values: string[] = [];\n\n    if (!state) {\n        const style = getComputedStyle(target);\n\n        borderRadius = (style && style.borderRadius) || \"\";\n    } else {\n        borderRadius = state;\n    }\n    if (!borderRadius || (!state && borderRadius === \"0px\")) {\n        values = [];\n    } else {\n        values = splitSpace(borderRadius);\n    }\n\n    return getRadiusValues(values, width, height, 0, 0, minCounts, full);\n}\n\nfunction triggerRoundEvent(\n    moveable: MoveableManagerInterface<RoundableProps, RoundableState>,\n    e: any,\n    dist: number[],\n    delta: number[],\n    nextPoses: ControlPose[],\n) {\n    const state = moveable.state;\n    const {\n        width,\n        height,\n    } = state;\n    const {\n        raws,\n        styles,\n        radiusPoses,\n    } = getRadiusStyles(\n        nextPoses,\n        moveable.props.roundRelative!,\n        width,\n        height,\n    );\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(radiusPoses, raws);\n    const borderRadius = styles.join(\" \");\n\n    state.borderRadiusState = borderRadius;\n    triggerEvent(moveable, \"onRound\", fillParams<OnRound>(moveable, e, {\n        horizontals,\n        verticals,\n        borderRadius,\n        width,\n        height,\n        delta,\n        dist,\n        ...fillCSSObject({\n            borderRadius,\n        }, e),\n    }));\n}\n\n/**\n * @namespace Moveable.Roundable\n * @description Whether to show and drag or double click border-radius\n */\n\nexport default {\n    name: \"roundable\",\n    props: {\n        roundable: Boolean,\n        roundRelative: Boolean,\n        minRoundControls: Array,\n        maxRoundControls: Array,\n        roundClickable: Boolean,\n        roundPadding: Number,\n        isDisplayShadowRoundControls: Boolean,\n    } as const,\n    events: {\n        onRoundStart: \"roundStart\",\n        onRound: \"round\",\n        onRoundEnd: \"roundEnd\",\n    } as const,\n    css: [\n        `.control.border-radius {\n    background: #d66;\n    cursor: pointer;\n    z-index: 3;\n}`,\n        `.control.border-radius.vertical {\n    background: #d6d;\n    z-index: 2;\n}`,\n        `.control.border-radius.virtual {\n    opacity: 0.5;\n    z-index: 1;\n}`,\n        `:host.round-line-clickable .line.direction {\n    cursor: pointer;\n}`,\n    ],\n    className(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n        const roundClickable = moveable.props.roundClickable;\n\n        return roundClickable === true || roundClickable === \"line\" ? prefix(\"round-line-clickable\") : \"\";\n    },\n    render(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, React: Renderer): any {\n        const {\n            target,\n            width,\n            height,\n            allMatrix,\n            is3d,\n            left,\n            top,\n            borderRadiusState,\n        } = moveable.getState();\n        const {\n            minRoundControls = [0, 0],\n            maxRoundControls = [4, 4],\n            zoom,\n            roundPadding = 0,\n            isDisplayShadowRoundControls,\n        } = moveable.props;\n\n        if (!target) {\n            return null;\n        }\n\n        const n = is3d ? 4 : 3;\n        const radiusValues = getBorderRadius(\n            target, width, height,\n            minRoundControls,\n            borderRadiusState,\n            true,\n        );\n\n        if (!radiusValues) {\n            return null;\n        }\n        let verticalCount = 0;\n        let horizontalCount = 0;\n\n        return radiusValues.map((v, i) => {\n            const horizontal = v.horizontal;\n            const vertical = v.vertical;\n            const direction = v.direction || \"\";\n            const originalPos = [...v.pos];\n\n            horizontalCount += Math.abs(horizontal);\n            verticalCount += Math.abs(vertical);\n\n\n            if (horizontal && direction.indexOf(\"n\") > -1) {\n                originalPos[1] -= roundPadding;\n            }\n            if (vertical && direction.indexOf(\"w\") > -1) {\n                originalPos[0] -= roundPadding;\n            }\n            if (horizontal && direction.indexOf(\"s\") > -1) {\n                originalPos[1] += roundPadding;\n            }\n            if (vertical && direction.indexOf(\"e\") > -1) {\n                originalPos[0] += roundPadding;\n            }\n\n            const pos = minus(calculatePosition(allMatrix, originalPos, n), [left, top]);\n            const isDisplay = v.vertical\n                ? verticalCount <= maxRoundControls[1] && (isDisplayShadowRoundControls || !v.virtual)\n                : horizontalCount <= maxRoundControls[0] && (isDisplayShadowRoundControls || !v.virtual);\n\n            return <div key={`borderRadiusControl${i}`}\n                className={prefix(\n                    \"control\", \"border-radius\",\n                    v.vertical ? \"vertical\" : \"\",\n                    v.virtual ? \"virtual\" : \"\",\n                )}\n                data-radius-index={i}\n                style={{\n                    display: isDisplay ? \"block\" : \"none\",\n                    transform: `translate(${pos[0]}px, ${pos[1]}px) scale(${zoom})`,\n                }}></div>;\n        });\n    },\n    dragControlCondition(moveable: any, e: any) {\n        if (!e.inputEvent || e.isRequest) {\n            return false;\n        }\n        const className = (e.inputEvent.target.getAttribute(\"class\") || \"\");\n\n        return className.indexOf(\"border-radius\") > -1\n            || (className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { inputEvent, datas } = e;\n        const inputTarget = inputEvent.target;\n        const className = (inputTarget.getAttribute(\"class\") || \"\");\n        const isControl = className.indexOf(\"border-radius\") > -1;\n        const isLine = className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n        const controlIndex = isControl ? parseInt(inputTarget.getAttribute(\"data-radius-index\"), 10) : -1;\n        let lineIndex = -1;\n\n        if (isLine) {\n            const indexAttr = inputTarget.getAttribute(\"data-line-key\")! || \"\";\n\n            if (indexAttr) {\n                lineIndex = parseInt(indexAttr.replace(/render-line-/g, \"\"), 10);\n\n                if (isNaN(lineIndex)) {\n                    lineIndex = -1;\n                }\n            }\n        }\n\n        if (!isControl && !isLine) {\n            return false;\n        }\n\n        const result = triggerEvent(\n            moveable, \"onRoundStart\", fillParams<OnRoundStart>(moveable, e, {}));\n\n        if (result === false) {\n            return false;\n        }\n\n        datas.lineIndex = lineIndex;\n        datas.controlIndex = controlIndex;\n        datas.isControl = isControl;\n        datas.isLine = isLine;\n\n        setDragStart(moveable, e);\n\n        const {\n            roundRelative,\n            minRoundControls = [0, 0],\n        } = moveable.props;\n        const state = moveable.state;\n        const {\n            target,\n            width,\n            height,\n        } = state;\n\n        datas.isRound = true;\n        datas.prevDist = [0, 0];\n        const controlPoses = getBorderRadius(\n            target!,\n            width,\n            height,\n            minRoundControls,\n            \"\",\n            true,\n        ) || [];\n\n        datas.controlPoses = controlPoses;\n\n        state.borderRadiusState = getRadiusStyles(\n            controlPoses,\n            roundRelative!,\n            width,\n            height,\n        ).styles.join(\" \");\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { datas } = e;\n        const controlPoses = datas.controlPoses as ControlPose[];\n\n        if (!datas.isRound || !datas.isControl || !controlPoses.length) {\n            return false;\n        }\n        const index = datas.controlIndex as number;\n\n        const [distX, distY] = getDragDist(e);\n        const dist = [distX, distY];\n        const delta = minus(dist, datas.prevDist);\n        const {\n            maxRoundControls = [4, 4],\n        } = moveable.props;\n        const { width, height } = moveable.state;\n        const selectedControlPose = controlPoses[index];\n\n        const selectedVertical = selectedControlPose.vertical;\n        const selectedHorizontal = selectedControlPose.horizontal;\n\n        // 0: [0, 1, 2, 3] maxCount === 1\n        // 0: [0, 2] maxCount === 2\n        // 1: [1, 3] maxCount === 2\n\n        // 0: [0] maxCount === 3\n        // 1: [1, 3] maxCount === 3\n\n        const dists = controlPoses.map(pose => {\n            const { horizontal, vertical } = pose;\n            const poseDist = [\n                horizontal * selectedHorizontal * dist[0],\n                vertical * selectedVertical * dist[1],\n            ];\n            if (horizontal) {\n                if (maxRoundControls[0] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[0] < 4 && horizontal !== selectedHorizontal) {\n                    return poseDist;\n                }\n            } else if (maxRoundControls[1] === 0) {\n                poseDist[1] = vertical * selectedHorizontal * dist[0] / width * height;\n\n                return poseDist;\n            } else if (selectedVertical) {\n                if (maxRoundControls[1] === 1) {\n                    return poseDist;\n                } else if (maxRoundControls[1] < 4 && vertical !== selectedVertical) {\n                    return poseDist;\n                }\n            }\n            return [0, 0];\n        });\n\n        dists[index] = dist;\n        const nextPoses = controlPoses.map((info, i) => {\n            return {\n                ...info,\n                pos: plus(info.pos, dists[i]),\n            };\n        });\n\n        if (index < 4) {\n            nextPoses.slice(0, index + 1).forEach(info => {\n                info.virtual = false;\n            });\n        } else {\n            nextPoses.slice(4, index + 1).forEach(info => {\n                info.virtual = false;\n            });\n        }\n\n        datas.prevDist = [distX, distY];\n\n        triggerRoundEvent(\n            moveable,\n            e,\n            dist,\n            delta,\n            nextPoses,\n        );\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const state = moveable.state;\n\n        state.borderRadiusState = \"\";\n        const { datas, isDouble } = e;\n        if (!datas.isRound) {\n            return false;\n        }\n        const {\n            isControl,\n            controlIndex,\n            isLine,\n            lineIndex,\n        } = datas;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const length = controlPoses.filter(({ virtual }) => virtual).length;\n        const {\n            roundClickable = true,\n        } = moveable.props;\n\n        if (isDouble && roundClickable) {\n            if (isControl && (roundClickable === true || roundClickable === \"control\")) {\n                removeBorderRadius(controlPoses, controlIndex);\n            } else if (isLine && (roundClickable === true || roundClickable === \"line\")) {\n                const [distX, distY] = calculatePointerDist(moveable, e);\n\n                addBorderRadiusByLine(controlPoses, lineIndex, distX, distY);\n            }\n\n            if (length !== controlPoses.filter(({ virtual }) => virtual).length) {\n                triggerRoundEvent(\n                    moveable,\n                    e,\n                    [0, 0],\n                    [0, 0],\n                    controlPoses,\n                );\n            }\n        }\n        triggerEvent(moveable, \"onRoundEnd\",\n            fillEndParams<OnRoundEnd>(moveable, e, {}));\n        state.borderRadiusState = \"\";\n        return true;\n    },\n    unset(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n        moveable.state.borderRadiusState = \"\";\n    },\n};\n/**\n * Whether to show and drag or double click border-radius, (default: false)\n * @name Moveable.Roundable#roundable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * % Can be used instead of the absolute px\n * @name Moveable.Roundable#roundRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * Minimum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [0, 0])\n * @name Moveable.Roundable#minRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     minRoundControls: [0, 0],\n * });\n * moveable.minRoundControls = [1, 0];\n */\n/**\n * Maximum number of round controls. It moves in proportion by control. [horizontal, vertical] (default: [4, 4])\n * @name Moveable.Roundable#maxRoundControls\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     maxRoundControls: [4, 4],\n * });\n * moveable.maxRoundControls = [1, 0];\n */\n/**\n * Whether you can add/delete round controls by double-clicking a line or control.\n * @name Moveable.Roundable#roundClickable\n * @default true\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n *     roundClickable: true,\n * });\n * moveable.roundClickable = false;\n */\n\n/**\n * Whether to show a round control that does not actually exist as a shadow\n * @name Moveable.Roundable#isDisplayShadowRoundControls\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     isDisplayShadowRoundControls: false,\n * });\n * moveable.isDisplayShadowRoundControls = true;\n */\n\n\n/**\n * The padding value of the position of the round control\n * @name Moveable.Roundable#roundPadding\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundPadding: 0,\n * });\n * moveable.roundPadding = 15;\n */\n\n/**\n * When drag start the clip area or controls, the `roundStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundStart\n * @param {Moveable.Roundable.OnRoundStart} - Parameters for the `roundStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag or double click the border area or controls, the `round` event is called.\n * @memberof Moveable.Roundable\n * @event round\n * @param {Moveable.Roundable.OnRound} - Parameters for the `round` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n\n/**\n * When drag end the border area or controls, the `roundEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundEnd\n * @param {Moveable.Roundable.onRoundEnd} - Parameters for the `roundEnd` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    MoveableManagerInterface, BeforeRenderableProps,\n    OnBeforeRenderStart, OnBeforeRender, OnBeforeRenderEnd,\n    MoveableGroupInterface, OnBeforeRenderGroupStart,\n    OnBeforeRenderGroup, OnBeforeRenderGroupEnd,\n} from \"../types\";\nimport { fillParams, triggerEvent } from \"../utils\";\nimport { convertMatrixtoCSS, createIdentityMatrix } from \"@scena/matrix\";\nimport { isArray, splitSpace } from \"@daybrush/utils\";\nimport { fillChildEvents } from \"../groupUtils\";\n\n\nfunction isIdentityMatrix(matrix: string, is3d?: boolean) {\n    const n = is3d ? 4 : 3;\n    const identityMatrix = createIdentityMatrix(n);\n    const value = `matrix${is3d ? \"3d\" : \"\"}(${identityMatrix.join(\",\")})`;\n\n    return matrix === value || matrix === `matrix(1,0,0,1,0,0)`;\n}\nexport default {\n    isPinch: true,\n    name: \"beforeRenderable\",\n    props: {\n    } as const,\n    events: {\n        onBeforeRenderStart: \"beforeRenderStart\",\n        onBeforeRender: \"beforeRender\",\n        onBeforeRenderEnd: \"beforeRenderEnd\",\n        onBeforeRenderGroupStart: \"beforeRenderGroupStart\",\n        onBeforeRenderGroup: \"beforeRenderGroup\",\n        onBeforeRenderGroupEnd: \"beforeRenderGroupEnd\",\n    } as const,\n    dragRelation: \"weak\",\n    setTransform(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        const {\n            is3d,\n            target,\n            targetMatrix,\n        } = moveable.state;\n        const transform = target?.style.transform;\n        const cssMatrix = is3d\n            ? `matrix3d(${targetMatrix.join(\",\")})`\n            : `matrix(${convertMatrixtoCSS(targetMatrix, true)})`;\n        const startTransform = !transform || transform === \"none\" ? cssMatrix : transform;\n\n        e.datas.startTransforms = isIdentityMatrix(startTransform, is3d) ? [] : splitSpace(startTransform);\n    },\n    resetStyle(e: any) {\n        const datas = e.datas;\n\n        datas.nextStyle = {};\n        datas.nextTransforms = e.datas.startTransforms;\n        datas.nextTransformAppendedIndexes = [];\n    },\n    fillDragStartParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRenderStart>(moveable, e, {\n            setTransform: (transform: string | string[]) => {\n                e.datas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            },\n            isPinch: !!e.isPinch,\n        });\n    },\n    fillDragParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        });\n    },\n    dragStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.setTransform(moveable, e);\n        this.resetStyle(e);\n\n        triggerEvent(moveable, `onBeforeRenderStart`, this.fillDragStartParams(moveable, e));\n    },\n    drag(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.resetStyle(e);\n        triggerEvent(moveable, `onBeforeRender`, fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    dragEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        triggerEvent(moveable, `onBeforeRenderEnd`, fillParams<OnBeforeRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        }));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragStart(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.setTransform(childMoveable, childEvent);\n            this.resetStyle(childEvent);\n\n            return this.fillDragStartParams(childMoveable, childEvent);\n        });\n        triggerEvent(moveable, `onBeforeRenderGroupStart`, fillParams<OnBeforeRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            setTransform() { },\n            events: params,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.drag(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.resetStyle(childEvent);\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n        triggerEvent(moveable, `onBeforeRenderGroup`, fillParams<OnBeforeRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            events: params,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragEnd(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderGroupEnd`, fillParams<OnBeforeRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n} as const;\n","import { getNextStyle, getNextTransformText } from \"../gesto/GestoUtils\";\nimport { fillChildEvents } from \"../groupUtils\";\nimport {\n    MoveableManagerInterface, RenderableProps, OnRenderStart, OnRender,\n    OnRenderEnd, MoveableGroupInterface,\n    OnRenderGroupStart, OnRenderGroup, OnRenderGroupEnd,\n} from \"../types\";\nimport { triggerEvent, fillParams, fillCSSObject } from \"../utils\";\n\nexport default {\n    name: \"renderable\",\n    props: {\n    } as const,\n    events: {\n        onRenderStart: \"renderStart\",\n        onRender: \"render\",\n        onRenderEnd: \"renderEnd\",\n        onRenderGroupStart: \"renderGroupStart\",\n        onRenderGroup: \"renderGroup\",\n        onRenderGroupEnd: \"renderGroupEnd\",\n    } as const,\n    dragRelation: \"weak\",\n    dragStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderStart`, fillParams<OnRenderStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    drag(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRender`, this.fillDragParams(moveable, e));\n    },\n    dragAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        if (e.resultCount) {\n            return this.drag(moveable, e);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderEnd`, this.fillDragEndParams(moveable, e));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroupStart`, fillParams<OnRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onRenderGroup`, fillParams<OnRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n            events: params,\n        },));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            return this.fillDragEndParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onRenderGroupEnd`, fillParams<OnRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n            events: params,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlAfter(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragAfter(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n    fillDragParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return fillParams<OnRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n        });\n    },\n    fillDragEndParams(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return fillParams<OnRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            transform: getNextTransformText(e),\n            ...fillCSSObject(getNextStyle(e)),\n        });\n    },\n} as const;\n","import { Able, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { convertDragDist, defaultSync } from \"../utils\";\nimport Gesto, { GestoOptions } from \"gesto\";\nimport BeforeRenderable from \"../ables/BeforeRenderable\";\nimport Renderable from \"../ables/Renderable\";\n\nexport function triggerAble(\n    moveable: MoveableManagerInterface,\n    ableType: string,\n    eventOperation: string,\n    eventAffix: string,\n    eventType: any,\n    e: any,\n    requestInstant?: boolean,\n) {\n    const isStart = eventType === \"Start\";\n    const target = moveable.state.target;\n    const isRequest = e.isRequest;\n\n    if (\n        !target\n        || (isStart && eventAffix.indexOf(\"Control\") > -1\n            && !isRequest && moveable.areaElement === e.inputEvent.target)\n    ) {\n        return false;\n    }\n    // \"drag\" \"Control\" \"After\"\n    const eventName = `${eventOperation}${eventAffix}${eventType}`;\n    const conditionName = `${eventOperation}${eventAffix}Condition`;\n    const isEnd = eventType === \"End\";\n    const isAfter = eventType === \"After\";\n    const isFirstStart = isStart && (\n        !moveable.targetGesto || !moveable.controlGesto\n        || (!moveable.targetGesto.isFlag() || !moveable.controlGesto.isFlag())\n    );\n\n    if (isFirstStart) {\n        moveable.updateRect(eventType, true, false);\n    }\n    if (eventType === \"\" && !isRequest) {\n        convertDragDist(moveable.state, e);\n    }\n    // const isGroup = eventAffix.indexOf(\"Group\") > -1;\n    const ables: Able[] = [...(moveable as any)[ableType]];\n\n    if (isRequest) {\n        const requestAble = e.requestAble;\n\n        if (!ables.some(able => able.name === requestAble)) {\n            ables.push(...moveable.props.ables!.filter(able => able.name === requestAble));\n        }\n    }\n    if (!ables.length || ables.every(able => able.dragRelation)) {\n        return false;\n    }\n    const eventAbles: Able[] = [BeforeRenderable, ...ables, Renderable].filter((able: any) => able[eventName]);\n    const datas = e.datas;\n\n    if (isFirstStart) {\n        eventAbles.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n\n    const inputEvent = e.inputEvent;\n    let inputTarget: Element;\n\n    if (isEnd && inputEvent) {\n        inputTarget = document.elementFromPoint(e.clientX, e.clientY) || inputEvent.target;\n    }\n    let resultCount = 0;\n\n    let isDragStop = false;\n    const stop = () => {\n        isDragStop = true;\n        e.stop?.();\n    };\n    const results = eventAbles.filter((able: any) => {\n        const ableName = able.name;\n        const nextDatas = datas[ableName] || (datas[ableName] = {});\n\n        if (isStart) {\n            nextDatas.isEventStart = !able[conditionName] || able[conditionName](moveable, e);\n        }\n\n        if (nextDatas.isEventStart) {\n            const result = able[eventName](moveable, {\n                ...e,\n                stop,\n                resultCount,\n                datas: nextDatas,\n                originalDatas: datas,\n                inputTarget,\n            });\n\n            (moveable as any)._emitter.off();\n            if (isStart && result === false) {\n                nextDatas.isEventStart = false;\n            }\n            resultCount += result ? 1 : 0;\n            return result;\n        }\n        return false;\n    });\n\n    const isUpdate = results.length;\n    let isForceEnd = false;\n\n    // end ables\n    if (isStart && (isDragStop || (eventAbles.length && !isUpdate))) {\n        isForceEnd = isDragStop || eventAbles.filter(able => {\n            const ableName = able.name;\n            const nextDatas = datas[ableName];\n\n            if (nextDatas.isEventStart) {\n                if (able.dragRelation === \"strong\") {\n                    return false;\n                }\n                // start drag\n                return true;\n            }\n            // cancel event\n            return false;\n        }).length as any;\n    }\n    if (isEnd || isForceEnd) {\n        moveable.state.gestos = {};\n\n        if ((moveable as MoveableGroupInterface).moveables) {\n            (moveable as MoveableGroupInterface).moveables.forEach(childMoveable => {\n                childMoveable.state.gestos = {};\n            });\n        }\n    }\n    if (isFirstStart && isForceEnd) {\n        eventAbles.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n    if (isStart && !isForceEnd && !isRequest && isUpdate) {\n        e?.preventDefault();\n    }\n    if (moveable.isUnmounted || isForceEnd) {\n        return false;\n    }\n    if ((!isStart && isUpdate && !requestInstant) || isEnd) {\n        const flushSync = moveable.props.flushSync || defaultSync;\n\n        flushSync(() => {\n            moveable.updateRect(isEnd ? eventType : \"\", true, false);\n            moveable.forceUpdate();\n        });\n\n    }\n    if (!isStart && !isEnd && !isAfter && isUpdate && !requestInstant) {\n        triggerAble(moveable, ableType, eventOperation, eventAffix, eventType + \"After\", e);\n    }\n    return true;\n}\n\nexport function checkMoveableTarget(moveable: MoveableManagerInterface) {\n    const dragTarget = moveable.props.dragTarget;\n\n    return (e: { inputEvent: Event }) => {\n        const eventTarget = e.inputEvent.target as Element;\n        const areaElement = moveable.areaElement;\n\n        return dragTarget && (eventTarget === dragTarget || dragTarget.contains(eventTarget))\n            || eventTarget === areaElement\n            || (!moveable.isMoveableElement(eventTarget) && !moveable.controlBox.getElement().contains(eventTarget))\n            || hasClass(eventTarget, \"moveable-area\")\n            || hasClass(eventTarget, \"moveable-padding\")\n            || hasClass(eventTarget, \"moveable-edgeDraggable\");\n    };\n}\n\nexport function getTargetAbleGesto(\n    moveable: MoveableManagerInterface,\n    moveableTarget: HTMLElement | SVGElement,\n    eventAffix: string,\n) {\n    const controlBox = moveable.controlBox.getElement();\n    const targets: Array<HTMLElement | SVGElement> = [];\n    const dragTarget = moveable.props.dragTarget;\n\n    targets.push(controlBox);\n\n    if (!moveable.props.dragArea || dragTarget) {\n        targets.push(moveableTarget);\n    }\n\n    return getAbleGesto(moveable, targets, \"targetAbles\", eventAffix, {\n        dragStart: checkMoveableTarget(moveable),\n        pinchStart: checkMoveableTarget(moveable),\n    });\n}\nexport function getAbleGesto(\n    moveable: MoveableManagerInterface,\n    target: HTMLElement | SVGElement | Array<HTMLElement | SVGElement>,\n    ableType: string,\n    eventAffix: string,\n    conditionFunctions: IObject<any> = {},\n) {\n    const isTargetAbles = ableType === \"targetAbles\";\n    const {\n        pinchOutside,\n        pinchThreshold,\n        preventClickEventOnDrag,\n        preventClickDefault,\n        checkInput,\n    } = moveable.props;\n    const options: GestoOptions = {\n        preventDefault: true,\n        preventRightClick: true,\n        preventWheelClick: true,\n        container: window,\n        pinchThreshold,\n        pinchOutside,\n        preventClickEventOnDrag: isTargetAbles ? preventClickEventOnDrag : false,\n        preventClickEventOnDragStart: isTargetAbles ? preventClickDefault : false,\n        preventClickEventByCondition: isTargetAbles ? null : (e: MouseEvent) => {\n            return moveable.controlBox.getElement().contains(e.target as Element);\n        },\n        checkInput: isTargetAbles ? checkInput : false,\n    };\n    const gesto = new Gesto(target!, options);\n    const isControl = eventAffix === \"Control\";\n\n    [\"drag\", \"pinch\"].forEach(eventOperation => {\n        [\"Start\", \"\", \"End\"].forEach(eventType => {\n\n            gesto.on(`${eventOperation}${eventType}` as any, e => {\n                const eventName = e.eventType;\n\n                if (conditionFunctions[eventName] && !conditionFunctions[eventName](e)) {\n                    e.stop();\n                    return;\n                }\n                const result = triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e);\n\n                if (!result) {\n                    e.stop();\n                } else if (moveable.props.stopPropagation || (eventType === \"Start\" && isControl)) {\n                    e?.inputEvent?.stopPropagation();\n                }\n            });\n        });\n    });\n\n    return gesto;\n}\n","import { Able, MoveableManagerInterface } from \"./types\";\n\nexport default class EventManager {\n    private ables: Able[] = [];\n    constructor(\n        private target: HTMLElement | SVGElement | null,\n        private moveable: MoveableManagerInterface | null,\n        private eventName: string,\n    ) {\n        target!.addEventListener(eventName.toLowerCase(), this._onEvent);\n    }\n    public setAbles(ables: Able[]) {\n        this.ables = ables;\n    }\n    public destroy() {\n        this.target!.removeEventListener(this.eventName.toLowerCase(), this._onEvent);\n        this.target = null;\n        this.moveable = null;\n    }\n    private _onEvent = (e: Event) => {\n        const eventName = this.eventName;\n        const moveable = this.moveable!;\n\n        if (moveable.state.disableNativeEvent) {\n            return;\n        }\n        this.ables.forEach(able => {\n            (able as any)[eventName](moveable, {\n                inputEvent: e,\n            });\n        });\n    }\n}\n","import {\n    convertCSStoMatrix, convertDimension,\n    createIdentityMatrix, createOriginMatrix,\n} from \"@scena/matrix\";\nimport { IS_WEBKIT, IS_SAFARI_ABOVE15, IS_FIREFOX } from \"../consts\";\nimport { MatrixInfo } from \"../types\";\nimport {\n    getOffsetInfo, getElementTransform,\n    getTransformMatrix, getPositionFixedInfo,\n    convert3DMatrixes, getOffsetPosInfo,\n    getSVGMatrix, getBodyOffset, getAbsoluteMatrix,\n} from \"../utils\";\n\n\nexport function getShadowRoot(parentElement: HTMLElement | SVGElement) {\n    if (parentElement && parentElement.getRootNode) {\n        const rootNode = parentElement.getRootNode();\n\n        if (rootNode.nodeType === 11) {\n            return rootNode;\n        }\n    }\n    return;\n}\n\nexport function getMatrixStackInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    checkContainer?: boolean,\n) {\n    let el: SVGElement | HTMLElement | null = target;\n    const matrixes: MatrixInfo[] = [];\n    let requestEnd = !checkContainer && target === container || target === document.body;\n    let isEnd = requestEnd;\n    let is3d = false;\n    let n = 3;\n    let transformOrigin!: number[];\n    let targetTransformOrigin!: number[];\n    let targetMatrix!: number[];\n\n    let hasFixed = false;\n    let offsetContainer = getOffsetInfo(container, container, true).offsetParent;\n\n    while (el && !isEnd) {\n        isEnd = requestEnd;\n        const style: CSSStyleDeclaration = getComputedStyle(el);\n        const position = style.position;\n        const transform = getElementTransform(el, style);\n        let matrix: number[] = convertCSStoMatrix(getTransformMatrix(transform));\n        const isFixed = position === \"fixed\";\n        let fixedInfo: {\n            hasTransform: boolean;\n            fixedContainer: HTMLElement | null;\n        } = {\n            hasTransform: false,\n            fixedContainer: null,\n        };\n        if (isFixed) {\n            hasFixed = true;\n            fixedInfo = getPositionFixedInfo(el);\n\n            offsetContainer = fixedInfo.fixedContainer!;\n        }\n\n        // convert 3 to 4\n        const length = matrix.length;\n\n        if (!is3d && length === 16) {\n            is3d = true;\n            n = 4;\n\n            convert3DMatrixes(matrixes);\n            if (targetMatrix) {\n                targetMatrix = convertDimension(targetMatrix, 3, 4);\n            }\n        }\n        if (is3d && length === 9) {\n            matrix = convertDimension(matrix, 3, 4);\n        }\n        const {\n            tagName,\n            hasOffset,\n            isSVG,\n            origin,\n            targetOrigin,\n            offset: offsetPos,\n        } = getOffsetPosInfo(el, target, style);\n        let [\n            offsetLeft,\n            offsetTop,\n        ] = offsetPos;\n\n        if (tagName === \"svg\" && targetMatrix) {\n            // scale matrix for svg's SVGElements.\n            matrixes.push({\n                type: \"target\",\n                target: el,\n                matrix: getSVGMatrix(el as SVGSVGElement, n),\n            });\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createIdentityMatrix(n),\n            });\n        }\n\n        let offsetParent: HTMLElement;\n        let isOffsetEnd = false;\n        let isStatic = false;\n\n        if (isFixed) {\n            offsetParent = fixedInfo.fixedContainer!;\n            isOffsetEnd = true;\n        } else {\n            const offsetInfo = getOffsetInfo(el, container);\n\n            offsetParent = offsetInfo.offsetParent;\n            isOffsetEnd = offsetInfo.isEnd;\n            isStatic = offsetInfo.isStatic;\n\n            if (IS_FIREFOX) {\n                const parentSlotElement = offsetInfo.parentSlotElement;\n\n                if (parentSlotElement) {\n                    let customOffsetParent: HTMLElement | null = offsetParent;\n                    let customOffsetLeft = 0;\n                    let customOffsetTop = 0;\n\n                    while (customOffsetParent) {\n                        if (!getShadowRoot(customOffsetParent)) {\n                            break;\n                        }\n                        customOffsetLeft += customOffsetParent.offsetLeft;\n                        customOffsetTop += customOffsetParent.offsetTop;\n                        customOffsetParent = customOffsetParent.offsetParent as HTMLElement;\n                    }\n                    offsetLeft -= customOffsetLeft;\n                    offsetTop -= customOffsetTop;\n                }\n            }\n        }\n\n        if (\n            IS_WEBKIT && !IS_SAFARI_ABOVE15\n            && hasOffset && !isSVG && isStatic\n            && (position === \"relative\" || position === \"static\")\n        ) {\n            offsetLeft -= offsetParent.offsetLeft;\n            offsetTop -= offsetParent.offsetTop;\n            requestEnd = requestEnd || isOffsetEnd;\n        }\n\n        let parentClientLeft = 0;\n        let parentClientTop = 0;\n        let fixedClientLeft = 0;\n        let fixedClientTop = 0;\n\n        if (isFixed) {\n            if (hasOffset && fixedInfo.hasTransform) {\n                // border\n                fixedClientLeft = offsetParent.clientLeft;\n                fixedClientTop = offsetParent.clientTop;\n            }\n        } else {\n            if (hasOffset && offsetContainer !== offsetParent) {\n                // border\n                parentClientLeft = offsetParent.clientLeft;\n                parentClientTop = offsetParent.clientTop;\n            }\n            if (hasOffset && offsetParent === document.body) {\n                const margin = getBodyOffset(el, false, style);\n\n                offsetLeft += margin[0];\n                offsetTop += margin[1];\n            }\n        }\n\n        matrixes.push({\n            type: \"target\",\n            target: el,\n            matrix: getAbsoluteMatrix(matrix, n, origin),\n        });\n\n        if (hasOffset) {\n            const isElementTarget = el === target;\n            const scrollLeft = isElementTarget ? 0 : el.scrollLeft;\n            const scrollTop = isElementTarget ? 0 : el.scrollTop;\n\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                matrix: createOriginMatrix([\n                    offsetLeft - scrollLeft + parentClientLeft - fixedClientLeft,\n                    offsetTop - scrollTop + parentClientTop - fixedClientTop,\n                ], n),\n            });\n        } else {\n            // svg\n            matrixes.push({\n                type: \"offset\",\n                target: el,\n                origin,\n            });\n        }\n        if (!targetMatrix) {\n            targetMatrix = matrix;\n        }\n        if (!transformOrigin) {\n            transformOrigin = origin;\n        }\n        if (!targetTransformOrigin) {\n            targetTransformOrigin = targetOrigin;\n        }\n\n        if (isEnd || isFixed) {\n            break;\n        } else {\n            el = offsetParent;\n            requestEnd = isOffsetEnd;\n        }\n        if (!checkContainer || el === document.body) {\n            isEnd = requestEnd;\n        }\n    }\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(n);\n    }\n    if (!transformOrigin) {\n        transformOrigin = [0, 0];\n    }\n    if (!targetTransformOrigin) {\n        targetTransformOrigin = [0, 0];\n    }\n\n    return {\n        offsetContainer,\n        matrixes,\n        targetMatrix,\n        transformOrigin,\n        targetOrigin: targetTransformOrigin,\n        is3d,\n        hasFixed,\n    };\n}\n","import { createIdentityMatrix, convertDimension, multiply, createOriginMatrix, ignoreDimension } from \"@scena/matrix\";\nimport { convert3DMatrixes, getOffsetInfo, getSVGOffset, makeMatrixCSS } from \"../utils\";\nimport { getMatrixStackInfo } from \"./getMatrixStackInfo\";\n\nexport interface MoveableElementMatrixInfo {\n    hasFixed: boolean;\n    rootMatrix: number[];\n    beforeMatrix: number[];\n    offsetMatrix: number[];\n    allMatrix: number[];\n    targetMatrix: number[];\n    transformOrigin: number[];\n    targetOrigin: number[];\n    is3d: boolean;\n    targetTransform: string;\n    offsetContainer: HTMLElement | null,\n    offsetRootContainer: HTMLElement | null,\n}\n\nexport function calculateMatrixStack(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n    // prevMatrix?: number[],\n    // prevRootMatrix?: number[],\n    // prevN?: number,\n): MoveableElementMatrixInfo {\n    const {\n        matrixes,\n        is3d,\n        targetMatrix: prevTargetMatrix,\n        transformOrigin,\n        targetOrigin,\n        offsetContainer,\n        hasFixed,\n    } = getMatrixStackInfo(target, container); // prevMatrix\n    const {\n        matrixes: rootMatrixes,\n        is3d: isRoot3d,\n        offsetContainer: offsetRootContainer,\n    } = getMatrixStackInfo(offsetContainer, rootContainer, true); // prevRootMatrix\n\n    // if (rootContainer === document.body) {\n    //     console.log(offsetContainer, rootContainer, rootMatrixes);\n    // }\n    const isNext3d = isAbsolute3d || isRoot3d || is3d;\n    const n = isNext3d ? 4 : 3;\n    const isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\n    let targetMatrix = prevTargetMatrix;\n    // let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    let allMatrix = createIdentityMatrix(n);\n    let rootMatrix = createIdentityMatrix(n);\n    let beforeMatrix = createIdentityMatrix(n);\n    let offsetMatrix = createIdentityMatrix(n);\n    const length = matrixes.length;\n\n    rootMatrixes.reverse();\n    matrixes.reverse();\n\n    if (!is3d && isNext3d) {\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\n\n        convert3DMatrixes(matrixes);\n    }\n    if (!isRoot3d && isNext3d) {\n        convert3DMatrixes(rootMatrixes);\n    }\n\n    // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\n    // rootMatrixBeforeOffset = lastOffsetMatrix -> (...) -> container\n    // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\n    // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\n\n    rootMatrixes.forEach(info => {\n        rootMatrix = multiply(rootMatrix, info.matrix!, n);\n    });\n    const originalRootContainer = rootContainer || document.body;\n    const endContainer = rootMatrixes[0]?.target\n        || getOffsetInfo(originalRootContainer, originalRootContainer, true).offsetParent;\n    const rootMatrixBeforeOffset = rootMatrixes.slice(1).reduce((matrix, info) => {\n        return multiply(matrix, info.matrix!, n);\n    }, createIdentityMatrix(n));\n    matrixes.forEach((info, i) => {\n        if (length - 2 === i) {\n            // length - 3\n            beforeMatrix = allMatrix.slice();\n        }\n        if (length - 1 === i) {\n            // length - 2\n            offsetMatrix = allMatrix.slice();\n        }\n\n        // calculate for SVGElement\n        if (!info.matrix) {\n            const nextInfo = matrixes[i + 1];\n            const offset = getSVGOffset(\n                info,\n                nextInfo,\n                endContainer,\n                n,\n                multiply(rootMatrixBeforeOffset, allMatrix, n),\n            );\n            info.matrix = createOriginMatrix(offset, n);\n        }\n        allMatrix = multiply(allMatrix, info.matrix!, n);\n    });\n    const isMatrix3d = !isSVGGraphicElement && is3d;\n\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\n    }\n    const targetTransform = makeMatrixCSS(\n        isSVGGraphicElement && targetMatrix.length === 16\n            ? convertDimension(targetMatrix, 4, 3) : targetMatrix,\n        isMatrix3d,\n    );\n\n    rootMatrix = ignoreDimension(rootMatrix, n, n);\n\n    return {\n        hasFixed,\n        rootMatrix,\n        beforeMatrix,\n        offsetMatrix,\n        allMatrix,\n        targetMatrix,\n        targetTransform,\n        transformOrigin,\n        targetOrigin,\n        is3d: isNext3d,\n        offsetContainer,\n        offsetRootContainer,\n    };\n}\n","import { createIdentityMatrix } from \"@scena/matrix\";\nimport { ElementSizes, MoveablePosition } from \"../types\";\nimport { calculateMoveablePosition, getSize, getRotationRad } from \"../utils\";\nimport { calculateMatrixStack, MoveableElementMatrixInfo } from \"./calculateMatrixStack\";\n\nexport interface MoveableElementInfo extends MoveableElementMatrixInfo, MoveablePosition, ElementSizes {\n    width: number;\n    height: number;\n    rotation: number;\n}\n\nexport function calculateElementInfo(\n    target?: SVGElement | HTMLElement | null,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: HTMLElement | SVGElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n): MoveableElementInfo {\n    let width = 0;\n    let height = 0;\n    let rotation = 0;\n    let allResult: {} = {};\n\n    const sizes = getSize(target);\n\n    if (target) {\n        width = sizes.offsetWidth;\n        height = sizes.offsetHeight;\n    }\n\n    if (target) {\n        const result = calculateMatrixStack(\n            target,\n            container,\n            rootContainer,\n            isAbsolute3d,\n            // prevMatrix, prevRootMatrix, prevN,\n        );\n\n        const position = calculateMoveablePosition(\n            result.allMatrix,\n            result.transformOrigin,\n            width, height,\n        );\n        allResult = {\n            ...result,\n            ...position,\n        };\n        const rotationPosition = calculateMoveablePosition(\n            result.allMatrix, [50, 50], 100, 100,\n        );\n        rotation = getRotationRad([rotationPosition.pos1, rotationPosition.pos2], rotationPosition.direction);\n    }\n    const n = isAbsolute3d ? 4 : 3;\n\n    return {\n        width,\n        height,\n        rotation,\n        ...sizes,\n        rootMatrix: createIdentityMatrix(n),\n        beforeMatrix: createIdentityMatrix(n),\n        offsetMatrix: createIdentityMatrix(n),\n        allMatrix: createIdentityMatrix(n),\n        targetMatrix: createIdentityMatrix(n),\n        targetTransform: \"\",\n        transformOrigin: [0, 0],\n        targetOrigin: [0, 0],\n        is3d: !!isAbsolute3d,\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        origin: [0, 0],\n        pos1: [0, 0],\n        pos2: [0, 0],\n        pos3: [0, 0],\n        pos4: [0, 0],\n        direction: 1,\n        hasFixed: false,\n        offsetContainer: null,\n        offsetRootContainer: null,\n        ...allResult,\n    };\n}\n\n\nexport function getElementInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n) {\n    return calculateElementInfo(target, container, rootContainer, true);\n}\n","import { plus, getOrigin } from \"@scena/matrix\";\nimport { MoveableClientRect } from \"../types\";\nimport {\n    calculateMoveablePosition,\n    getClientRect, getOffsetInfo, resetClientRect,\n} from \"../utils\";\nimport { calculateElementInfo, MoveableElementInfo } from \"./getElementInfo\";\n\n\nexport interface MoveableTargetInfo extends MoveableElementInfo {\n    targetClientRect: MoveableClientRect;\n    containerClientRect: MoveableClientRect;\n    moveableClientRect: MoveableClientRect;\n    rootContainerClientRect: MoveableClientRect;\n    beforeDirection: 1 | -1;\n    beforeOrigin: number[];\n    originalBeforeOrigin: number[];\n    target: HTMLElement | SVGElement | null | undefined;\n}\n\nexport function getMoveableTargetInfo(\n    moveableElement?: HTMLElement | null,\n    target?: HTMLElement | SVGElement | null,\n    container?: HTMLElement | SVGElement | null,\n    parentContainer?: HTMLElement | SVGElement | null,\n    rootContainer?: HTMLElement | SVGElement | null,\n    // state?: Partial<MoveableManagerState> | false | undefined,\n): MoveableTargetInfo {\n    let beforeDirection: 1 | -1 = 1;\n    let beforeOrigin = [0, 0];\n    let targetClientRect = resetClientRect();\n    let moveableClientRect = resetClientRect();\n    let containerClientRect = resetClientRect();\n    let rootContainerClientRect = resetClientRect();\n\n    const result = calculateElementInfo(\n        target, container!, rootContainer!,\n        true,\n    );\n    if (target) {\n        const n = result.is3d ? 4 : 3;\n        const beforePosition = calculateMoveablePosition(\n            result.offsetMatrix,\n            plus(result.transformOrigin, getOrigin(result.targetMatrix, n)),\n            result.width, result.height,\n        );\n        beforeDirection = beforePosition.direction;\n        beforeOrigin = plus(\n            beforePosition.origin,\n            [beforePosition.left - result.left, beforePosition.top - result.top],\n        );\n\n        targetClientRect = getClientRect(target);\n        const offsetContainer = getOffsetInfo(parentContainer, parentContainer, true).offsetParent\n            || result.offsetRootContainer!;\n        containerClientRect = getClientRect(offsetContainer, true);\n        rootContainerClientRect = getClientRect(result.offsetRootContainer!);\n        if (moveableElement) {\n            moveableClientRect = getClientRect(moveableElement);\n        }\n    }\n\n    return {\n        targetClientRect,\n        containerClientRect,\n        moveableClientRect,\n        rootContainerClientRect,\n        beforeDirection,\n        beforeOrigin,\n        originalBeforeOrigin: beforeOrigin,\n        target,\n        ...result,\n    };\n}\n","import * as React from \"react\";\nimport { createElement } from \"react\";\nimport { PREFIX } from \"./consts\";\nimport {\n    prefix,\n    unset,\n    getAbsolutePosesByState,\n    getRect,\n    filterAbles,\n    equals,\n    flat,\n    groupByMap,\n    calculatePadding,\n    getAbsoluteRotation,\n    defaultSync,\n    getRefTarget,\n    groupBy,\n} from \"./utils\";\nimport Gesto from \"gesto\";\nimport { ref } from \"framework-utils\";\nimport {\n    MoveableManagerProps, MoveableManagerState, Able,\n    RectInfo, Requester, PaddingBox, HitRect, MoveableManagerInterface,\n    MoveableDefaultOptions,\n    GroupableProps,\n} from \"./types\";\nimport { triggerAble, getTargetAbleGesto, getAbleGesto, checkMoveableTarget } from \"./gesto/getAbleGesto\";\nimport { plus } from \"@scena/matrix\";\nimport {\n    addClass, cancelAnimationFrame, find,\n    getKeys, IObject, removeClass, requestAnimationFrame,\n} from \"@daybrush/utils\";\nimport { renderLine } from \"./renderDirections\";\nimport { fitPoints, getAreaSize, getOverlapSize, isInside } from \"overlap-area\";\nimport EventManager from \"./EventManager\";\nimport styled from \"react-css-styled\";\nimport EventEmitter from \"@scena/event-emitter\";\nimport { getMoveableTargetInfo } from \"./utils/getMoveableTargetInfo\";\nimport { VIEW_DRAGGING } from \"./classNames\";\nimport { diff } from \"@egjs/list-differ\";\n\nexport default class MoveableManager<T = {}>\n    extends React.PureComponent<MoveableManagerProps<T>, MoveableManagerState> {\n    public static defaultProps: Required<MoveableManagerProps> = {\n        target: null,\n        dragTarget: null,\n        container: null,\n        rootContainer: null,\n        origin: true,\n        parentMoveable: null,\n        wrapperMoveable: null,\n        parentPosition: null,\n        portalContainer: null,\n        useResizeObserver: false,\n        ables: [],\n        pinchThreshold: 20,\n        dragArea: false,\n        passDragArea: false,\n        transformOrigin: \"\",\n        className: \"\",\n        zoom: 1,\n        triggerAblesSimultaneously: false,\n        padding: {},\n        pinchOutside: true,\n        checkInput: false,\n        groupable: false,\n        hideDefaultLines: false,\n        cspNonce: \"\",\n        translateZ: 0,\n        cssStyled: null,\n        customStyledMap: {},\n        props: {},\n        stopPropagation: false,\n        preventClickDefault: false,\n        preventClickEventOnDrag: true,\n        flushSync: defaultSync,\n        firstRenderState: null,\n        viewContainer: null,\n    };\n    public state: MoveableManagerState = {\n        container: null,\n        gestos: {},\n        renderPoses: [[0, 0], [0, 0], [0, 0], [0, 0]],\n        disableNativeEvent: false,\n        ...getMoveableTargetInfo(null),\n    };\n    public renderState: Record<string, any> = {};\n    public enabledAbles: Able[] = [];\n    public targetAbles: Able[] = [];\n    public controlAbles: Able[] = [];\n    public controlBox!: { getElement(): HTMLElement };\n    public areaElement!: HTMLElement;\n    public targetGesto!: Gesto;\n    public controlGesto!: Gesto;\n    public rotation = 0;\n    public scale: number[] = [1, 1];\n    public isUnmounted = false;\n\n    public events: Record<string, EventManager | null> = {\n        \"mouseEnter\": null,\n        \"mouseLeave\": null,\n    };\n\n    protected _emitter: EventEmitter = new EventEmitter();\n    protected _prevTarget: HTMLElement | SVGElement | null | undefined = null;\n    protected _prevDragArea = false;\n    protected _isPropTargetChanged = false;\n\n    private _observer: ResizeObserver | null = null;\n    private _observerId = 0;\n    public _rootContainer: HTMLElement | null | undefined = null;\n    private _viewContainer: HTMLElement | null | undefined = null;\n    private _viewClassNames: string[] = [];\n\n    public render() {\n        const props = this.props;\n        const state = this.getState();\n        const {\n            parentPosition,\n            className,\n            target: propsTarget,\n            zoom, cspNonce,\n            translateZ,\n            cssStyled: ControlBoxElement,\n            portalContainer,\n            groupable,\n        } = props;\n\n        this._checkUpdateRootContainer();\n        this.checkUpdate();\n        this.updateRenderPoses();\n\n        const [parentLeft, parentTop] = parentPosition as number[] || [0, 0];\n        const {\n            left,\n            top,\n            target: stateTarget,\n            direction,\n            hasFixed,\n        } = state;\n        const groupTargets = (props as any).targets;\n        const isDisplay = ((groupTargets && groupTargets.length) || propsTarget) && (stateTarget || groupable);\n        const isDragging = this.isDragging();\n        const ableAttributes: IObject<boolean> = {};\n        this.getEnabledAbles().forEach(able => {\n            ableAttributes[`data-able-${able.name.toLowerCase()}`] = true;\n        });\n        const ableClassName = this._getAbleClassName();\n\n        return (\n            <ControlBoxElement\n                cspNonce={cspNonce}\n                ref={ref(this, \"controlBox\")}\n                className={`${prefix(\"control-box\", direction === -1 ? \"reverse\" : \"\", isDragging ? \"dragging\" : \"\")} ${ableClassName} ${className}`}\n                {...ableAttributes}\n                onClick={this._onPreventClick}\n                portalContainer={portalContainer}\n                style={{\n                    \"position\": hasFixed ? \"fixed\" : \"absolute\",\n                    \"display\": isDisplay ? \"block\" : \"none\",\n                    \"visibility\": this.controlBox || this.props.firstRenderState ? \"visible\" : \"hidden\",\n                    \"transform\": `translate3d(${left - parentLeft}px, ${top - parentTop}px, ${translateZ})`,\n                    \"--zoom\": zoom,\n                    \"--zoompx\": `${zoom}px`,\n                }}>\n                {this.renderAbles()}\n                {this._renderLines()}\n            </ControlBoxElement>\n        );\n    }\n    public componentDidMount() {\n        this.isUnmounted = false;\n        this.controlBox.getElement();\n        const props = this.props;\n        const { parentMoveable, container, wrapperMoveable } = props;\n\n\n        this._checkUpdateRootContainer();\n        this._checkUpdateViewContainer();\n        this._updateTargets();\n        this._updateNativeEvents();\n        this._updateEvents();\n        this.updateCheckInput();\n        this._updateObserver(this.props);\n\n        if (!container && !parentMoveable && !wrapperMoveable) {\n            this.updateRect(\"\", false, true);\n            this.forceUpdate();\n        }\n    }\n    public componentDidUpdate(prevProps: any) {\n        this._checkUpdateRootContainer();\n        this._checkUpdateViewContainer();\n        this._updateNativeEvents();\n        this._updateEvents();\n        this._updateTargets();\n        this.updateCheckInput();\n        this._updateObserver(prevProps);\n    }\n    public componentWillUnmount() {\n        this.isUnmounted = true;\n        this._emitter.off();\n\n        const viewContainer = this._viewContainer;\n\n        if (viewContainer) {\n            this._changeAbleViewClassNames([]);\n        }\n        unset(this, \"targetGesto\");\n        unset(this, \"controlGesto\");\n\n        const events = this.events;\n        for (const name in events) {\n            const manager = events[name];\n            manager && manager.destroy();\n        }\n    }\n    public getTargets(): Array<HTMLElement | SVGElement> {\n        const target = this.props.target;\n        return target ? [target] : [];\n    }\n    /**\n     * Get the able used in MoveableManager.\n     * @method Moveable#getAble\n     * @param - able name\n     */\n    public getAble<T extends Able>(ableName: string): T | undefined {\n        const ables: Able[] = this.props.ables || [];\n\n        return find(ables, able => able.name === ableName) as T;\n    }\n    public getContainer(): HTMLElement | SVGElement {\n        const { parentMoveable, wrapperMoveable, container } = this.props;\n\n        return container!\n            || (wrapperMoveable && wrapperMoveable.getContainer())\n            || (parentMoveable && parentMoveable.getContainer())\n            || this.controlBox.getElement().parentElement!;\n    }\n    /**\n     * Check if the target is an element included in the moveable.\n     * @method Moveable#isMoveableElement\n     * @param - the target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"click\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *         moveable.target = e.target;\n     *     }\n     * });\n     */\n    public isMoveableElement(target: Element) {\n        return target && (target.getAttribute?.(\"class\") || \"\").indexOf(PREFIX) > -1;\n    }\n    /**\n     * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\n     * @method Moveable#dragStart\n     * @param - external `MouseEvent`or `TouchEvent`\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *          moveable.dragStart(e);\n     *     }\n     * });\n     */\n    public dragStart(e: MouseEvent | TouchEvent) {\n        const targetGesto = this.targetGesto;\n        const controlGesto = this.controlGesto;\n\n        if (targetGesto && checkMoveableTarget(this)({ inputEvent: e })) {\n            if (!targetGesto.isFlag()) {\n                targetGesto.triggerDragStart(e);\n            }\n        } else if (controlGesto && this.isMoveableElement(e.target as Element)) {\n            if (!controlGesto.isFlag()) {\n                controlGesto.triggerDragStart(e);\n            }\n        }\n        return this;\n    }\n    /**\n     * Hit test an element or rect on a moveable target.\n     * @method Moveable#hitTest\n     * @param - element or rect to test\n     * @return - Get hit test rate (rate > 0 is hitted)\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.hitTest(e.target) > 0) {\n     *          console.log(\"hiited\");\n     *     }\n     * });\n     */\n    public hitTest(el: Element | HitRect): number {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return 0;\n        }\n        let rect: Required<HitRect>;\n\n        if (el instanceof Element) {\n            const clientRect = el.getBoundingClientRect();\n\n            rect = {\n                left: clientRect.left,\n                top: clientRect.top,\n                width: clientRect.width,\n                height: clientRect.height,\n            };\n        } else {\n            rect = { width: 0, height: 0, ...el };\n        }\n\n        const {\n            left: rectLeft,\n            top: rectTop,\n            width: rectWidth,\n            height: rectHeight,\n        } = rect;\n        const points = fitPoints([pos1, pos2, pos4, pos3], targetClientRect);\n        const size = getOverlapSize(points, [\n            [rectLeft, rectTop],\n            [rectLeft + rectWidth, rectTop],\n            [rectLeft + rectWidth, rectTop + rectHeight],\n            [rectLeft, rectTop + rectHeight],\n        ]);\n        const totalSize = getAreaSize(points);\n\n        if (!size || !totalSize) {\n            return 0;\n        }\n\n        return Math.min(100, size / totalSize * 100);\n    }\n    /**\n     * Whether the coordinates are inside Moveable\n     * @method Moveable#isInside\n     * @param - x coordinate\n     * @param - y coordinate\n     * @return - True if the coordinate is in moveable or false\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.isInside(e.clientX, e.clientY)) {\n     *          console.log(\"inside\");\n     *     }\n     * });\n     */\n    public isInside(clientX: number, clientY: number) {\n        const { target, pos1, pos2, pos3, pos4, targetClientRect } = this.state;\n\n        if (!target) {\n            return false;\n        }\n        return isInside([clientX, clientY], fitPoints([pos1, pos2, pos4, pos3], targetClientRect));\n    }\n    /**\n     * If the width, height, left, and top of all elements change, update the shape of the moveable.\n     * @method Moveable#updateRect\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"resize\", e => {\n     *     moveable.updateRect();\n     * });\n     */\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        const props = this.props;\n        const parentMoveable = props.parentMoveable;\n        const state = this.state;\n        const target = (state.target || this.props.target) as HTMLElement | SVGElement;\n        const container = this.getContainer();\n        const rootContainer = parentMoveable\n            ? (parentMoveable as any)._rootContainer\n            : this._rootContainer;\n        this.updateState(\n            getMoveableTargetInfo(\n                this.controlBox && this.controlBox.getElement(),\n                target,\n                container,\n                container,\n                rootContainer || container,\n                // isTarget ? state : undefined\n            ),\n            parentMoveable ? false : isSetState,\n        );\n    }\n    /**\n     * Check if the moveable state is being dragged.\n     * @method Moveable#isDragging\n     * @param - If you want to check if able is dragging, specify ableName.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // false\n     * console.log(moveable.isDragging());\n     *\n     * moveable.on(\"drag\", () => {\n     *   // true\n     *   console.log(moveable.isDragging());\n     * });\n     */\n    public isDragging(ableName?: string) {\n        const targetGesto = this.targetGesto;\n        const controlGesto = this.controlGesto;\n\n        if (targetGesto?.isFlag()) {\n            if (!ableName) {\n                return true;\n            }\n            const data = targetGesto.getEventData();\n\n            return !!data[ableName]?.isEventStart;\n        }\n        if (controlGesto?.isFlag()) {\n            if (!ableName) {\n                return true;\n            }\n            const data = controlGesto.getEventData();\n\n            return !!data[ableName]?.isEventStart;\n        }\n        return false;\n    }\n    /**\n     * If the width, height, left, and top of the only target change, update the shape of the moveable.\n     * @method Moveable#updateTarget\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.updateTarget();\n     */\n    public updateTarget(type?: \"Start\" | \"\" | \"End\") {\n        this.updateRect(type, true);\n    }\n    /**\n     * You can get the vertex information, position and offset size information of the target based on the container.\n     * @method Moveable#getRect\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const rectInfo = moveable.getRect();\n     */\n    public getRect(): RectInfo {\n        const state = this.state;\n        const poses = getAbsolutePosesByState(this.state);\n        const [pos1, pos2, pos3, pos4] = poses;\n        const rect = getRect(poses);\n        const {\n            width: offsetWidth,\n            height: offsetHeight,\n        } = state;\n        const {\n            width,\n            height,\n            left,\n            top,\n        } = rect;\n        const statePos = [state.left, state.top];\n        const origin = plus(statePos, state.origin);\n        const beforeOrigin = plus(statePos, state.beforeOrigin);\n        const transformOrigin = state.transformOrigin;\n\n        return {\n            width,\n            height,\n            left,\n            top,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            offsetWidth,\n            offsetHeight,\n            beforeOrigin,\n            origin,\n            transformOrigin,\n            rotation: this.getRotation(),\n        };\n    }\n    /**\n     * Get a manager that manages the moveable's state and props.\n     * @method Moveable#getManager\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const manager = moveable.getManager(); // real moveable class instance\n     */\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this as any;\n    }\n    public getRotation() {\n        const {\n            pos1,\n            pos2,\n            direction,\n        } = this.state;\n\n        return getAbsoluteRotation(pos1, pos2, direction);\n    }\n    /**\n     * Request able through a method rather than an event.\n     * At the moment of execution, requestStart is executed,\n     * and then request and requestEnd can be executed through Requester.\n     * @method Moveable#request\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.OriginDraggable.html#request|OriginDraggable Requester}\n     * @param - ableName\n     * @param - request to be able params.\n     * @param - If isInstant is true, request and requestEnd are executed immediately.\n     * @return - Able Requester. If there is no request in able, nothing will work.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     *\n     * // Start move\n     * const requester = moveable.request(\"draggable\");\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.requestEnd();\n     */\n    public request(ableName: string, param: IObject<any> = {}, isInstant?: boolean): Requester {\n        const { ables, groupable } = this.props as any;\n        const requsetAble: Able = ables!.filter((able: Able) => able.name === ableName)[0];\n\n        if (this.isDragging() || !requsetAble || !requsetAble.request) {\n            return {\n                request() {\n                    return this;\n                },\n                requestEnd() {\n                    return this;\n                },\n            };\n        }\n        const self = this;\n        const ableRequester = requsetAble.request(this);\n\n        const requestInstant = isInstant || param.isInstant;\n        const ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\n        const eventAffix = `${(groupable ? \"Group\" : \"\")}${ableRequester.isControl ? \"Control\" : \"\"}`;\n\n        const requester = {\n            request(ableParam: IObject<any>) {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"\", {\n                    ...ableRequester.request(ableParam),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n            requestEnd() {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"End\", {\n                    ...ableRequester.requestEnd(),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n        };\n\n        triggerAble(self, ableType, \"drag\", eventAffix, \"Start\", {\n            ...ableRequester.requestStart(param),\n            requestAble: ableName,\n            isRequest: true,\n        }, requestInstant);\n\n        return requestInstant ? requester.request(param).requestEnd() : requester;\n    }\n    /**\n     * Remove the Moveable object and the events.\n     * @method Moveable#destroy\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.destroy();\n     */\n    public destroy(): void {\n        this.componentWillUnmount();\n    }\n    public updateRenderPoses() {\n        const state = this.getState();\n        const props = this.props;\n        const {\n            originalBeforeOrigin, transformOrigin,\n            allMatrix, is3d,\n            pos1, pos2, pos3, pos4,\n            left: stateLeft, top: stateTop,\n        } = state;\n        const {\n            left = 0,\n            top = 0,\n            bottom = 0,\n            right = 0,\n        } = (props.padding || {}) as PaddingBox;\n        const n = is3d ? 4 : 3;\n        const absoluteOrigin = this.controlBox && (props as any).groupable\n            ? originalBeforeOrigin : plus(originalBeforeOrigin, [stateLeft, stateTop]);\n\n        state.renderPoses = [\n            plus(pos1, calculatePadding(allMatrix, [-left, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos2, calculatePadding(allMatrix, [right, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos3, calculatePadding(allMatrix, [-left, bottom], transformOrigin, absoluteOrigin, n)),\n            plus(pos4, calculatePadding(allMatrix, [right, bottom], transformOrigin, absoluteOrigin, n)),\n        ];\n    }\n    public checkUpdate() {\n        this._isPropTargetChanged = false;\n        const { target, container, parentMoveable } = this.props;\n        const {\n            target: stateTarget,\n            container: stateContainer,\n        } = this.state;\n\n        if (!stateTarget && !target) {\n            return;\n        }\n        this.updateAbles();\n\n        const isTargetChanged = !equals(stateTarget, target);\n        const isChanged = isTargetChanged || !equals(stateContainer, container);\n\n        if (!isChanged) {\n            return;\n        }\n        const moveableContainer = container || this.controlBox;\n\n        if (moveableContainer) {\n            this.unsetAbles();\n        }\n        this.updateState({ target, container });\n\n        if (!parentMoveable && moveableContainer) {\n            this.updateRect(\"End\", false, false);\n        }\n        this._isPropTargetChanged = isTargetChanged;\n    }\n    public waitToChangeTarget(): Promise<void> {\n        return new Promise(() => { });\n    }\n    public triggerEvent(name: string, e: any): any {\n        this._emitter.trigger(name, e);\n        const callback = (this.props as any)[name];\n\n        return callback && callback(e);\n    }\n    public useCSS(tag: string, css: string) {\n        const customStyleMap = this.props.customStyledMap as Record<string, any>;\n\n        const key = tag + css;\n\n        if (!customStyleMap[key]) {\n            customStyleMap[key] = styled(tag, css);\n        }\n        return customStyleMap[key];\n    }\n    public checkUpdateRect = () => {\n        if (this.isDragging()) {\n            return;\n        }\n        const parentMoveable = this.props.parentMoveable;\n\n        if (parentMoveable) {\n            (parentMoveable as MoveableManager).checkUpdateRect();\n            return;\n        }\n        cancelAnimationFrame(this._observerId);\n        this._observerId = requestAnimationFrame(() => {\n            if (this.isDragging()) {\n                return;\n            }\n            this.updateRect();\n        });\n    }\n    public getState(): MoveableManagerState {\n        const firstRenderState = this.props.firstRenderState as any;\n        if (firstRenderState && !this.controlBox) {\n            return firstRenderState;\n        } else {\n            return this.state;\n        }\n    }\n    public updateSelectors() { }\n    protected unsetAbles() {\n        this.targetAbles.forEach(able => {\n            if (able.unset) {\n                able.unset(this);\n            }\n        });\n    }\n    protected updateAbles(\n        ables: Able[] = this.props.ables!,\n        eventAffix: string = \"\",\n    ) {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const enabledAbles = ables!.filter(able => able && (\n            (able.always && props[able.name] !== false)\n            || props[able.name]));\n\n        const dragStart = `drag${eventAffix}Start` as \"dragStart\";\n        const pinchStart = `pinch${eventAffix}Start` as \"pinchStart\";\n        const dragControlStart = `drag${eventAffix}ControlStart` as \"dragControlStart\";\n\n        const targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart], triggerAblesSimultaneously);\n        const controlAbles = filterAbles(enabledAbles, [dragControlStart], triggerAblesSimultaneously);\n\n        this.enabledAbles = enabledAbles;\n        this.targetAbles = targetAbles;\n        this.controlAbles = controlAbles;\n    }\n    protected updateState(nextState: any, isSetState?: boolean) {\n        if (isSetState) {\n            if (this.isUnmounted) {\n                return;\n            }\n            this.setState(nextState);\n        } else {\n            const state = this.state;\n\n            for (const name in nextState) {\n                (state as any)[name] = nextState[name];\n            }\n        }\n    }\n    protected getEnabledAbles() {\n        const props = this.props as any;\n        const ables: Able[] = props.ables!;\n        return ables.filter(able => able && props[able.name]);\n    }\n    protected renderAbles() {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const Renderer = {\n            createElement,\n        };\n\n        this.renderState = {};\n\n        return groupByMap(flat<any>(\n            filterAbles(this.getEnabledAbles(), [\"render\"], triggerAblesSimultaneously).map(({ render }) => {\n                return render!(this, Renderer) || [];\n            })).filter(el => el), ({ key }) => key).map(group => group[0]);\n    }\n    protected updateCheckInput() {\n        this.targetGesto && (this.targetGesto.options.checkInput = this.props.checkInput);\n    }\n    protected _updateObserver(prevProps: MoveableDefaultOptions) {\n        const props = this.props;\n        const target = props.target;\n\n        if (!window.ResizeObserver || !target || !props.useResizeObserver) {\n            this._observer?.disconnect();\n            return;\n        }\n\n        if (prevProps.target === target && this._observer) {\n            return;\n        }\n\n        const observer = new ResizeObserver(this.checkUpdateRect);\n\n        observer.observe(target!, {\n            box: \"border-box\",\n        });\n        this._observer = observer;\n\n        return;\n    }\n    protected _updateEvents() {\n        const controlBoxElement = this.controlBox.getElement();\n        const hasTargetAble = this.targetAbles.length;\n        const hasControlAble = this.controlAbles.length;\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const isUnset = (!hasTargetAble && this.targetGesto)\n            || this._isTargetChanged(true);\n\n        if (isUnset) {\n            unset(this, \"targetGesto\");\n            this.updateState({ gesto: null });\n        }\n        if (!hasControlAble) {\n            unset(this, \"controlGesto\");\n        }\n\n        if (target && hasTargetAble && !this.targetGesto) {\n            this.targetGesto = getTargetAbleGesto(this, target!, \"\");\n        }\n        if (!this.controlGesto && hasControlAble) {\n            this.controlGesto = getAbleGesto(this, controlBoxElement, \"controlAbles\", \"Control\");\n        }\n    }\n    protected _updateTargets() {\n        const props = this.props;\n\n        this._prevTarget = props.dragTarget || props.target;\n        this._prevDragArea = props.dragArea!;\n    }\n    private _renderLines() {\n        const props = this.props;\n        const {\n            zoom,\n            hideDefaultLines,\n            hideChildMoveableDefaultLines,\n            parentMoveable,\n        } = props as MoveableManagerProps<GroupableProps>;\n\n        if (hideDefaultLines || (parentMoveable && hideChildMoveableDefaultLines)) {\n            return [];\n        }\n        const renderPoses = this.getState().renderPoses;\n        const Renderer = {\n            createElement,\n        };\n\n        return [\n            [0, 1],\n            [1, 3],\n            [3, 2],\n            [2, 0],\n        ].map(([from, to], i) => {\n            return renderLine(Renderer, \"\", renderPoses[from], renderPoses[to], zoom!, `render-line-${i}`);\n        });\n    }\n    private _onPreventClick = (e: any) => {\n        e.stopPropagation();\n        e.preventDefault();\n        // removeEvent(window, \"click\", this._onPreventClick, true);\n    }\n    private _isTargetChanged(useDragArea?: boolean) {\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const prevTarget = this._prevTarget;\n        const prevDragArea = this._prevDragArea;\n        const dragArea = props.dragArea;\n\n        // check target without dragArea\n        const isTargetChanged = !dragArea && prevTarget !== target;\n        const isDragAreaChanged = (useDragArea || dragArea) && prevDragArea !== dragArea;\n\n        return isTargetChanged || isDragAreaChanged;\n    }\n    private _updateNativeEvents() {\n        const props = this.props;\n        const target = props.dragArea ? this.areaElement : this.state.target;\n        const events = this.events;\n        const eventKeys = getKeys(events);\n\n        if (this._isTargetChanged()) {\n            for (const eventName in events) {\n                const manager = events[eventName];\n                manager && manager.destroy();\n                events[eventName] = null;\n            }\n        }\n        if (!target) {\n            return;\n        }\n        const enabledAbles = this.enabledAbles;\n        eventKeys.forEach(eventName => {\n            const ables = filterAbles(enabledAbles, [eventName] as any);\n            const hasAbles = ables.length > 0;\n            let manager = events[eventName];\n\n            if (!hasAbles) {\n                if (manager) {\n                    manager.destroy();\n                    events[eventName] = null;\n                }\n                return;\n            }\n            if (!manager) {\n                manager = new EventManager(target, this, eventName);\n                events[eventName] = manager;\n            }\n            manager.setAbles(ables);\n        });\n    }\n    private _checkUpdateRootContainer() {\n        const rootContainer = this.props.rootContainer;\n\n        if (!this._rootContainer && rootContainer) {\n            this._rootContainer = getRefTarget(rootContainer, true);\n        }\n    }\n    private _checkUpdateViewContainer() {\n        const viewContainerOption = this.props.viewContainer;\n\n        if (!this._viewContainer && viewContainerOption) {\n            this._viewContainer = getRefTarget(viewContainerOption, true);\n        }\n        const viewContainer = this._viewContainer;\n\n        if (viewContainer) {\n            this._changeAbleViewClassNames([\n                ...this._getAbleViewClassNames(),\n                this.isDragging() ? VIEW_DRAGGING : \"\",\n            ]);\n        }\n    }\n    private _changeAbleViewClassNames(classNames: string[]) {\n        const viewContainer = this._viewContainer!;\n        const nextClassNames = groupBy(\n            classNames.filter(Boolean),\n            el => el,\n        ).map(([className]) => className);\n        const prevClassNames = this._viewClassNames;\n\n        const {\n            removed,\n            added,\n        } = diff(prevClassNames, nextClassNames);\n\n        removed.forEach(index => {\n            removeClass(viewContainer, prevClassNames[index]);\n        });\n        added.forEach(index => {\n            addClass(viewContainer, nextClassNames[index]);\n        });\n\n        this._viewClassNames = nextClassNames;\n\n    }\n    private _getAbleViewClassNames() {\n        return this.getEnabledAbles().map(able => {\n            return (able.viewClassName?.(this) || \"\");\n        }).join(\" \").split(/\\s+/g);\n    }\n    private _getAbleClassName() {\n        const ables = this.getEnabledAbles();\n\n        const targetGesto = this.targetGesto;\n        const controlGesto = this.controlGesto;\n        const targetGestoData: Record<string, any> = targetGesto?.isFlag()\n            ? targetGesto.getEventData() : {};\n        const controlGestoData: Record<string, any> = controlGesto?.isFlag()\n            ? controlGesto.getEventData() : {};\n\n        return ables.map(able => {\n            const name = able.name;\n            let className = able.className?.(this) || \"\";\n\n            if (\n                targetGestoData[name]?.isEventStart\n                || controlGestoData[name]?.isEventStart\n            ) {\n                className += ` ${prefix(`${name}-dragging`)}`;\n            }\n            return className.trim();\n        }).filter(Boolean).join(\" \");\n    }\n}\n\n/**\n * The target to indicate Moveable Control Box.\n * @name Moveable#target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n */\n/**\n * Zooms in the elements of a moveable.\n * @name Moveable#zoom\n * @default 1\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.zoom = 2;\n */\n\n/**\n * Whether the target size is detected and updated whenever it changes.\n * @name Moveable#useResizeObserver\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.useResizeObserver = true;\n */\n\n/**\n * Resize, Scale Events at edges\n * @name Moveable#edge\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.edge = true;\n */\n\n/**\n * You can specify the className of the moveable controlbox.\n * @name Moveable#className\n * @default \"\"\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   className: \"\",\n * });\n *\n * moveable.className = \"moveable1\";\n */\n\n/**\n * The target(s) to drag Moveable target(s)\n * @name Moveable#dragTarget\n * @default target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n * moveable.dragTarget = document.querySelector(\".dragTarget\");\n */\n\n/**\n * `renderStart` event occurs at the first start of all events.\n * @memberof Moveable\n * @event renderStart\n * @param {Moveable.OnRenderStart} - Parameters for the `renderStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderStart\", ({ target }) => {\n *     console.log(\"onRenderStart\", target);\n * });\n */\n\n/**\n * `render` event occurs before the target is drawn on the screen.\n * @memberof Moveable\n * @event render\n * @param {Moveable.OnRender} - Parameters for the `render` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"render\", ({ target }) => {\n *     console.log(\"onRender\", target);\n * });\n */\n\n/**\n * `renderEnd` event occurs at the end of all events.\n * @memberof Moveable\n * @event renderEnd\n * @param {Moveable.OnRenderEnd} - Parameters for the `renderEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderEnd\", ({ target }) => {\n *     console.log(\"onRenderEnd\", target);\n * });\n */\n\n/**\n * `renderGroupStart` event occurs at the first start of all events in group.\n * @memberof Moveable\n * @event renderGroupStart\n * @param {Moveable.OnRenderGroupStart} - Parameters for the `renderGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupStart\", ({ targets }) => {\n *     console.log(\"onRenderGroupStart\", targets);\n * });\n */\n\n/**\n * `renderGroup` event occurs before the target is drawn on the screen in group.\n * @memberof Moveable\n * @event renderGroup\n * @param {Moveable.OnRenderGroup} - Parameters for the `renderGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroup\", ({ targets }) => {\n *     console.log(\"onRenderGroup\", targets);\n * });\n */\n\n/**\n * `renderGroupEnd` event occurs at the end of all events in group.\n * @memberof Moveable\n * @event renderGroupEnd\n * @param {Moveable.OnRenderGroupEnd} - Parameters for the `renderGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupEnd\", ({ targets }) => {\n *     console.log(\"onRenderGroupEnd\", targets);\n * });\n */\n","import { minus } from \"@scena/matrix\";\nimport { refs } from \"framework-utils\";\nimport MoveableManager from \"../MoveableManager\";\nimport { renderLine } from \"../renderDirections\";\nimport { Renderer, MoveableGroupInterface, GroupableProps } from \"../types\";\nimport { flat } from \"../utils\";\n\nexport default {\n    name: \"groupable\",\n    props: {\n        defaultGroupRotate: Number,\n        defaultGroupOrigin: String,\n        groupable: Boolean,\n        targetGroups: Object,\n        hideChildMoveableDefaultLines: Boolean,\n    } as const,\n    events: {} as const,\n    render(moveable: MoveableGroupInterface<GroupableProps>, React: Renderer): any[] {\n        const targets = moveable.props.targets || [];\n\n        moveable.moveables = [];\n        const { left, top } = moveable.state;\n        const position = [left, top];\n        const props = moveable.props;\n        const zoom = props.zoom || 1;\n        const renderGroupRects = moveable.renderGroupRects;\n\n        return [\n            ...targets.map((target, i) => {\n                return <MoveableManager<GroupableProps>\n                    key={\"moveable\" + i}\n                    ref={refs(moveable, \"moveables\", i)}\n                    target={target}\n                    origin={false}\n                    cssStyled={props.cssStyled}\n                    customStyledMap={props.customStyledMap}\n                    useResizeObserver={props.useResizeObserver}\n                    hideChildMoveableDefaultLines={props.hideChildMoveableDefaultLines}\n                    parentMoveable={moveable}\n                    parentPosition={position}\n                    zoom={zoom}\n                />;\n            }),\n            ...flat(renderGroupRects.map(({ pos1, pos2, pos3, pos4 }, i) => {\n                const poses = [pos1, pos2, pos3, pos4];\n\n                return [\n                    [0, 1],\n                    [1, 3],\n                    [3, 2],\n                    [2, 0],\n                ].map(([from, to], j) => {\n                    return renderLine(\n                        React,\n                        \"\",\n                        minus(poses[from], position),\n                        minus(poses[to], position),\n                        zoom,\n                        `group-rect-${i}-${j}`,\n                    );\n                });\n            })),\n        ];\n    },\n};\n","import {\n    MoveableManagerInterface, MoveableGroupInterface,\n    ClickableProps, OnClick, OnClickGroup,\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport { findIndex } from \"@daybrush/utils\";\nimport { makeAble } from \"./AbleManager\";\n\nexport default makeAble(\"clickable\", {\n    props: {\n        clickable: Boolean,\n    },\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    always: true,\n    dragRelation: \"weak\",\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    dragStart() {\n        return;\n    },\n    dragControlStart() {\n        return;\n    },\n    dragGroupStart(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        e.datas.inputTarget = e.inputEvent && e.inputEvent.target;\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        const target = moveable.props.target!;\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n        const isMoveableElement = moveable.isMoveableElement(inputTarget);\n        const containsElement = !isMoveableElement && moveable.controlBox.getElement().contains(inputTarget);\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            || containsElement\n            // External event duplicate target or dragAreaElement\n        ) {\n            return;\n        }\n        const containsTarget = target.contains(inputTarget);\n\n        triggerEvent(moveable, \"onClick\", fillParams<OnClick>(moveable, e, {\n            isDouble: e.isDouble,\n            inputTarget,\n            isTarget: target === inputTarget,\n            moveableTarget: moveable.props.target!,\n            containsTarget,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<ClickableProps>, e: any) {\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            // External event duplicate target or dragAreaElement\n            || e.datas.inputTarget === inputTarget\n        ) {\n            return;\n        }\n        const targets = moveable.props.targets!;\n        let targetIndex = targets.indexOf(inputTarget);\n        const isTarget = targetIndex > -1;\n        let containsTarget = false;\n\n        if (targetIndex === -1) {\n            targetIndex = findIndex(targets, parentTarget => parentTarget.contains(inputTarget));\n            containsTarget = targetIndex > -1;\n        }\n\n        triggerEvent(moveable, \"onClickGroup\", fillParams<OnClickGroup>(moveable, e, {\n            isDouble: e.isDouble,\n            targets,\n            inputTarget,\n            targetIndex,\n            isTarget,\n            containsTarget,\n            moveableTarget: targets[targetIndex],\n        }));\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragEnd(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        this.dragEnd(moveable, e);\n    },\n});\n\n/**\n * When you click on the element, the `click` event is called.\n * @memberof Moveable\n * @event click\n * @param {Moveable.OnClick} - Parameters for the `click` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"click\", ({ hasTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\n * });\n */\n\n/**\n * When you click on the element inside the group, the `clickGroup` event is called.\n * @memberof Moveable\n * @event clickGroup\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"clickGroup\", ({ inputTarget, isTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", inputTarget, isTarget, containsTarget, targetIndex);\n * });\n */\n","import { hasClass } from \"@daybrush/utils\";\nimport { DraggableProps, MoveableGroupInterface, MoveableManagerInterface, Renderer } from \"../types\";\nimport { prefix } from \"../utils\";\nimport Draggable from \"./Draggable\";\nimport { makeAble } from \"./AbleManager\";\nimport { renderEdgeLines } from \"../renderDirections\";\n\nfunction getDraggableEvent(e: any) {\n    let datas = e.originalDatas.draggable;\n    if (!datas) {\n        e.originalDatas.draggable = {};\n        datas = e.originalDatas.draggable;\n    }\n    return { ...e, datas };\n}\nexport default makeAble(\"edgeDraggable\", {\n    css: [\n        `.edge.edgeDraggable.line {\n    cursor: move;\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<DraggableProps>, React: Renderer) {\n        const props = moveable.props;\n        const edge = props.edgeDraggable!;\n\n        if (!edge) {\n            return [];\n        }\n        return renderEdgeLines(\n            React,\n            \"edgeDraggable\",\n            edge,\n            moveable.getState().renderPoses,\n            props.zoom!,\n        );\n    },\n    dragControlCondition(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        if (!moveable.props.edgeDraggable || !e.inputEvent) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n        return hasClass(target, prefix(\"direction\"))\n            && hasClass(target, prefix(\"edge\"))\n            && hasClass(target, prefix(\"edgeDraggable\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        (moveable.state as any).snapRenderInfo = {\n            request: e.isRequest,\n            snap: true,\n            center: true,\n        };\n        return Draggable.dragStart(moveable, getDraggableEvent(e));\n    },\n    dragControl(moveable: MoveableManagerInterface<DraggableProps>, e: any) {\n        return Draggable.drag(moveable, getDraggableEvent(e));\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragEnd(moveable, getDraggableEvent(e));\n    },\n    dragGroupControlCondition(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        if (!moveable.props.edgeDraggable || !e.inputEvent) {\n            return false;\n        }\n        const target = e.inputEvent.target;\n        return hasClass(target, prefix(\"direction\")) && hasClass(target, prefix(\"line\"));\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroupStart(moveable, getDraggableEvent(e));\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<DraggableProps>, e: any) {\n        return Draggable.dragGroup(moveable, getDraggableEvent(e));\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<DraggableProps, any>, e: any) {\n        return Draggable.dragGroupEnd(moveable, getDraggableEvent(e));\n    },\n    unset(moveable: any) {\n        return Draggable.unset(moveable);\n    },\n});\n\n/**\n * Whether to move by dragging the edge line (default: false)\n * @name Moveable.Draggable#edgeDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  draggable: true,\n *  edgeDraggable: false,\n * });\n *\n * moveable.edgeDraggable = true;\n */\n","export default {\n    name: \"individualGroupable\",\n    props: {\n        individualGroupable: Boolean,\n    } as const,\n    events: {} as const,\n} as const;\n","import Pinchable from \"./Pinchable\";\nimport Rotatable from \"./Rotatable\";\nimport Draggable from \"./Draggable\";\nimport Resizable from \"./Resizable\";\nimport Scalable from \"./Scalable\";\nimport Warpable from \"./Warpable\";\nimport Snappable from \"./Snappable\";\nimport DragArea from \"./DragArea\";\nimport Origin from \"./Origin\";\nimport Scrollable from \"./Scrollable\";\nimport Default from \"./Default\";\nimport Padding from \"./Padding\";\nimport Clippable from \"./Clippable\";\nimport OriginDraggable from \"./OriginDraggable\";\nimport Roundable from \"./Roundable\";\nimport { UnionToIntersection } from \"../types\";\nimport { invertObject } from \"../utils\";\nimport Groupable from \"./Groupable\";\nimport BeforeRenderable from \"./BeforeRenderable\";\nimport Renderable from \"./Renderable\";\nimport Clickable from \"./Clickable\";\nimport edgeDraggable from \"./edgeDraggable\";\nimport IndividualGroupable from \"./IndividualGroupable\";\n\nexport const MOVEABLE_ABLES = /*#__PURE__*/[\n    BeforeRenderable,\n    Default, Snappable, Pinchable, Draggable, edgeDraggable,\n    Resizable, Scalable, Warpable, Rotatable, Scrollable, Padding, Origin,\n    OriginDraggable,\n    Clippable, Roundable, Groupable, IndividualGroupable,\n    Clickable,\n    DragArea,\n    Renderable,\n] as const;\n\nexport const MOVEABLE_EVENTS_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...(\"events\" in able ? able.events : {})};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"events\"]>;\nexport const MOVEABLE_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...able.props};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"props\"]>;\n\nexport const MOVEABLE_EVENTS_MAP = /*#__PURE__*/invertObject(MOVEABLE_EVENTS_PROPS_MAP);\nexport const MOVEABLE_EVENTS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_EVENTS_MAP);\nexport const MOVEABLE_PROPS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_PROPS_MAP);\n","export function solveConstantsDistance(\n    [a, b, c]: [number, number, number],\n    pos: number[],\n) {\n    return (a * pos[0] + b * pos[1] + c) / Math.sqrt(a * a + b * b);\n}\nexport function solveC(\n    [a, b]: [number, number],\n    pos: number[],\n) {\n    // ax + by + c = 0\n    // -ax -by;\n    return -a * pos[0] - b * pos[1];\n}\n","import MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, GroupRect, MoveableTargetGroupsType, RectInfo } from \"./types\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\nimport { getAbleGesto, getTargetAbleGesto } from \"./gesto/getAbleGesto\";\nimport Groupable from \"./ables/Groupable\";\nimport { MIN_NUM, MAX_NUM, TINY_NUM } from \"./consts\";\nimport { getAbsolutePosesByState, equals, unset } from \"./utils\";\nimport { minus, plus } from \"@scena/matrix\";\nimport { getIntersectionPointsByConstants, getMinMaxs } from \"overlap-area\";\nimport { find, isArray, throttle } from \"@daybrush/utils\";\nimport { getMoveableTargetInfo } from \"./utils/getMoveableTargetInfo\";\nimport { solveC, solveConstantsDistance } from \"./Snappable/utils\";\n\nfunction getMaxPos(poses: number[][][], index: number) {\n    return Math.max(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getMinPos(poses: number[][][], index: number) {\n    return Math.min(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\n\n\nfunction getGroupRect(parentPoses: number[][][], rotation: number): GroupRect {\n    let pos1 = [0, 0];\n    let pos2 = [0, 0];\n    let pos3 = [0, 0];\n    let pos4 = [0, 0];\n    let width = 0;\n    let height = 0;\n\n    if (!parentPoses.length) {\n        return {\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            minX: 0,\n            minY: 0,\n            width,\n            height,\n            rotation,\n        };\n    }\n    const fixedRotation = throttle(rotation, TINY_NUM);\n\n    if (fixedRotation % 90) {\n        const rad = fixedRotation / 180 * Math.PI;\n        const a1 = Math.tan(rad);\n        const a2 = -1 / a1;\n        // ax = y  // -ax + y = 0 // 0 => 1\n        // -ax = y // ax + y = 0  // 0 => 3\n        const a1MinMax = [MAX_NUM, MIN_NUM];\n        const a1MinMaxPos = [[0, 0], [0, 0]];\n        const a2MinMax = [MAX_NUM, MIN_NUM];\n        const a2MinMaxPos = [[0, 0], [0, 0]];\n\n        parentPoses.forEach(poses => {\n            poses.forEach(pos => {\n\n                // const b1 = pos[1] - a1 * pos[0];\n                // const b2 = pos[1] - a2 * pos[0];\n\n                const a1Dist = solveConstantsDistance([-a1, 1, 0], pos);\n                const a2Dist = solveConstantsDistance([-a2, 1, 0], pos);\n\n                if (a1MinMax[0] > a1Dist) {\n                    a1MinMaxPos[0] = pos;\n                    a1MinMax[0] = a1Dist;\n                }\n                if (a1MinMax[1] < a1Dist) {\n                    a1MinMaxPos[1] = pos;\n                    a1MinMax[1] = a1Dist;\n                }\n                if (a2MinMax[0] > a2Dist) {\n                    a2MinMaxPos[0] = pos;\n                    a2MinMax[0] = a2Dist;\n                }\n                if (a2MinMax[1] < a2Dist) {\n                    a2MinMaxPos[1] = pos;\n                    a2MinMax[1] = a2Dist;\n                }\n            });\n        });\n\n        const [a1MinPos, a1MaxPos] = a1MinMaxPos;\n        const [a2MinPos, a2MaxPos] = a2MinMaxPos;\n\n        const minHorizontalLine = [-a1, 1, solveC([-a1, 1], a1MinPos)];\n        const maxHorizontalLine = [-a1, 1, solveC([-a1, 1], a1MaxPos)];\n\n        const minVerticalLine = [-a2, 1, solveC([-a2, 1], a2MinPos)];\n        const maxVerticalLine = [-a2, 1, solveC([-a2, 1], a2MaxPos)];\n\n        [pos1, pos2, pos3, pos4] = [\n            [minHorizontalLine, minVerticalLine],\n            [minHorizontalLine, maxVerticalLine],\n            [maxHorizontalLine, minVerticalLine],\n            [maxHorizontalLine, maxVerticalLine],\n        ].map(([line1, line2]) => getIntersectionPointsByConstants(line1, line2)[0]);\n\n        width = a2MinMax[1] - a2MinMax[0];\n        height = a1MinMax[1] - a1MinMax[0];\n    } else {\n        const minX = getMinPos(parentPoses, 0);\n        const minY = getMinPos(parentPoses, 1);\n        const maxX = getMaxPos(parentPoses, 0);\n        const maxY = getMaxPos(parentPoses, 1);\n\n        pos1 = [minX, minY];\n        pos2 = [maxX, minY];\n        pos3 = [minX, maxY];\n        pos4 = [maxX, maxY];\n        width = maxX - minX;\n        height = maxY - minY;\n        if (fixedRotation % 180) {\n            // 0\n            // 1 2\n            // 3 4\n            // 90\n            // 3 1\n            // 4 2\n            // 180\n            // 4 3\n            // 2 1\n            // 270\n            // 2 4\n            // 1 3\n            // 1, 2, 3,4 = 3 1 4 2\n            const changedX = [pos3, pos1, pos4, pos2];\n\n            [pos1, pos2, pos3, pos4] = changedX;\n            width = maxY - minY;\n            height = maxX - minX;\n        }\n\n    }\n    if (fixedRotation % 360 > 180) {\n        // 1 2   4 3\n        // 3 4   2 1\n        const changedX = [pos4, pos3, pos2, pos1];\n\n        [pos1, pos2, pos3, pos4] = changedX;\n    }\n    const { minX, minY } = getMinMaxs([pos1, pos2, pos3, pos4]);\n\n    return {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n        width,\n        height,\n        minX,\n        minY,\n        rotation,\n    };\n}\ntype SelfGroup = Array<MoveableManager | null | SelfGroup>;\ntype CheckedMoveableManager = { finded: boolean; manager: MoveableManager };\n\nfunction findMoveableGroups(\n    moveables: CheckedMoveableManager[],\n    childTargetGroups: MoveableTargetGroupsType,\n): SelfGroup {\n    const groups = childTargetGroups.map(targetGroup => {\n        if (isArray(targetGroup)) {\n            const childMoveableGroups = findMoveableGroups(moveables, targetGroup);\n            const length = childMoveableGroups.length;\n\n            if (length > 1) {\n                return childMoveableGroups;\n            } else if (length === 1) {\n                return childMoveableGroups[0];\n            } else {\n                return null;\n            }\n        } else {\n            const checked = find(moveables, ({ manager }) => manager.props.target === targetGroup)!;\n\n            if (checked) {\n                checked.finded = true;\n                return checked.manager;\n            }\n            return null;\n        }\n    }).filter(Boolean);\n\n    if (groups.length === 1 && isArray(groups[0])) {\n        return groups[0];\n    }\n    return groups;\n}\n\n/**\n * @namespace Moveable.Group\n * @description You can make targets moveable.\n */\nclass MoveableGroup extends MoveableManager<GroupableProps> {\n    public static defaultProps = {\n        ...MoveableManager.defaultProps,\n        transformOrigin: [\"50%\", \"50%\"],\n        groupable: true,\n        dragArea: true,\n        keepRatio: true,\n        targets: [],\n        defaultGroupRotate: 0,\n        defaultGroupOrigin: \"50% 50%\",\n    };\n    public differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    public moveables: MoveableManager[] = [];\n    public transformOrigin = \"50% 50%\";\n    public renderGroupRects: GroupRect[] = [];\n\n    public checkUpdate() {\n        this._isPropTargetChanged = false;\n        this.updateAbles();\n    }\n    public getTargets() {\n        return this.props.targets!;\n    }\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState = true) {\n        if (!this.controlBox) {\n            return;\n        }\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, false, false);\n        });\n\n        const state = this.state;\n        const props = this.props;\n        const moveables = this.moveables;\n        const target = state.target! || props.target!;\n        const checkeds = moveables.map(moveable => ({ finded: false, manager: moveable }));\n        const moveableGroups = findMoveableGroups(\n            checkeds,\n            this.props.targetGroups || [],\n        );\n\n        moveableGroups.push(...checkeds.filter(({ finded }) => !finded).map(({ manager }) => manager));\n\n        const renderGroupRects: GroupRect[] = [];\n        const isReset = !isTarget || (type !== \"\" && props.updateGroup);\n\n        function getMoveableGroupRect(group: SelfGroup, parentRotation: number, isRoot?: boolean): GroupRect {\n            const posesRotations = group.map(moveable => {\n                if (isArray(moveable)) {\n                    const rect = getMoveableGroupRect(moveable, parentRotation);\n                    const poses = [rect.pos1, rect.pos2, rect.pos3, rect.pos4];\n\n                    renderGroupRects.push(rect);\n                    return { poses, rotation: rect.rotation };\n                } else {\n                    return {\n                        poses: getAbsolutePosesByState(moveable!.state),\n                        rotation: moveable!.getRotation(),\n                    };\n                }\n            });\n            const rotations = posesRotations.map(({ rotation }) => rotation);\n\n            let groupRotation = 0;\n            const firstRotation = rotations[0];\n            const isSameRotation = rotations.every(nextRotation => {\n                return Math.abs(firstRotation - nextRotation) < 0.1;\n            });\n\n            if (isReset) {\n                groupRotation = isSameRotation ? firstRotation : (props.defaultGroupRotate || 0);\n            } else {\n                groupRotation = !isRoot && isSameRotation ? firstRotation : parentRotation;\n            }\n            const groupPoses = posesRotations.map(({ poses }) => poses);\n            const groupRect = getGroupRect(\n                groupPoses,\n                groupRotation,\n            );\n\n            return groupRect;\n        }\n        const rootGroupRect = getMoveableGroupRect(moveableGroups, this.rotation, true);\n\n        if (isReset) {\n            // reset rotataion\n            this.rotation = rootGroupRect.rotation;\n            this.transformOrigin = props.defaultGroupOrigin || \"50% 50%\";\n            this.scale = [1, 1];\n        }\n\n        this.renderGroupRects = renderGroupRects;\n        const rotation = this.rotation;\n        const scale = this.scale;\n        const { width, height, minX, minY } = rootGroupRect;\n\n        // tslint:disable-next-line: max-line-length\n        const transform = `rotate(${rotation}deg) scale(${scale[0] >= 0 ? 1 : -1}, ${scale[1] >= 0 ? 1 : -1})`;\n        target.style.cssText += `left:0px;top:0px; transform-origin: ${this.transformOrigin}; width:${width}px; height:${height}px;`\n            + `transform:${transform}`;\n        state.width = width;\n        state.height = height;\n\n        const container = this.getContainer();\n        const info = getMoveableTargetInfo(\n            this.controlBox.getElement(),\n            target,\n            this.controlBox.getElement(),\n            this.getContainer(),\n            this._rootContainer || container,\n            // state,\n        );\n        const pos = [info.left!, info.top!];\n        const [\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        ] = getAbsolutePosesByState(info); // info.left + info.pos(1 ~ 4)\n\n        const minPos = getMinMaxs([pos1, pos2, pos3, pos4]);\n        const delta = [minPos.minX, minPos.minY];\n        info.pos1 = minus(pos1, delta);\n        info.pos2 = minus(pos2, delta);\n        info.pos3 = minus(pos3, delta);\n        info.pos4 = minus(pos4, delta);\n        info.left = minX - info.left! + delta[0];\n        info.top = minY - info.top! + delta[1];\n        info.origin = minus(plus(pos, info.origin!), delta);\n        info.beforeOrigin = minus(plus(pos, info.beforeOrigin!), delta);\n        info.originalBeforeOrigin = plus(pos, info.originalBeforeOrigin!);\n        // info.transformOrigin = minus(plus(pos, info.transformOrigin!), delta);\n\n        const clientRect = info.targetClientRect!;\n        const direction = scale[0] * scale[1] > 0 ? 1 : -1;\n\n        clientRect.top += info.top - state.top;\n        clientRect.left += info.left - state.left;\n\n        target.style.transform = `translate(${-delta[0]}px, ${-delta[1]}px) ${transform}`;\n\n        this.updateState(\n            {\n                ...info,\n                direction,\n                beforeDirection: direction,\n            },\n            isSetState,\n        );\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public triggerEvent(name: string, e: any, isManager?: boolean): any {\n        if (isManager || name.indexOf(\"Group\") > -1) {\n            return super.triggerEvent(name as any, e);\n        } else {\n            this._emitter.trigger(name, e);\n        }\n    }\n    protected updateAbles() {\n        super.updateAbles([...this.props.ables!, Groupable], \"Group\");\n    }\n    protected _updateTargets() {\n        super._updateTargets();\n        this._prevTarget = this.props.dragTarget || this.areaElement;\n    }\n    protected _updateEvents() {\n        const state = this.state;\n        const props = this.props;\n\n        const prevTarget = this._prevTarget;\n        const nextTarget = props.dragTarget || this.areaElement;\n\n        if (prevTarget !== nextTarget) {\n            unset(this, \"targetGesto\");\n            unset(this, \"controlGesto\");\n            state.target = null;\n        }\n        if (!state.target) {\n            state.target = this.areaElement;\n            this.controlBox.getElement().style.display = \"block\";\n        }\n        if (state.target) {\n            if (!this.targetGesto) {\n                this.targetGesto = getTargetAbleGesto(this, nextTarget, \"Group\");\n            }\n            if (!this.controlGesto) {\n                this.controlGesto = getAbleGesto(this, this.controlBox.getElement(), \"controlAbles\", \"GroupControl\");\n            }\n        }\n        const isContainerChanged = !equals(state.container, props.container);\n\n        if (isContainerChanged) {\n            state.container = props.container;\n        }\n        const { added, changed, removed } = this.differ.update(props.targets!);\n\n        const isTargetChanged = added.length || removed.length;\n\n        if (isContainerChanged || isTargetChanged || changed.length) {\n            this.updateRect();\n        }\n        this._isPropTargetChanged = !!isTargetChanged;\n    }\n    protected _updateObserver() { }\n}\n\n/**\n * Sets the initial rotation of the group.\n * @name Moveable.Group#defaultGroupRotate\n * @default 0\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupRotate: 0,\n * });\n *\n * moveable.defaultGroupRotate = 40;\n */\n\n/**\n * Sets the initial origin of the group.\n * @name Moveable.Group#defaultGroupOrigin\n * @default 0\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupOrigin: \"50% 50%\",\n * });\n *\n * moveable.defaultGroupOrigin = \"20% 40%\";\n */\n\n\n/**\n * Whether to hide the line in child moveable for group corresponding to the rect of the target.\n * @name Moveable.Group#hideChildMoveableDefaultLines\n * @default false\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   hideChildMoveableDefaultLines: false,\n * });\n *\n * moveable.hideChildMoveableDefaultLines = true;\n */\nexport default MoveableGroup;\n","import { ref, refs } from \"framework-utils\";\nimport * as React from \"react\";\nimport MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, RectInfo } from \"./types\";\nimport { prefix } from \"./utils\";\n\n/**\n * @namespace Moveable.IndividualGroup\n * @description Create targets individually, not as a group.Create targets individually, not as a group.\n */\nclass MoveableIndividualGroup extends MoveableManager<GroupableProps> {\n    public moveables: MoveableManager[] = [];\n    public render() {\n        const {\n            cspNonce,\n            cssStyled: ControlBoxElement,\n            targets,\n        } = this.props;\n\n        return <ControlBoxElement\n            cspNonce={cspNonce}\n            ref={ref(this, \"controlBox\")}\n            className={prefix(\"control-box\")}>\n            {targets!.map((target, i) => {\n                return <MoveableManager\n                    key={\"moveable\" + i}\n                    ref={refs(this, \"moveables\", i)}\n                    {...this.props}\n                    target={target}\n                    wrapperMoveable={this}\n                />;\n            })}\n        </ControlBoxElement>;\n    }\n    public componentDidUpdate() {}\n    public getTargets() {\n        return this.props.targets!;\n    }\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, isTarget, isSetState);\n        });\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public request() {\n        return {\n            request() {\n                return this;\n            },\n            requestEnd() {\n                return this;\n            },\n        };\n    }\n    public dragStart() {\n        return this;\n    }\n    public hitTest() {\n        return 0;\n    }\n    public isInside() {\n        return false;\n    }\n    public isDragging() {\n        return false;\n    }\n    public updateRenderPoses() { }\n    public checkUpdate() { }\n    public triggerEvent() { }\n    protected updateAbles() { }\n    protected _updateEvents() { }\n    protected _updateObserver() {}\n}\n\n/**\n * Create targets individually, not as a group.\n * @name Moveable.IndividualGroup#individualGroupable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   individualGroupable: true,\n * });\n */\nexport default MoveableIndividualGroup;\n","import * as React from \"react\";\nimport {\n    Able, MoveableInterface, GroupableProps, MoveableDefaultProps,\n    IndividualGroupableProps, MoveableManagerInterface, MoveableRefTargetsResultType,\n    MoveableTargetGroupsType, BeforeRenderableProps, RenderableProps, MoveableManagerState,\n} from \"./types\";\nimport MoveableManager from \"./MoveableManager\";\nimport MoveableGroup from \"./MoveableGroup\";\nimport { ref, withMethods, prefixCSS } from \"framework-utils\";\nimport { find, getKeys, IObject, isArray, isString } from \"@daybrush/utils\";\nimport { MOVEABLE_METHODS, PREFIX, MOVEABLE_CSS } from \"./consts\";\nimport Default from \"./ables/Default\";\nimport Groupable from \"./ables/Groupable\";\nimport DragArea from \"./ables/DragArea\";\nimport styled from \"react-css-styled\";\nimport { getRefTargets } from \"./utils\";\nimport IndividualGroupable from \"./ables/IndividualGroupable\";\nimport MoveableIndividualGroup from \"./MoveableIndividualGroup\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\n\n\nfunction getElementTargets(\n    refTargets: MoveableRefTargetsResultType,\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\n): Array<SVGElement | HTMLElement> {\n    const elementTargets: Array<SVGElement | HTMLElement> = [];\n\n    refTargets.forEach(target => {\n        if (!target) {\n            return;\n        }\n        if (isString(target)) {\n            if (selectorMap[target]) {\n                elementTargets.push(...selectorMap[target]);\n            }\n            return;\n        }\n        if (isArray(target)) {\n            elementTargets.push(...getElementTargets(target, selectorMap));\n        } else {\n            elementTargets.push(target);\n        }\n    });\n\n    return elementTargets;\n}\nfunction getTargetGroups(\n    refTargets: MoveableRefTargetsResultType,\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\n) {\n    const targetGroups: MoveableTargetGroupsType = [];\n\n    refTargets.forEach(target => {\n        if (!target) {\n            return;\n        }\n        if (isString(target)) {\n            if (selectorMap[target]) {\n                targetGroups.push(...selectorMap[target]);\n            }\n            return;\n        }\n        if (isArray(target)) {\n            targetGroups.push(getTargetGroups(target, selectorMap));\n        } else {\n            targetGroups.push(target);\n        }\n    });\n\n    return targetGroups;\n}\nfunction compareRefTargets(\n    prevRefTargets: MoveableRefTargetsResultType,\n    nextRefTargets: MoveableRefTargetsResultType,\n): boolean {\n    return (prevRefTargets.length !== nextRefTargets.length) || prevRefTargets.some((target, i) => {\n        const nextTarget = nextRefTargets[i];\n\n        if (!target && !nextTarget) {\n            return false;\n        } else if (target != nextTarget) {\n            if (isArray(target) && isArray(nextTarget)) {\n                return compareRefTargets(target, nextTarget);\n            }\n            return true;\n        }\n        return false;\n    });\n}\n\ntype DefaultAbles = GroupableProps & IndividualGroupableProps & BeforeRenderableProps & RenderableProps;\n\nexport class InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & DefaultAbles & T> {\n    public static defaultAbles: Able[] = [];\n    public static customStyledMap: Record<string, any> = {};\n    public static defaultStyled: any = null;\n    public static makeStyled() {\n        const cssMap: IObject<boolean> = {};\n\n        const ables = this.getTotalAbles();\n        ables.forEach(({ css }: Able) => {\n            if (!css) {\n                return;\n            }\n            css.forEach(text => {\n                cssMap[text] = true;\n            });\n        });\n        const style = getKeys(cssMap).join(\"\\n\");\n\n        this.defaultStyled = styled(\"div\", prefixCSS(PREFIX, MOVEABLE_CSS + style));\n    }\n    public static getTotalAbles(): Able[] {\n\n        return [Default, Groupable, IndividualGroupable, DragArea, ...this.defaultAbles];\n    }\n    @withMethods(MOVEABLE_METHODS)\n    public moveable!: MoveableManager | MoveableGroup | MoveableIndividualGroup;\n    public refTargets: MoveableRefTargetsResultType = [];\n    public selectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n    private _differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    private _elementTargets: Array<HTMLElement | SVGElement> = [];\n    private _onChangetarget: (() => void) | null = null;\n    public render() {\n        const moveableContructor = (this.constructor as typeof InitialMoveable);\n\n        if (!moveableContructor.defaultStyled) {\n            moveableContructor.makeStyled();\n        }\n        const {\n            ables: userAbles,\n            props: userProps,\n            ...props\n        } = this.props;\n        const refTargets = this._updateRefs(true);\n        const elementTargets = getElementTargets(refTargets, this.selectorMap);\n\n        const isGroup = elementTargets.length > 1;\n        const totalAbles = moveableContructor.getTotalAbles();\n        const ables = [\n            ...totalAbles,\n            ...(userAbles as any || []),\n        ];\n        const nextProps = {\n            ...props,\n            ...(userProps || {}),\n            ables,\n            cssStyled: moveableContructor.defaultStyled,\n            customStyledMap: moveableContructor.customStyledMap,\n        };\n\n        this._elementTargets = elementTargets;\n\n        let firstRenderState: MoveableManagerState | null = null;\n        const prevMoveable = this.moveable;\n\n\n        if (isGroup) {\n            if (props.individualGroupable) {\n                return <MoveableIndividualGroup key=\"individual-group\" ref={ref(this, \"moveable\")}\n                    {...nextProps}\n                    target={null}\n                    targets={elementTargets}\n                />;\n            }\n            const targetGroups = getTargetGroups(refTargets, this.selectorMap);\n\n            // manager\n            if (prevMoveable && !prevMoveable.props.groupable && !(prevMoveable.props as any).individualGroupable) {\n                const target = prevMoveable.props.target!;\n\n                if (target && elementTargets.indexOf(target) > -1) {\n                    firstRenderState = { ...prevMoveable.state };\n                }\n            }\n\n            return <MoveableGroup key=\"group\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={null}\n                targets={elementTargets}\n                targetGroups={targetGroups}\n                firstRenderState={firstRenderState}\n            />;\n        } else {\n            const target = elementTargets[0];\n            // manager\n            if (prevMoveable && (prevMoveable.props.groupable || (prevMoveable.props as any).individualGroupable)) {\n                const moveables = (prevMoveable as MoveableGroup | MoveableIndividualGroup).moveables || [];\n                const prevTargetMoveable = find(moveables, mv => mv.props.target === target);\n\n                if (prevTargetMoveable) {\n                    firstRenderState = { ...prevTargetMoveable.state };\n                }\n            }\n\n            return <MoveableManager<any> key=\"single\" ref={ref(this, \"moveable\")}\n                {...nextProps}\n                target={target}\n                firstRenderState={firstRenderState} />;\n        }\n    }\n    public componentDidMount() {\n        this._updateRefs();\n    }\n    public componentDidUpdate() {\n        const { added, removed } = this._differ.update(this._elementTargets);\n        const isTargetChanged = added.length || removed.length;\n\n        if (isTargetChanged && this._onChangetarget) {\n            this._onChangetarget();\n        }\n\n        this._updateRefs();\n    }\n    public componentWillUnmount() {\n        this.selectorMap = {};\n        this.refTargets = [];\n    }\n    /**\n     * Get targets set in moveable through target or targets of props.\n     * @method Moveable#getTargets\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body, {\n     *    target: [targetRef, \".target\", document.querySelectorAll(\".target\")],\n     * });\n     *\n     * console.log(moveable.getTargets());\n     */\n    public getTargets() {\n        return this.moveable?.getTargets() ?? [];\n    }\n    /**\n     * If the element list corresponding to the selector among the targets is changed, it is updated.\n     * @method Moveable#updateSelectors\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body, {\n     *    target: \".target\",\n     * });\n     *\n     * moveable.updateSelectors();\n     */\n    public updateSelectors() {\n        this.selectorMap = {};\n        this._updateRefs();\n    }\n    /**\n     * User changes target and waits for target to change.\n     * @method Moveable#waitToChangeTarget\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.querySelector(\".target\").addEventListener(\"mousedown\", e => {\n     *   moveable.waitToChangeTarget().then(() => {\n     *      moveable.dragStart(e.currentTarget);\n     *   });\n     *   moveable.target = e.currentTarget;\n     * });\n     */\n    public waitToChangeTarget(): Promise<void> {\n        // let resolvePromise: (e: OnChangeTarget) => void;\n\n        // this._onChangetarget = () => {\n        //     this._onChangetarget = null;\n        //     resolvePromise({\n        //         moveable: this.getManager(),\n        //         targets: this._elementTargets,\n        //     });\n        // };\n\n        // return new Promise<OnChangeTarget>(resolve => {\n        //     resolvePromise = resolve;\n        // });\n        let resolvePromise: () => void;\n\n        this._onChangetarget = () => {\n            this._onChangetarget = null;\n            resolvePromise();\n        };\n\n        return new Promise(resolve => {\n            resolvePromise = resolve;\n        });\n    }\n    public getManager(): MoveableManagerInterface<any, any> {\n        return this.moveable;\n    }\n    private _updateRefs(isRender?: boolean) {\n        const prevRefTargets = this.refTargets;\n        const nextRefTargets = getRefTargets((this.props.target || this.props.targets) as any);\n        const isBrowser = typeof document !== \"undefined\";\n\n        let isUpdate = compareRefTargets(prevRefTargets, nextRefTargets);\n        const selectorMap = this.selectorMap;\n        const nextSelectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n\n        this.refTargets.forEach(function updateSelectorMap(target) {\n            if (isString(target)) {\n                const selectorTarget = selectorMap[target];\n\n                if (selectorTarget) {\n                    nextSelectorMap[target] = selectorMap[target];\n                } else if (isBrowser) {\n                    isUpdate = true;\n                    nextSelectorMap[target] = [].slice.call(document.querySelectorAll(target));\n                }\n            } else if (isArray(target)) {\n                target.forEach(updateSelectorMap);\n            }\n        });\n\n        this.refTargets = nextRefTargets;\n        this.selectorMap = nextSelectorMap;\n\n        if (!isRender && isUpdate) {\n            this.forceUpdate();\n        }\n        return nextRefTargets;\n    }\n}\nexport interface InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & DefaultAbles & T>,\n    MoveableInterface {\n    setState(state: any, callback?: () => any): any;\n    forceUpdate(callback?: () => any): any;\n}\n","import { MoveableProps, Able } from \"./types\";\nimport { MOVEABLE_ABLES } from \"./ables/consts\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport default class Moveable<T = {}> extends InitialMoveable<MoveableProps & T> {\n    public static defaultAbles: Able[] = MOVEABLE_ABLES as any;\n}\n","import { IObject } from \"@daybrush/utils\";\nimport { Able } from \"./types\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport function makeMoveable<T extends IObject<any> = {}>(\n    ables: Array<Able<T>>): typeof InitialMoveable & (new (...args: any[]) => InitialMoveable<T>) {\n    return class Moveable extends InitialMoveable<T> {\n        public static defaultAbles = ables;\n    };\n}\n","import Moveable, * as modules from \"./index.esm\";\n\nfor (const name in modules) {\n    (Moveable as any)[name] = (modules as any)[name];\n}\n\nmodule.exports = Moveable;\nexport * from \"./index.esm\";\nexport default Moveable;\n"],"names":["makeAble","name","able","__assign","events","props","_a","Boolean","getSVGCursor","scale","degree","concat","getCursorCSS","x1","degree45","Math","round","defaultCursor","agent","getAgent","IS_WEBKIT","browser","webkit","IS_WEBKIT605","navi","window","userAgent","navigator","res","exec","toLowerCase","parseFloat","IS_FIREFOX","IS_SAFARI_ABOVE15","parseInt","webkitVersion","version","PREFIX","MOVEABLE_CSS","map","join","NEARBY_POS","FLOAT_POINT_NUM","TINY_NUM","MIN_SCALE","MAX_NUM","pow","MIN_NUM","DIRECTIONS4","DIRECTIONS","DIRECTION_REGION_TO_DIRECTION","n","e","s","w","nw","ne","sw","se","DIRECTION_INDEXES","DIRECTION_ROTATIONS","MOVEABLE_METHODS","setCustomDrag","state","delta","isPinch","isConvert","ableName","result","gestos","move","inputEvent","datas","originalDatas","ableDatas","convertDragDist","parentEvent","CustomGesto","prevX","prevY","startX","startY","isDrag","isFlag","draggable","dragStart","client","type","drag","clientX","clientY","distX","distY","deltaX","deltaY","parentGesto","calculatePointerDist","moveable","moveableClientRect","rootMatrix","is3d","pos1","left","top","_b","minus","calculateInversePosition","posX","posY","_c","getDragDist","setDragStart","allMatrix","beforeMatrix","origin","offsetMatrix","targetMatrix","transformOrigin","matrix","inverseMatrix","invert","inverseBeforeMatrix","absoluteOrigin","convertPositionMatrix","plus","startDragBeforeDist","calculate","startDragDist","getTransformDirection","calculateMoveablePosition","beforeTransform","direction","resolveTransformEvent","event","functionName","beforeRenderable","index","transformIndex","nextTransforms","length","nextTransformAppendedIndexes","nextIndex","find","info","filter","convertTransformInfo","targetFunction","matFunctionName","beforeFunctionTexts","afterFunctionTexts","beforeFunctionMatrix","beforeTransform2","beforeFunctionMatrix2","targetTansform","targetFunctionMatrix","afterTransform","afterFunctionMatrix","afterTransform2","afterFunctionMatrix2","targetAllTransform","allFunctionMatrix","splice","isAppendTransform","__spreadArray","isAppend","convertTransformFormat","value","dist","getTransformDist","getBeforeDragDist","bx","by","getTransfromMatrix","fromTranslation","isAfter","nextTargetMatrix","multiply","res1","afterTargetMatrix","isBefore","getInverseDragDist","calculateTransformOrigin","width","height","prevWidth","prevHeight","prevOrigin","pos","i","splitUnit","unit","prevSize","size","isNaN","measureRatio","getPosIndexesByDirection","indexes","push","getPosesByDirection","poses","getPosByDirection","xRatio","yRatio","dot","bottom","getDist","startPos","fixedDirection","calculatePoses","fixedPos","getNextMatrix","getAbsoluteMatrix","getNextTransformMatrix","transform","targetTransform","parseMat","convertDimension","scaleMatrix","createScaleMatrix","fillTransformStartEvent","getBeforeRenderableDatas","setTransform","startTransforms","isArray","splitSpace","setTransformIndex","setDefaultTransformIndex","property","findIndex","func","indexOf","parse","startValue","functionValue","fillOriginalTransform","getNextTransforms","getNextTransformText","getNextStyle","nextStyle","fillTransformEvent","nextTransform","Draggable","fillCSSObject","getTranslateDist","fixedPosition","groupable","nextMatrix","groupLeft","groupTop","nextFixedPosition","getDirectionOffset","getScaleDist","scaleDist","getOriginDirection","nextFixedOffset","calculatePosition","getRotateDist","rotateDist","getResizeDist","nextOrigin","getAbsolutePosition","getAbsolutePosesByState","getGestoData","targetGesto","controlGesto","data","getEventData","multiply2","pos2","prefix","classNames","_i","arguments","prefixNames","apply","defaultSync","fn","getTransformMatrix","isObject","multiplies","createOriginMatrix","a","measureSVGSize","el","isHorizontal","viewBox","getSVGViewBox","ownerSVGElement","getBeforeTransformOrigin","relativeOrigin","getTransformOrigin","getComputedStyle","o","style","split","getElementTransform","target","computedStyle","computedTransform","list","baseVal","matrixes","chr","getOffsetInfo","lastParent","isParent","body","document","hasSlot","parentSlotElement","assignedSlotParentElement","assignedSlot","parentElement","isCustomElement","isEnd","position","tagName","willChange","slotParentNode","parentNode","targetParentNode","nodeType","host","isStatic","offsetParent","getOffsetPosInfo","offsetLeft","offsetTop","isSVG","isUndefined","hasOffset","targetOrigin","slice","getSVGGraphicsOffset","offset","getBodyOffset","bodyStyle","bodyPosition","marginLeft","marginTop","right","convert3DMatrixes","forEach","getBodyScrollPos","documentElement","scrollLeft","scrollTop","getPositionFixedInfo","fixedContainer","hasTransform","makeMatrixCSS","convertMatrixtoCSS","clientWidth","clientHeight","x","y","getSVGMatrix","viewBoxWidth","viewBoxHeight","scaleX","scaleY","preserveAspectRatio","align","meetOrSlice","svgOrigin","translate","xAlign","yAlign","floor","scaleDimension","max","min","isGTarget","getBBox","bbox","getRect","posesX","posesY","rectWidth","rectHeight","calculateRect","getSVGOffset","offsetInfo","targetInfo","container","getSize","offsetWidth","offsetHeight","containerClientRect","getBoundingClientRect","margin","rect","rectLeft","clientLeft","rectTop","clientTop","mat","prevLeft","prevTop","posOrigin","rectOrigin","count","mat2","_d","nextLeft","nextTop","distLeft","distTop","abs","p","calculateMoveableClientPositions","rootClientRect","rootPoses","y1","x2","y2","x3","y3","x4","y4","_e","originX","originY","getShapeDirection","pos3","pos4","getDistSize","vec","sqrt","getDiagonalSize","getLineStyle","zoom","rad","getRad","getControlTransform","rotation","reduce","prev","getProps","self","cssWidth","cssHeight","contentWidth","contentHeight","minWidth","minHeight","minOffsetWidth","minOffsetHeight","maxWidth","Infinity","maxHeight","maxOffsetWidth","maxOffsetHeight","svg","targetStyle","boxSizing","borderLeft","borderLeftWidth","borderRight","borderRightWidth","borderTop","borderTopWidth","borderBottom","borderBottomWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","horizontalPadding","verticalPadding","horizontalBorder","verticalBorder","horizontalOffset","verticalOffset","containerWidth","containerHeight","parentStyle","convertUnitSize","inlineCSSWidth","inlineCSSHeight","computedWidth","computedHeight","between","getRotationRad","resetClientRect","scrollWidth","scrollHeight","getClientRect","isExtends","innerWidth","innerHeight","scrollPos","clientRect","overflow","getTotalDirection","parentDirection","getDirection","deg","getAttribute","direciton","dir","getAbsolutePoses","roundSign","num","unset","resolvedEvent","cssText","getKeys","decamelize","fillAfterTransform","prevEvent","nextEvent","fillParams","params","isBeforeEvent","nextParams","currentTarget","stopDrag","stop","call","isStartEvent","lastEvent","fillEndParams","isDouble","catchEvent","callback","_emitter","on","triggerEvent","isManager","pseudoElt","filterAbles","ables","methods","triggerAblesSimultaneously","enabledAbles","ableGroups","some","method","ableGroup","equals","a1","a2","selectValue","values","groupBy","arr","groups","groupKeys","groupKey","keyIndex","group","groupByMap","flat","cur","maxOffset","args","sort","b","calculatePadding","convertCSSSize","isRelative","getTinyDist","v","getDirectionViewClassName","isDragging","className","getDirectionCondition","checkAbles","isRequest","requestAble","hasClass","invertObject","obj","nextObj","transforms","undefined","beforeFunctionTexts2","targetFunctionText","afterFunctionTexts2","beforeFunctions","beforeFunctions2","targetFunctions","afterFunctions","afterFunctions2","toMat","isArrayFormat","Element","getRefTarget","isSelector","isString","querySelector","isFunction","current","getRefTargets","targets","userTargets","querySelectorAll","getAbsoluteRotation","PI","getDragDistByState","calculateMatrixDist","getSizeDistByDist","startSize","ratio","keepRatio","startOffsetWidth","startOffsetHeight","distWidth","distHeight","standardRad","signSize","cos","startWidthSize","startHeightSize","distSize","ratioRad","sin","getOffsetSizeDist","sizeDirection","parentDistance","parentDist","parentScale","startFixedDirection","directionsDists","directionRatios","ratioDistance","dist_1","onPinchStart","onPinch","onPinchEnd","onPinchGroupStart","onPinchGroup","onPinchGroupEnd","pinchStart","angle","pinchable","eventName","controlEventName","pinchAbles","controlAbles","canPinch","ableEvent","parentRotate","snapRenderInfo","request","pinch","pinchScale","distance","pinchEnd","pinchGroupStart","pinchGroup","pinchGroupEnd","fillChildEvents","groupableDatas","childDatas","moveables","_","triggerChildGesto","isStart","match","childs","ev","childMoveable","childEvent","childGestos","parentFlag","child","triggerChildAbles","eachEvent","VERTICAL_NAMES","HORIZONTAL_NAMES","VERTICAL_NAMES_MAP","start","end","center","HORIZONTAL_NAMES_MAP","hasGuidelines","snappable","bounds","innerBounds","verticalGuidelines","horizontalGuidelines","snapGridWidth","snapGridHeight","guidelines","enableSnap","getSnapDirections","snapDirections","mapSnapDirectionPoses","snapPoses","nextSnapDirections","nextSnapPoses","splitSnapDirectionPoses","horizontalNames","verticalNames","horizontal","vertical","calculateContainerPos","containerRect","clientPos","solveLineConstants","point1","point2","dx","dy","c","throttle","checkMoveableSnapPoses","customSnapThreshold","snapThreshold","checkSnapPoses","checkSnap","checkSnapKeepRatio","endPos","endX","endY","isBottom","isRight","verticalInfo","isSnap","horizontalInfo","verticalSnapInfo","horizontalSnapInfo","posInfos","getNearestSnapGuidelineInfo","isVerticalSnap","verticalGuideline","guideline","isHorizontalSnap","horizontalGuideline","horizontalPos","verticalPos","checkSnaps","snapInfo","posInfo","guidelineInfo","guidelineInfos","targetType","targetPoses","isVertical","posType","snapPosInfos","targetPos","snapPosInfo","getSnapInfosByDirection","snapDirection","nextPoses","alignPoses","checkSnapBoundPriority","aDist","bDist","isBound","getNearOffsetInfo","offsets","aSign","sign","bSign","aOffset","bOffset","getCheckSnapDirections","directions","endDirection_1","signX","signY","nextDirection","signs","isStartLine","line","cx","average","cy","hitTestLine","test1","test2","isSameStartLine","dots","centerSign","error","every","checkInnerBoundDot","threshold","checkInnerBound","verticalSign","horizontalSign","lineConstants","isAllBound","isVerticalBound","isHorizontalBound","leftLine","topLine","rightLine","bottomLine","topBoundInfo","checkLineBoundCollision","bottomBoundInfo","leftBoundInfo","rightBoundInfo","isAllVerticalBound","isAllHorizontalBound","boundLine","isRender","dot1","boundDot1","boundDot2","dy2","dx2","hasDx","hasDy","slope","getInnerBoundInfo","lineInfos","multiple","sizeOffset","getInnerBoundDragInfo","lines","getCheckInnerBoundLineInfos","innerBoundInfo","widthOffsetInfo","heightOffsetInfo","getCheckSnapLineDirections","lineDirections","virtualPoses","dir1","dir2","virtualLine","isBoundRotate","relativePoses","boundDots","rotate","getDistPointLine","solveReverseLine","checkRotateInnerBounds","prevPoses","relativeLeft","relativeRight","relativeTop","relativeBottom","dotInfos","lineRad","lineDist","dotDist","dotRad","distRad","acos","nextRad1","nextRad2","nextRad","checkInnerBoundPoses","horizontalPoses","verticalPoses","boundMap","lineInfo","isHorizontalStart","isVerticalStart","checkBoundPoses","_f","nextBounds","checkBounds","getBounds","externalBounds","snapOffset","snapOffsetLeft","snapOffsetTop","snapOffsetRight","snapOffsetBottom","isCSS","_g","checkBoundKeepRatio","startBoundPos","endBoundPos","minPos","maxPos","boundInfos","boundRect","boundRotate","boundPos","r","nextPos","checkRotateBounds","relativeRad1","relativeRad2","renderGuideline","React","key","scaleType","createElement","renderInnerGuideline","sizeValue","posValue","renderSnapPoses","renderPos","renderGuidelines","targetRect","isDisplayInnerSnapDigit","mainNames","targetStart","targetEnd","hide","elementRect","element","renderDigitLine","lineType","gap","snapDigit","isDisplaySnapDigit","snapDistFormat","sizeName","absGap","snapSize","toFixed","groupByElementGuidelines","otherIndex","names","nextGuidelines","inner","elementRect1","elementRect2","nextPos1","nextPos2","total","renderDashedGuidelines","rendered","sideNames","sidePos","prevRect","nextRect","size1","size2","renderPos1","renderPos2","renderGapGuidelines","targetSideStart","targetSideEnd","gapRects","sideStartPos","sideEndPos","sideCenterPos","solveEquation","solveNextOffset","isOutside","dist1","dist2","widthOffset","heightOffset","getSnapBound","boundInfo","checkThrottleDragRotate","throttleDragRotate","offsetX","offsetY","adjustPoses","adjustPos","prevDistY","checkSnapBoundsDrag","absolutePoses","boundPoses","middle","checkMoveableSnapBounds","verticalSnapBoundInfo","horizontalSnapBoundInfo","verticalInnerBoundInfo","horizontalInnerBoundInfo","horizontalBoundInfos","verticalBoundInfos","horizontalDist","verticalDist","snapIndex","snap","checkSnapBounds","guideines","checkSnapRightLine","snapBoundInfo","rad180","isHorizontalLine","isVerticalLine","getSnapBoundInfo","startDirection","endDirection","otherStartPos","otherEndPos","checkSnapBoundsKeepRatio","otherHorizontalOffset","isOtherHorizontalBound","isOtherHorizontalSnap","otherVerticalOffset","isOtherVerticalBound","isOtherVerticalSnap","snapLine","getSnapBoundOffset","horizontalBoundInfo","verticalBoundInfo","checkMaxBounds","left_1","top_1","right_1","bottom_1","otherDirection","isCheckVertical","isCheckHorizontal","otherPos","nextOtherPos","isHeightOutside","isWidthOutside","getTotalGuidelines","containerClientHeight","containerClientWidth","snapGap","_h","maxSnapElementGuidelineDistance","_j","elementGuidelines","getElementGuidelines","totalGuidelines","getGapGuidelines","getGridGuidelines","getDefaultGuidelines","checkBetweenRects","maxSnapElementGapDistance","elementRects","gapGuidelines","targetCenter","targetStart2","targetEnd2","nextElementRects","snapRect1","snapRect2","rect1","rect2","rect1Start","rect1End","rect2Start","rect2End","isCenter","prevValues","snapRect","refresh","nextElementGuidelines","diff","maintained","added","nextValues","prevIndex","getSnapElementRects","elementSnapDirections","topValue","leftValue","rightValue","bottomValue","centerValue","middleValue","sizes","snapWidth","snapHeight","nextPosInfo","targetClientRect","containerLeft","containerTop","getMinMaxs","targetLeft","minX","targetTop","minY","elementLeft","elementTop","elementRight","elementBottom","snapStart","snapContainer","snapContainerTarget","snapContainerRect","offset1","offset2","getNextFixedPoses","nextFixedPos","getSizeOffsetInfo","innerBoundLineInfos","recheckSizeByTwoDirection","snapPos","nextWidthOffset","nextHeightOffset","nextWidth","nextHeight","checkSizeDist","getNextPoses","isWidthBound","isHeightBound","widthDist","heightDist","isGetWidthOffset","checkSnapRotate","origin2","checkSnapResize","nextAllMatrix","checkSnapScale","sizeDist","startCheckSnapDrag","getSnapGuidelines","addBoundGuidelines","verticalSnapPoses","horizontalSnapPoses","verticalInnerBoundPoses","horizontalInnerBoundPoses","innerPos","directionCondition","dragRelation","Array","Object","Number","Function","onSnap","css","render","minLeft","minTop","externalPoses","snapInfos","hasExternalPoses","externalRect","verticalPosInfos","horizontalPosInfos","allGuidelines","elements","gaps","dragEnd","dragControlCondition","rotatableDragControlCondtion","dragControlStart","dragControl","dragControlEnd","dragGroupStart","dragGroup","dragGroupEnd","dragGroupControlStart","dragGroupControl","dragGroupControlEnd","renderDirectionControlsByInfos","renderDirections","getState","renderPoses","rotationRad","degRotation","directionMap","renderState","renderDirectionMap","directionRotation","dataAttrs","renderDirectionControls","defaultDirections","renderAroundControls","renderLine","renderEdgeLines","edge","index1","index2","getRenderDirections","renderDiagonalDirections","renderAllDirections","throttleDrag","startDragRotate","edgeDraggable","onDragStart","onDrag","onDragEnd","onDragGroupStart","onDragGroup","onDragGroupEnd","dragInfo","beforeOrigin","prevDist","prevBeforeDist","deltaOffset","set","startRect","parentMoveable","dragRotateRad","ry","rx","beforeTranslate","throttleArray","beforeDist","beforeDelta","passDelta","passDist","dragAfter","param","isControl","requestStart","requestEnd","resizable","throttleResize","resizeFormat","keepRatioFinally","onResizeStart","onBeforeResize","onResize","onResizeEnd","onResizeGroupStart","onBeforeResizeGroup","onResizeGroup","onResizeGroupEnd","viewClassName","isGroup","parentFixedDirection","minSize","startWidth","startHeight","maxSize","startOffsetMatrix","startTransformOrigin","isWidth","parentIsWidth","setRatio","isFinite","startPositions","setFixedDirection","setMin","setMax","nextMaxSize","isNumber","startRatio","setOrigin","isResize","parentKeepRatio","dragClient","resolveMatrix","targetN","getNextBoundingSize","nextSize","boundingWidth","boundingHeight","nextFixedDirection","setSize","snapDist","computeSize","isNoSnap","calculateBoundSize","inverseDelta","dragControlAfter","errorWidth","errorHeight","isErrorWidth","isErrorHeight","dragGroupControlCondition","originalEvents","setDist","createRotateMatrix","originalX","originalY","parentStartOffsetWidth","parentStartOffsetHeight","updateGroupMin","originalMinSize","childMinSize","childStartOffsetWidth","childStartOffsetHeight","parentMinWidth","parentMinHeight","updateGroupMax","originalMaxSize","childMaxSize","parentMaxWidth","parentMaxHeight","deltaWidth","deltaHeight","setRotateStartInfo","startAbsoluteOrigin","prevDeg","defaultDeg","prevSnapDeg","loop","startDist","getAbsoluteDist","normalizedPrevDeg","getAbsoluteDistByClient","getRotateInfo","moveableRect","throttleRotate","snapRotation","snapDeg","getRotationPositions","rotationPosition","radPoses","isReverse","rotationTarget","contains","directionCSS","rotatable","String","rotateAroundControls","resolveAblesWithRotatable","onRotateStart","onBeforeRotate","onRotate","onRotateEnd","onRotateGroupStart","onBeforeRotateGroup","onRotateGroup","onRotateGroupEnd","positions","jsxs","resolveMap_1","directionControlInfos","resolve","beforeDirection","resizeStart","startClientX","startClientY","externalRotate","beforeInfo","afterInfo","absoluteInfo","inputTarget","regionDirection","controlDirection","isAroundControl","resolveAble","clientPoses","originalFixedDirection_1","originalPosition","getOrigin","fixedBeforeOrigin","fixedAfterOrigin","Resizable","rotatation","isRotate","groupDelta","targetDirection","beforeRotation","absoluteDelta","absoluteDist","absoluteRotation","startRotation","absoluteStartRotation","nextClientX","nextClientY","setRotation","nextRotation","inverseDist","prevInverseDist","requestValue","dragEvent","transformEvent","resize","resizeEvent","beforeRotate","absoluteRotate","parentLeft","parentTop","parentBeforeOrigin","childClient","startGroupClient","groupClient","prevClientX","prevClientY","rotateMatrix","setGroupRotation","distRotate","getRotation","deltaRotate","scalable","throttleScale","onScaleStart","onBeforeScale","onScale","onScaleEnd","onScaleGroupStart","onBeforeScaleGroup","onScaleGroup","onScaleGroupEnd","scaleWidth","scaleHeight","scaleXRatio","scaleYRatio","isScale","getNextScale","stateDirection","setScale","nextScale","scaleEndParam","moveableScale","getMiddleLinePos","getTriangleRad","rad1","rad2","isValidPos","poses1","poses2","pi","warpable","onWarpStart","onWarp","onWarpEnd","linePosFrom1","linePosFrom2","linePosFrom3","linePosFrom4","linePosTo1","linePosTo2","linePosTo3","linePosTo4","warpTargetMatrix","targetInverseMatrix","ignoreDimension","createIdentityMatrix","prevMatrix","posIndexes","isWarp","selectedPoses","nearByPoses","h","createWarpMatrix","afterMatrix","totalMatrix","AREA_PIECES","AREA_PIECE","AVOID","VIEW_DRAGGING","restoreStyle","areaElement","removeClass","renderPieces","dragArea","passDragArea","onClick","onClickGroup","ref","isDragArea","rects","children","nextElementSibling","addClass","disableNativeEvent","enableNativeEvent","requestAnimationFrame","getDefaultScrollPosition","scrollContainer","scrollable","scrollThreshold","getScrollPosition","onScroll","onScrollGroup","getContainer","dragScroll","DragScroll","scrollContainerElement","gestoName","scrollBy","checkScroll","dragGroupContro","dragGroupControEnd","dragTarget","portalContainer","rootContainer","useResizeObserver","pinchThreshold","pinchOutside","checkInput","cspNonce","translateZ","hideDefaultLines","flushSync","stopPropagation","preventClickEventOnDrag","preventClickDefault","viewContainer","padding","paddingDirections","paddingPos1","paddingPos2","paddingPos3","paddingPos4","RADIUS_DIRECTIONS","calculateRatio","sumSize","sumRatio","HORIZONTAL_RADIUS_ORDER","VERTICAL_RADIUS_ORDER","HORIZONTAL_RADIUS_DIRECTIONS","VERTICAL_RADIUS_DIRECTIONS","getRadiusStyles","clipStyles","radiusPoses","virtual","raws","rawPos","styles","getRadiusRange","controlPoses","horizontalRange","verticalRange","clipPose","sub","getRadiusValues","minCounts","full","splitIndex","splitLength","horizontalValues","verticalValues","horizontalValuesLength","verticalValuesLength","hasVerticalValues","nwValue","neValue","seValue","swValue","wnValue","_k","enValue","_l","esValue","_m","wsValue","horizontalRawPoses","verticalRawPoses","nextHorizontalPoses","nextVerticalPoses","raw","removeRadiusPos","startIndex","radiuslIndex","deleteCount","addRadiusPos","horizontalIndex","verticalIndex","radiusX","radiusY","startVerticalIndex","splitRadiusPoses","horizontals","verticals","CLIP_DIRECTIONS","CLIP_RECT_DIRECTIONS","getClipStyles","clipPath","clipRelative","clipType","clipPoses","isRect","isCircle","subWidth","subHeight","getRectPoses","xs","ys","dirx","diry","getControlSize","xRange","yRange","moveControlPos","dists","verticalDirections","horizontalDirections","verticalDirection_1","horizontalDirection_1","fixedIndex","nextDist","nextControlPoses_1","controlPose","controlDir","dirDir","dirHorizontal","dirVertical","getClipPath","defaultClip","customClip","clipText","clip","splitBracket","clipPrefix","splitter","splitComma","xPos","yPos","radiusX_1","radiusY_1","radius","xRadius","yRadius","centerPos_1","roundIndex","rectLength","radiusValues","_o","_p","_q","_r","nextRight","nextBottom","_s","addClipPath","clipIndex","clipEventType","clipStyle","removeClipPath","clippable","defaultClipPath","customClipPath","clipArea","dragWithClip","clipTargetBounds","clipVerticalGuidelines","clipHorizontalGuidelines","clipSnapThreshold","onClipStart","onClip","onClipEnd","clipPathState","snapBoundInfos","calculatedPos","controls","isInset","isPolygon","linePoses_1","to","from","clipLeft","clipTop","ellipseClipPath","piece","areaPoses","allWidth","allHeight","allLeft_1","allTop_1","directionType","snapPos1","snapPos2","isDragTarget","isClipStart","isLine","isArea","originalDraggable","originalDist","firstDist","isDragWithTarget","isAll","guidePoses","isEllipse","guideRect","guideXPoses","guideYPoses","rectPoses","rectDists_1","boundDelta","snapOffsetY","snapOffsetX","distSnapX","distSnapY","width_1","height_1","nextControlPoses_2","j","nextClipStyles","dragDist","originDraggable","originRelative","onDragOriginStart","onDragOrigin","onDragOriginEnd","startOrigin","startTargetOrigin","isDragOrigin","distOrigin","dragDelta","deltaOrigin","addBorderRadiusByLine","lineIndex","horizontalsLength","verticalsLength","controlIndex","controlPoseInfo","addBorderRadius","removeBorderRadius","getBorderRadius","borderRadius","triggerRoundEvent","roundRelative","borderRadiusState","roundable","minRoundControls","maxRoundControls","roundClickable","roundPadding","isDisplayShadowRoundControls","onRoundStart","onRound","onRoundEnd","verticalCount","horizontalCount","originalPos","isDisplay","display","indexAttr","replace","isRound","selectedControlPose","selectedVertical","selectedHorizontal","pose","poseDist","isIdentityMatrix","identityMatrix","onBeforeRenderStart","onBeforeRender","onBeforeRenderEnd","onBeforeRenderGroupStart","onBeforeRenderGroup","onBeforeRenderGroupEnd","cssMatrix","startTransform","resetStyle","fillDragStartParams","fillDragParams","_this","onRenderStart","onRender","onRenderEnd","onRenderGroupStart","onRenderGroup","onRenderGroupEnd","resultCount","fillDragEndParams","triggerAble","ableType","eventOperation","eventAffix","eventType","requestInstant","conditionName","isFirstStart","updateRect","requestAble_1","eventAbles","BeforeRenderable","Renderable","elementFromPoint","isDragStop","results","nextDatas","isEventStart","off","isUpdate","isForceEnd","preventDefault","isUnmounted","forceUpdate","checkMoveableTarget","eventTarget","isMoveableElement","controlBox","getElement","getTargetAbleGesto","moveableTarget","getAbleGesto","conditionFunctions","isTargetAbles","options","preventRightClick","preventWheelClick","preventClickEventOnDragStart","preventClickEventByCondition","gesto","Gesto","EventManager","_onEvent","addEventListener","setAbles","destroy","removeEventListener","getShadowRoot","getRootNode","rootNode","getMatrixStackInfo","checkContainer","targetTransformOrigin","hasFixed","offsetContainer","convertCSStoMatrix","isFixed","fixedInfo","offsetPos","isOffsetEnd","customOffsetParent","customOffsetLeft","customOffsetTop","parentClientLeft","parentClientTop","fixedClientLeft","fixedClientTop","isElementTarget","calculateMatrixStack","isAbsolute3d","prevTargetMatrix","rootMatrixes","isRoot3d","offsetRootContainer","isNext3d","isSVGGraphicElement","reverse","originalRootContainer","endContainer","rootMatrixBeforeOffset","nextInfo","isMatrix3d","calculateElementInfo","allResult","getElementInfo","getMoveableTargetInfo","moveableElement","parentContainer","rootContainerClientRect","beforePosition","originalBeforeOrigin","MoveableManager","_super","__extends","targetAbles","EventEmitter","_prevTarget","_prevDragArea","_isPropTargetChanged","_observer","_observerId","_rootContainer","_viewContainer","_viewClassNames","checkUpdateRect","cancelAnimationFrame","_onPreventClick","parentPosition","propsTarget","ControlBoxElement","cssStyled","_checkUpdateRootContainer","checkUpdate","updateRenderPoses","stateTarget","groupTargets","ableAttributes","getEnabledAbles","ableClassName","_getAbleClassName","firstRenderState","renderAbles","_renderLines","componentDidMount","wrapperMoveable","_checkUpdateViewContainer","_updateTargets","_updateNativeEvents","_updateEvents","updateCheckInput","_updateObserver","componentDidUpdate","prevProps","componentWillUnmount","_changeAbleViewClassNames","manager","getTargets","getAble","triggerDragStart","hitTest","points","fitPoints","getOverlapSize","totalSize","getAreaSize","isInside","isTarget","isSetState","updateState","updateTarget","statePos","getManager","isInstant","requsetAble","ableRequester","requester","ableParam","stateLeft","stateTop","stateContainer","updateAbles","isTargetChanged","isChanged","moveableContainer","unsetAbles","waitToChangeTarget","Promise","trigger","useCSS","tag","customStyleMap","customStyledMap","styled","updateSelectors","always","nextState","setState","Renderer","ResizeObserver","disconnect","observer","observe","box","controlBoxElement","hasTargetAble","hasControlAble","isUnset","_isTargetChanged","hideChildMoveableDefaultLines","useDragArea","prevTarget","prevDragArea","isDragAreaChanged","eventKeys","hasAbles","viewContainerOption","_getAbleViewClassNames","nextClassNames","prevClassNames","removed","targetGestoData","controlGestoData","trim","defaultProps","PureComponent","defaultGroupRotate","defaultGroupOrigin","targetGroups","renderGroupRects","refs","clickable","containsElement","containsTarget","targetIndex","parentTarget","getDraggableEvent","individualGroupable","MOVEABLE_ABLES","Default","Snappable","Pinchable","Scalable","Warpable","Rotatable","Scrollable","Padding","Origin","OriginDraggable","Clippable","Roundable","Groupable","IndividualGroupable","Clickable","DragArea","MOVEABLE_EVENTS_PROPS_MAP","MOVEABLE_PROPS_MAP","MOVEABLE_EVENTS_MAP","MOVEABLE_EVENTS","keys","MOVEABLE_PROPS","solveConstantsDistance","solveC","getMaxPos","getMinPos","getGroupRect","parentPoses","fixedRotation","a1_1","tan","a2_1","a1MinMax_1","a1MinMaxPos_1","a2MinMax_1","a2MinMaxPos_1","a1Dist","a2Dist","a1MinPos","a1MaxPos","a2MinPos","a2MaxPos","minHorizontalLine","maxHorizontalLine","minVerticalLine","maxVerticalLine","line1","line2","getIntersectionPointsByConstants","minX_1","minY_1","maxX","maxY","changedX","findMoveableGroups","childTargetGroups","targetGroup","childMoveableGroups","checked","finded","MoveableGroup","differ","ChildrenDiffer","checkeds","moveableGroups","isReset","updateGroup","getMoveableGroupRect","parentRotation","isRoot","posesRotations","rotations","groupRotation","firstRotation","isSameRotation","groupPoses","groupRect","rootGroupRect","prototype","nextTarget","isContainerChanged","update","changed","MoveableIndividualGroup","getElementTargets","refTargets","selectorMap","elementTargets","getTargetGroups","compareRefTargets","prevRefTargets","nextRefTargets","InitialMoveable","_differ","_elementTargets","_onChangetarget","makeStyled","cssMap","getTotalAbles","text","defaultStyled","prefixCSS","defaultAbles","moveableContructor","constructor","userAbles","userProps","__rest","_updateRefs","totalAbles","nextProps","prevMoveable","target_1","prevTargetMoveable","mv","resolvePromise","isBrowser","nextSelectorMap","updateSelectorMap","selectorTarget","__decorate","withMethods","Moveable","makeMoveable","modules","module","exports"],"mappings":"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"}